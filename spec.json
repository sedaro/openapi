{
 "openapi": "3.0.2",
 "info": {
  "title": "Sedaro API",
  "description": "\nAllows for consumption of Sedaro services.\nRead more about Sedaro at [docs.sedaro.com](https://docs.sedaro.com).\n\n### Clients\n\n**Python:** [sedaro](https://pypi.org/project/sedaro/)\n- This package provides additional functionality on top of the auto-generated OpenAPI client. See the package docs for more information.\n\n### API Key\n\nTo access the Sedaro service via this API, you will need an API key.  You can generate an API key for your account in the\nSedaro [Management Console](https://satellite.sedaro.com/#/account). Once complete, pass the API key in all requests\nvia the `X_API_KEY` HTTP header.\n\n*API keys grant full access to your account and should never be shared. If you think your API key has been compromised,\nyou can revoke it in the [Management Console](https://satellite.sedaro.com/#/account).*\n\n### Jupyter Notebooks\n\nFor additional examples of how to use this API for modeling and simulation, see our [Mod-Sim Notebooks](https://github.com/sedaro/modsim-notebooks).\n\n### Community, Support, Discussion\n\nIf you have any issues or suggestions, please reach out:\n\n1. Join the Sedaro Community [Slack](https://join.slack.com/t/sedaro-community/shared_invite/zt-1jps4i711-mXy88AZQ9AV7YcEXr8x7Ow)\n2. Email us at support@sedarotech.com\n\n### Known Issues\n\n- Error responses are more specific than what is shown throughout the documentation.  A 4xx or 5xx error will be returned\nin all error cases.  Only a `200` status indicates success.  See a given error response for additional details.\n",
  "version": "4.9.19",
  "x-logo": {
   "url": "https://api.sedaro.com/static/multimedia/logo_secondary_06142023.png",
   "backgroundColor": "#FAFAFA",
   "altText": "Sedaro API Docs"
  }
 },
 "paths": {
  "/models/branches/{branchId}/template": {
   "patch": {
    "tags": [
     "MetaModels"
    ],
    "summary": "Update a MetaModel",
    "description": "`Metamodel` `root` properties can be updated and multiple `Block`s can be created, updated, and/or deleted in the same\nrequest as follows:\n\n- Properties on the MetaModel root are updated via the `root` key.\n- `Block`s are **created** via dictionaries in the `Block`s list, making sure to include all required fields, the `type`\n(name of the class), and **exclude** an `id` property.\n- `Block`s are **updated** via dictionaries in the `Block`s list, making sure to **include** an `id` property, the `type`\n(name of the class) and any fields to be updated.\n- `Block`s are deleted via strings in the `delete` key corresponding to `id`s of `Block`s to be deleted.\n\n```jsonc\n{\n    // UPDATE root properties\n    \"root\": {\n        \"property\": \"value\"\n    },\n    \"blocks\": [\n        // CREATE block\n        {\n            \"property\": \"value\",\n            \"type\": \"ClassName\",\n        },\n        // UPDATE block\n        {\n            \"id\": \"NWDjzoSSKT7yGJpZdSN9-\",\n            \"property\": \"value\",\n            \"type\": \"ClassName\",\n        },\n    ],\n    // DELETE blocks\n    \"delete\": [\"NWDk7l3UPDZ0AlJW2Ut0V\", \"NWDkZ7oToTp-W9IiutbnF\"]\n}\n```",
    "operationId": "crud_template",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "title": "Data",
        "anyOf": [
         {
          "$ref": "#/components/schemas/SpacecraftModelUpdateInterface"
         },
         {
          "$ref": "#/components/schemas/TerrestrialVehicleUpdateInterface"
         },
         {
          "$ref": "#/components/schemas/ScenarioModelUpdateInterface"
         }
        ]
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/ModelCrudRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/simulations/branches/{branchId}/control/": {
   "get": {
    "tags": [
     "Jobs"
    ],
    "summary": "Get all simulations",
    "description": "`branchId` is the ID of the Scenario Branch for which to get all the Simulation Jobs. If the `latest` query param is included, only the most recent Simulation Job is included in the list.",
    "operationId": "get_simulations",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Latest",
       "enum": [
        ""
       ],
       "type": "string"
      },
      "name": "latest",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get Simulations",
         "anyOf": [
          {
           "type": "array",
           "items": {
            "$ref": "#/components/schemas/SimulationJob"
           }
          },
          {
           "$ref": "#/components/schemas/SimulationJob"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "Jobs"
    ],
    "summary": "Start a simulation",
    "description": "`branchId` is the ID of the Scenario Branch to simulate.",
    "operationId": "start_simulation",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Seed",
       "type": "integer"
      },
      "name": "seed",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/SimulationJob"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/simulations/branches/{branchId}/control/{jobId}": {
   "get": {
    "tags": [
     "Jobs"
    ],
    "summary": "Get a simulation",
    "description": "`branchId` is the ID of the Scenario Branch simulated by the Simulation Job with ID `jobId`.",
    "operationId": "get_simulation",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/SimulationJob"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Jobs"
    ],
    "summary": "Terminate a simulation",
    "description": "`branchId` is the ID of the Scenario Branch simulated by the Simulation Job with ID `jobId`.",
    "operationId": "terminate_simulation",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MessageRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/simulations/branches/{branchId}/control/study/": {
   "get": {
    "tags": [
     "Jobs"
    ],
    "summary": "Get all studies",
    "description": "`branchId` is the ID of the Scenario Template Branch for which to get all the Study Jobs. If the `latest` query param is included, only the most recent Study Job is included in the list.",
    "operationId": "get_studies",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Latest",
       "enum": [
        ""
       ],
       "type": "string"
      },
      "name": "latest",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get Studies",
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/StudyJob"
         }
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "Jobs"
    ],
    "summary": "Start a study",
    "description": "`branchId` is the ID of the Scenario Template Branch to simulate.",
    "operationId": "start_study",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Iterations",
       "type": "integer"
      },
      "name": "iterations",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/StudyJob"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/simulations/branches/{branchId}/control/study/{jobId}": {
   "get": {
    "tags": [
     "Jobs"
    ],
    "summary": "Get a study",
    "description": "`branchId` is the ID of the Scenario Template Branch simulated by the Simulation Job with ID `jobId`.",
    "operationId": "get_study",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/StudyJob"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Jobs"
    ],
    "summary": "Terminate a study",
    "description": "`branchId` is the ID of the Scenario Template Branch simulated by the Simulation Job with ID `jobId`.",
    "operationId": "terminate_study",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MessageRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/simulations/jobs/{jobId}/externals/{agentId}/{externalStateBlockId}": {
   "get": {
    "tags": [
     "Externals"
    ],
    "summary": "Read `ExternalState` for a simulation",
    "description": "This endpoint is used to read/consume state from a running simulation.\n- `jobId`: The ID of the running simulation for which to communicate\n- `agentId`: The ID of the `Agent` in the simulation for which the produced state pertains\n- `externalStateBlockId`: The ID of the relevant `ExternalState` Block of the `Agent` with ID `agentId` which defines the `consumed` state variables.\n- `time` (optional): The simulation `time` at which to read the `consumed` state. During `SpontaneousExternalState`\ntransactions, if `time` is omitted, the relevant Engine's `time` will be used.  `time` should be omitted for `PerRoundExternalState` transactions.",
    "operationId": "get_external",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Agentid",
       "type": "string"
      },
      "name": "agentId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Externalstateblockid",
       "type": "string"
      },
      "name": "externalStateBlockId",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Time",
       "type": "number"
      },
      "name": "time",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get External",
         "type": "array",
         "items": {}
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "patch": {
    "tags": [
     "Externals"
    ],
    "summary": "Set `ExternalState` for a simulation",
    "description": "This endpoint is used to publish/produce state to a running simulation.\n- `jobId`: The ID of the running simulation for which to communicate\n- `agentId`: The ID of the `Agent` in the simulation for which the produced state pertains\n- `externalStateBlockId`: The ID of the relevant `ExternalState` Block of the `Agent` with ID `agentId` which defines the `produced` state variables.\n\nSee details on the request body below.",
    "operationId": "put_external",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Jobid",
       "type": "string"
      },
      "name": "jobId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Agentid",
       "type": "string"
      },
      "name": "agentId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Externalstateblockid",
       "type": "string"
      },
      "name": "externalStateBlockId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/ExternalStateSetRequest"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Put External",
         "type": "array",
         "items": {}
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/data/{id}": {
   "get": {
    "tags": [
     "Data"
    ],
    "summary": "Query Data",
    "description": "Queries Data Service data set with ID `id`.",
    "operationId": "get_data",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Id",
       "type": "string"
      },
      "name": "id",
      "in": "path"
     },
     {
      "required": false,
      "schema": {
       "title": "Start",
       "type": "number"
      },
      "name": "start",
      "in": "query"
     },
     {
      "required": false,
      "schema": {
       "title": "Stop",
       "type": "number"
      },
      "name": "stop",
      "in": "query"
     },
     {
      "required": false,
      "schema": {
       "title": "Binwidth",
       "type": "number"
      },
      "name": "binWidth",
      "in": "query"
     },
     {
      "required": false,
      "schema": {
       "title": "Streams",
       "type": "string"
      },
      "name": "streams",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/DataServiceResponse"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/repositories/": {
   "post": {
    "tags": [
     "Repositories"
    ],
    "summary": "Create new repository",
    "description": "Creates a new repository based on the body params. The new repository will begin with a default branch.",
    "operationId": "create_repo",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/RepoCreateReq"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/RepoRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/repositories/{repositoryId}": {
   "get": {
    "tags": [
     "Repositories"
    ],
    "summary": "Get repository",
    "description": "Gets a repository with `id` of given `repoId`.",
    "operationId": "get_repo",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Repositoryid",
       "type": "string"
      },
      "name": "repositoryId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/RepoRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Repositories"
    ],
    "summary": "Delete repository",
    "description": "Deletes a repository with `id` of given `repoId` and all associated branches.",
    "operationId": "delete_repo",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Repositoryid",
       "type": "string"
      },
      "name": "repositoryId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/EntityDeleteRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "patch": {
    "tags": [
     "Repositories"
    ],
    "summary": "Update repository",
    "description": "Updates a repository with `id` of given `repoId` based on the body params.",
    "operationId": "update_repo",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Repositoryid",
       "type": "string"
      },
      "name": "repositoryId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/RepoUpdateReq"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/RepoRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/repositories//import": {
   "post": {
    "tags": [
     "Repositories"
    ],
    "summary": "Import branch as new repository",
    "description": "Imports the branch(es) from the uploaded zip file into the workspace associated with workspace `id` from the\n        body. All branches will be in their own repo and given new `id`s. For info on exporting, see the branches [export\n        route](#operation/export_branch).",
    "operationId": "import_branch_as_new_repo",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/RepoImportReq"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MessageRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}": {
   "get": {
    "tags": [
     "Branches"
    ],
    "summary": "Get a branch",
    "description": "Retrieves the branch with the provided `id`.",
    "operationId": "get_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get Branch",
         "anyOf": [
          {
           "$ref": "#/components/schemas/BranchSpacecraftRes"
          },
          {
           "$ref": "#/components/schemas/BranchTerrestrialVehicleRes"
          },
          {
           "$ref": "#/components/schemas/BranchScenarioRes"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "post": {
    "tags": [
     "Branches"
    ],
    "summary": "Branch off existing branch",
    "description": "Creates a new branch based on and in the same repository as the branch associated with the provided `id`.",
    "operationId": "create_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/BranchCreate"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Create Branch",
         "anyOf": [
          {
           "$ref": "#/components/schemas/BranchSpacecraftRes"
          },
          {
           "$ref": "#/components/schemas/BranchTerrestrialVehicleRes"
          },
          {
           "$ref": "#/components/schemas/BranchScenarioRes"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Branches"
    ],
    "summary": "Delete a branch",
    "description": "Deletes the branch with the provided `id`.",
    "operationId": "delete_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/EntityDeleteRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "patch": {
    "tags": [
     "Branches"
    ],
    "summary": "Update a branch",
    "description": "Updates updateable fields on the branch with the provided `id`. Note:\n- `shareable` indicates whether shareable links are valid for this branch.\n- `password` indicates whether the shareable link requires a password.",
    "operationId": "update_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/BranchUpdate"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Update Branch",
         "anyOf": [
          {
           "$ref": "#/components/schemas/BranchSpacecraftRes"
          },
          {
           "$ref": "#/components/schemas/BranchTerrestrialVehicleRes"
          },
          {
           "$ref": "#/components/schemas/BranchScenarioRes"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/share-auth/": {
   "post": {
    "tags": [
     "Branches"
    ],
    "summary": "Verify branch password",
    "description": "Route to verify password when a user tries to access a branch with the provided `id` via a password protected shareable link.\nIf successful, returns a success message with a set-cookie. The cookie stores a `jwt` that allows for non-owner collaborators to send `GET` requests to the corresponding branch.",
    "operationId": "verify_branch_password",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/BranchVerifyPassword"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MessageRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/commits/": {
   "post": {
    "tags": [
     "Branches"
    ],
    "summary": "Commit changes to a branch",
    "description": "Takes all changes to the blocks on the branch with the provided `id` and commits them to the corresponding version-controlled branch.",
    "operationId": "commit_to_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Commitmessage",
       "type": "string"
      },
      "name": "commitMessage",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/MessageRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{currentBranchId}/merge/{incomingBranchId}": {
   "post": {
    "tags": [
     "Branches"
    ],
    "summary": "Merge branch into another branch",
    "description": "Merges branch with `incomingBranchId` into branch with `currentBranchId`. This route has two functions:\n- To initiate the merge, send the request with no body. If there are no conflicts, it will successfully complete the merge and send back the resulting branch.\n- If there are conflicts, the response body will have a key of `conflicts` with a list of conflict objects outlining the \"current\" and \"incoming\" changes. Review the list, and send a second request to the same route including a list of resulutions (see optional `resultions` param in the request body schema below) indicating where you would like to keep the \"current\" or \"incoming\" changes. The indices in the `resultions` list should correspond with the indices of the `conflicts` list.",
    "operationId": "merge_branches",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Currentbranchid",
       "type": "string"
      },
      "name": "currentBranchId",
      "in": "path"
     },
     {
      "required": true,
      "schema": {
       "title": "Incomingbranchid",
       "type": "string"
      },
      "name": "incomingBranchId",
      "in": "path"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/BranchMerge"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Merge Branches",
         "anyOf": [
          {
           "$ref": "#/components/schemas/BranchSpacecraftRes"
          },
          {
           "$ref": "#/components/schemas/BranchTerrestrialVehicleRes"
          },
          {
           "$ref": "#/components/schemas/BranchScenarioRes"
          },
          {
           "$ref": "#/components/schemas/BranchMergeConflictsRes"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/committed/": {
   "get": {
    "tags": [
     "Branches"
    ],
    "summary": "Get saved branch data",
    "description": "Retrieves all **committed** branch `data` (object with all the blocks) from the branch with the given `id`.",
    "operationId": "get_committed_branch_data",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get Committed Branch Data",
         "anyOf": [
          {
           "$ref": "#/components/schemas/Spacecraft"
          },
          {
           "$ref": "#/components/schemas/Scenario"
          },
          {
           "$ref": "#/components/schemas/TerrestrialVehicle"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/saved/": {
   "get": {
    "tags": [
     "Branches"
    ],
    "summary": "Get committed branch data",
    "description": "Retrieves all **saved** branch `data` (object with all the blocks) from the branch with the given `id`.",
    "operationId": "get_saved_branch_data",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "title": "Response Get Saved Branch Data",
         "anyOf": [
          {
           "$ref": "#/components/schemas/Spacecraft"
          },
          {
           "$ref": "#/components/schemas/Scenario"
          },
          {
           "$ref": "#/components/schemas/TerrestrialVehicle"
          }
         ]
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/changes/": {
   "get": {
    "tags": [
     "Branches"
    ],
    "summary": "Get branch changes",
    "description": "Retrieves the state of the saved branch `data` and committed branch `data` with the given `id` and returns them for comparison.",
    "operationId": "get_branch_changes",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/BranchChangesRes"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/models/branches/{branchId}/export/": {
   "get": {
    "tags": [
     "Branches"
    ],
    "summary": "Export branch",
    "description": "Exports the branch with `id` of given `branchId`. If the branch is a Scenario, also exports all branches\n        referenced in the Scenario's agents. The returned `FileResponse` contains exported branch(es) as a json file(s)\n        zipped in a directory. For info on importing, see the repositories [import route](#operation/import_branch_as_new_repo).",
    "operationId": "export_branch",
    "parameters": [
     {
      "required": true,
      "schema": {
       "title": "Branchid",
       "type": "string"
      },
      "name": "branchId",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response"
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  }
 },
 "components": {
  "schemas": {
   "ActivePointingMode": {
    "title": "ActivePointingMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "odAlgorithm": {
      "title": "ID of Associated OrbitDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `OrbitDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "adAlgorithm": {
      "title": "ID of Associated AttitudeDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tcAlgorithm": {
      "title": "ID of Associated ThrustControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `ThrustControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Rate [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "acAlgorithm": {
      "title": "ID of Associated AttitudeControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "ActivePointingMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ActivePointingMode Block"
   },
   "Addition": {
    "title": "Addition",
    "required": [
     "fn",
     "arg"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "+"
      ],
      "type": "string"
     },
     "arg": {
      "title": "Arg",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AgentGroup": {
    "title": "AgentGroup",
    "required": [
     "name",
     "agentType"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "agentAssociations": {
      "title": "IDs of Associated Agent Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `Agent` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "agentType": {
      "title": "Agent Type",
      "allOf": [
       {
        "$ref": "#/components/schemas/Types"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "AgentGroup"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A AgentGroup Block"
   },
   "AgentParameters": {
    "title": "AgentParameters",
    "enum": [
     "SHADOW",
     "LAT",
     "LON",
     "ALT",
     "LOCAL_SIDEREAL_TIME"
    ],
    "description": "An enumeration."
   },
   "Angle": {
    "title": "Angle",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAgent181": {
    "title": "AngleAgent181",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 1.5707963267948966,
      "minimum": -1.5707963267948966,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAgent182": {
    "title": "AngleAgent182",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 6.283185307179586,
      "minimum": -3.141592653589793,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAttitude142": {
    "title": "AngleAttitude142",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 1.5707963267948966,
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAttitude147": {
    "title": "AngleAttitude147",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 1.5707963267948966,
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAttitude152": {
    "title": "AngleAttitude152",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 1.5707963267948966,
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleAttitude29": {
    "title": "AngleAttitude29",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "maximum": 1.5707963267948966,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleSensors127": {
    "title": "AngleSensors127",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleSensors132": {
    "title": "AngleSensors132",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleSensors34": {
    "title": "AngleSensors34",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleSensors65": {
    "title": "AngleSensors65",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngleSensors70": {
    "title": "AngleSensors70",
    "type": "object",
    "properties": {
     "rad": {
      "title": "Rad",
      "minimum": 0.0,
      "type": "number"
     },
     "deg": {
      "title": "Deg",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRate": {
    "title": "AngularRate",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateAttitude15": {
    "title": "AngularRateAttitude15",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateAttitude157": {
    "title": "AngularRateAttitude157",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "minimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateAttitude31": {
    "title": "AngularRateAttitude31",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateAttitude45": {
    "title": "AngularRateAttitude45",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateAttitude77": {
    "title": "AngularRateAttitude77",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularRateSensors98": {
    "title": "AngularRateSensors98",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "type": "number"
     },
     "rad/s": {
      "title": "Rad/S",
      "minimum": 0.0,
      "type": "number"
     },
     "rpm": {
      "title": "Rpm",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularVelocity": {
    "title": "AngularVelocity",
    "type": "object",
    "properties": {
     "deg/s": {
      "title": "Deg/S",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "rad/s": {
      "title": "Rad/S",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "rpm": {
      "title": "Rpm",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "AngularVelocitySensor": {
    "title": "AngularVelocitySensor",
    "required": [
     "name",
     "oneSigmaPerAxisError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "oneSigmaPerAxisError": {
      "title": "Measurment Per-Axis Error [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateSensors98"
       }
      ],
      "description": "Standard deviation of normally-distributed noise added to all elements of the measured vector."
     },
     "measurement": {
      "title": "Measured Angular Velocity Vector [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "AngularVelocitySensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A AngularVelocitySensor Block"
   },
   "AveragingAlgorithm": {
    "title": "AveragingAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-08
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of attitude, either definitive or predictive."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of angular velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated attitude after measurement updates are applied."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated angular velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Definitive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted attitude before any measurement updates are applied."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted angular velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Predictive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "opticalAttitudeSensors": {
      "title": "IDs of Associated OpticalAttitudeSensor Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `OpticalAttitudeSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "angularVelocitySensors": {
      "title": "IDs of Associated AngularVelocitySensor Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `AngularVelocitySensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "AveragingAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A AveragingAlgorithm Block"
   },
   "BoolSpec": {
    "title": "BoolSpec",
    "required": [
     "type",
     "variables"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "bool"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/modsim__models__blocks__scenario__widget_spec__Variable"
        },
        {
         "$ref": "#/components/schemas/LineVariable"
        }
       ]
      }
     },
     "labelRight": {
      "title": "Labelright",
      "type": "string"
     },
     "unitRight": {
      "title": "Unitright",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "BranchChangesRes": {
    "title": "BranchChangesRes",
    "required": [
     "edited",
     "committed"
    ],
    "type": "object",
    "properties": {
     "edited": {
      "title": "Edited",
      "anyOf": [
       {
        "$ref": "#/components/schemas/Spacecraft"
       },
       {
        "$ref": "#/components/schemas/Scenario"
       },
       {
        "$ref": "#/components/schemas/TerrestrialVehicle"
       }
      ]
     },
     "committed": {
      "title": "Committed",
      "anyOf": [
       {
        "$ref": "#/components/schemas/Spacecraft"
       },
       {
        "$ref": "#/components/schemas/Scenario"
       },
       {
        "$ref": "#/components/schemas/TerrestrialVehicle"
       }
      ]
     }
    }
   },
   "BranchCreate": {
    "title": "BranchCreate",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     }
    }
   },
   "BranchMerge": {
    "title": "BranchMerge",
    "type": "object",
    "properties": {
     "resolutions": {
      "title": "Resolutions",
      "type": "array",
      "items": {
       "enum": [
        "current",
        "incoming"
       ],
       "type": "string"
      }
     }
    }
   },
   "BranchMergeConflictsRes": {
    "title": "BranchMergeConflictsRes",
    "required": [
     "conflicts"
    ],
    "type": "object",
    "properties": {
     "conflicts": {
      "title": "Conflicts",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ConflictsObj"
      }
     }
    }
   },
   "BranchRes": {
    "title": "BranchRes",
    "required": [
     "name",
     "id",
     "dateCreated",
     "dateModified",
     "repository",
     "data"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     },
     "id": {
      "title": "Id",
      "type": "integer"
     },
     "dateCreated": {
      "title": "Datecreated",
      "type": "string",
      "format": "date-time"
     },
     "dateModified": {
      "title": "Datemodified",
      "type": "string",
      "format": "date-time"
     },
     "repository": {
      "title": "Repository",
      "anyOf": [
       {
        "type": "object"
       },
       {
        "type": "integer"
       }
      ]
     },
     "data": {
      "title": "Data",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SpacecraftModelRes"
       },
       {
        "$ref": "#/components/schemas/TerrestrialVehicleModelRes"
       },
       {
        "$ref": "#/components/schemas/ScenarioModelRes"
       }
      ]
     }
    }
   },
   "BranchScenarioRes": {
    "title": "BranchScenarioRes",
    "required": [
     "name",
     "id",
     "dateCreated",
     "dateModified",
     "repository",
     "data"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     },
     "id": {
      "title": "Id",
      "type": "integer"
     },
     "dateCreated": {
      "title": "Datecreated",
      "type": "string",
      "format": "date-time"
     },
     "dateModified": {
      "title": "Datemodified",
      "type": "string",
      "format": "date-time"
     },
     "repository": {
      "title": "Repository",
      "anyOf": [
       {
        "type": "object"
       },
       {
        "type": "integer"
       }
      ]
     },
     "data": {
      "$ref": "#/components/schemas/ScenarioModelRes"
     }
    }
   },
   "BranchSpacecraftRes": {
    "title": "BranchSpacecraftRes",
    "required": [
     "name",
     "id",
     "dateCreated",
     "dateModified",
     "repository",
     "data"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     },
     "id": {
      "title": "Id",
      "type": "integer"
     },
     "dateCreated": {
      "title": "Datecreated",
      "type": "string",
      "format": "date-time"
     },
     "dateModified": {
      "title": "Datemodified",
      "type": "string",
      "format": "date-time"
     },
     "repository": {
      "title": "Repository",
      "anyOf": [
       {
        "type": "object"
       },
       {
        "type": "integer"
       }
      ]
     },
     "data": {
      "$ref": "#/components/schemas/SpacecraftModelRes"
     }
    }
   },
   "BranchTerrestrialVehicleRes": {
    "title": "BranchTerrestrialVehicleRes",
    "required": [
     "name",
     "id",
     "dateCreated",
     "dateModified",
     "repository",
     "data"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     },
     "id": {
      "title": "Id",
      "type": "integer"
     },
     "dateCreated": {
      "title": "Datecreated",
      "type": "string",
      "format": "date-time"
     },
     "dateModified": {
      "title": "Datemodified",
      "type": "string",
      "format": "date-time"
     },
     "repository": {
      "title": "Repository",
      "anyOf": [
       {
        "type": "object"
       },
       {
        "type": "integer"
       }
      ]
     },
     "data": {
      "$ref": "#/components/schemas/TerrestrialVehicleModelRes"
     }
    }
   },
   "BranchUpdate": {
    "title": "BranchUpdate",
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 32,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 300,
      "type": "string"
     }
    }
   },
   "BranchVerifyPassword": {
    "title": "BranchVerifyPassword",
    "required": [
     "password"
    ],
    "type": "object",
    "properties": {
     "password": {
      "title": "Password",
      "type": "string"
     }
    }
   },
   "CelestialPointingDirections": {
    "title": "CelestialPointingDirections",
    "enum": [
     "SUN",
     "MOON",
     "EARTH",
     "MERCURY",
     "VENUS",
     "MARS",
     "JUPITER",
     "SATURN",
     "URANUS",
     "NEPTUNE",
     "PLUTO"
    ],
    "description": "An enumeration."
   },
   "CelestialVector": {
    "title": "CelestialVector",
    "required": [
     "name",
     "celestialPointingDirection"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "representation": {
      "title": "Use Estimate or Truth in Algoritms",
      "allOf": [
       {
        "$ref": "#/components/schemas/Representation"
       }
      ],
      "default": "TRUTH"
     },
     "truth": {
      "title": "Truth Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimate": {
      "title": "Estimated Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "eclipsed": {
      "title": "Eclipsed Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "celestialPointingDirection": {
      "title": "Celestial Pointing Direction",
      "allOf": [
       {
        "$ref": "#/components/schemas/CelestialPointingDirections"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "CelestialVector"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A CelestialVector Block"
   },
   "Choices": {
    "title": "Choices",
    "required": [
     "fn",
     "weights",
     "population",
     "k"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "choices"
      ],
      "type": "string"
     },
     "weights": {
      "title": "Weights",
      "type": "array",
      "items": {}
     },
     "population": {
      "title": "Population",
      "type": "array",
      "items": {}
     },
     "k": {
      "title": "K",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Clamp": {
    "title": "Clamp",
    "required": [
     "fn"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "clamp"
      ],
      "type": "string"
     },
     "low": {
      "title": "Low",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "number"
       }
      ]
     },
     "high": {
      "title": "High",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "number"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ClampRepeat": {
    "title": "ClampRepeat",
    "required": [
     "fn",
     "overrideFn"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "clamprepeat"
      ],
      "type": "string"
     },
     "low": {
      "title": "Low",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "number"
       }
      ]
     },
     "high": {
      "title": "High",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "number"
       }
      ]
     },
     "overrideFn": {
      "title": "Overridefn",
      "anyOf": [
       {
        "$ref": "#/components/schemas/Equals"
       },
       {
        "$ref": "#/components/schemas/Addition"
       },
       {
        "$ref": "#/components/schemas/Multiply"
       },
       {
        "$ref": "#/components/schemas/Divide"
       },
       {
        "$ref": "#/components/schemas/Choices"
       },
       {
        "$ref": "#/components/schemas/Sample"
       },
       {
        "$ref": "#/components/schemas/Randrange"
       },
       {
        "$ref": "#/components/schemas/Uniform"
       },
       {
        "$ref": "#/components/schemas/Triangular"
       },
       {
        "$ref": "#/components/schemas/Expovariate"
       },
       {
        "$ref": "#/components/schemas/GammaVariate"
       },
       {
        "$ref": "#/components/schemas/Gauss"
       },
       {
        "$ref": "#/components/schemas/NormalVariate"
       },
       {
        "$ref": "#/components/schemas/LogNormVariate"
       },
       {
        "$ref": "#/components/schemas/VonmisesVariate"
       },
       {
        "$ref": "#/components/schemas/ParetoVariate"
       },
       {
        "$ref": "#/components/schemas/WeibullVariate"
       },
       {
        "$ref": "#/components/schemas/Clamp"
       },
       {
        "$ref": "#/components/schemas/CopyValueTo"
       },
       {
        "$ref": "#/components/schemas/Substraction"
       },
       {
        "$ref": "#/components/schemas/SquareRoot"
       },
       {
        "$ref": "#/components/schemas/FnChain"
       }
      ]
     },
     "repeat_attempts": {
      "title": "Repeat Attempts",
      "type": "integer",
      "default": 5
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ClassicalOrbitalElements": {
    "title": "ClassicalOrbitalElements",
    "required": [
     "a",
     "e",
     "inc",
     "raan",
     "om",
     "nu"
    ],
    "type": "object",
    "properties": {
     "a": {
      "title": "Semimajor Axis [km]",
      "minimum": 6478.1359999999995,
      "type": "number"
     },
     "e": {
      "title": "Eccentricity",
      "exclusiveMaximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "inc": {
      "title": "Inclination [deg]",
      "maximum": 180.0,
      "minimum": 0.0,
      "type": "number"
     },
     "raan": {
      "title": "RAAN [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "om": {
      "title": "Omega [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "True Longitude of Perigee or Argument of Perigee depending on Eccentricity and/or Inclination"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "Argument of Latitude, True Anomaly, or True Longitude depending on Eccentricity and/or Inclination"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ClockConfig": {
    "title": "ClockConfig",
    "required": [
     "startTime",
     "stopTime"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "startTime": {
      "title": "Start Time [MJD]",
      "type": "number",
      "description": "The time at which the simulation begins simulating from."
     },
     "stopTime": {
      "title": "Stop Time [MJD]",
      "type": "number",
      "description": "The time at which the simulation completes."
     },
     "realTime": {
      "title": "Real-Time Mode",
      "type": "boolean",
      "description": "If true, the simulation will run 1x real-time.  This means if the simulation time-step is 10s, 10s of             wall time will elapse between the beginning of that round and the next. If false, the simulation will run as             fast as possible.  Use `syncTime` if you want simulation time to be syncronized to wall time.",
      "default": false
     },
     "syncTime": {
      "title": "Sync-Time Mode",
      "type": "boolean",
      "description": "If true, the simulation will run faster than real-time up to current wall time and then step in             sync with wall time. `syncTime` is only considered when `realTime` is true.",
      "default": false
     },
     "type": {
      "title": "Type",
      "enum": [
       "ClockConfig"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ClockConfig Block"
   },
   "CloudFractionGroup": {
    "title": "CloudFractionGroup",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "dataset": {
      "allOf": [
       {
        "$ref": "#/components/schemas/GeoAreaDatetimeDataSetSource"
       }
      ],
      "default": 4
     },
     "geoAreaDatetimeTargetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "normalvariateSigma": {
      "title": "Prediction Accuracy",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation for the random.normalvariate normal distribution. Applied to the predictedCloudFraction to create the actualCloudFraction. Use zero for perfect prediction accuracy.",
      "default": 0.1
     },
     "cloudLayerAltitude": {
      "title": "Altitude(km) of the Cloud layer",
      "allOf": [
       {
        "$ref": "#/components/schemas/DistanceCloudFractionGrou30"
       }
      ],
      "description": "Used to determined vector intercept locations for off nader view angles",
      "default": 9.0
     },
     "defaultCloudFractionValue": {
      "title": "Cloud Data missing default",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "Default value to return if the requested data at the location/time is missing in the dataset. Usually occurs at locations very close to the poles.",
      "default": 0.5
     },
     "cloudFractionGroupResults": {
      "title": "IDs of Associated GroundTarget Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `GroundTarget` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "CloudFractionGroup"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A CloudFractionGroup Block"
   },
   "CloudFractionGroupToScalarCondition": {
    "title": "CloudFractionGroupToScalarCondition",
    "required": [
     "name",
     "relationship",
     "tgParam",
     "scalar"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "anyOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       },
       {
        "$ref": "#/components/schemas/RangeRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "targetCompliance": {
      "title": "Target Compliance Status",
      "type": "object",
      "additionalProperties": {
       "type": "boolean"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>A dictionary keyed by `Target` ID where each value is the compliance of the condition for the respective `Target`."
     },
     "countRelationship": {
      "title": "Count Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "Set if `groupRoller` == `COUNT` to define the way to compare number of compliant targets to the `countValue`."
     },
     "countValue": {
      "title": "Count Value",
      "type": "integer",
      "description": "Set if `groupRoller` == `COUNT` as a number to which to compare the number of compliant targets."
     },
     "tgParam": {
      "title": "Parameter selection.",
      "allOf": [
       {
        "$ref": "#/components/schemas/CloudFractionParameters"
       }
      ]
     },
     "groupRoller": {
      "title": "Group Roller Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/GroupRollers"
       }
      ],
      "description": "The method to use to combine the target values into a single compliance.",
      "default": "ANY"
     },
     "cloudFractionGroup": {
      "title": "ID of Associated CloudFractionGroup Block",
      "type": "string",
      "description": "Relationship to a single `CloudFractionGroup` block. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "scalar": {
      "title": "Constant value to compare to or pair of values to use as a range.",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "object",
        "additionalProperties": {
         "type": "number"
        }
       },
       {
        "maxItems": 2,
        "minItems": 2,
        "type": "array",
        "items": {
         "anyOf": [
          {
           "type": "number"
          },
          {
           "type": "object",
           "additionalProperties": {
            "type": "number"
           }
          }
         ]
        }
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "CloudFractionGroupToScalarCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A CloudFractionGroupToScalarCondition Block"
   },
   "CloudFractionParameters": {
    "title": "CloudFractionParameters",
    "enum": [
     "IS_CLOUD_BLOCKED",
     "ACTUAL_CLOUD_FRACTION",
     "PREDICTED_CLOUD_FRACTION",
     "CLOUD_LAYER_INTERSECTION_LAT",
     "CLOUD_LAYER_INTERSECTION_LON",
     "CLOUD_LAYER_INTERSECTION_ALT"
    ],
    "description": "An enumeration."
   },
   "ComponentDissipations": {
    "title": "ComponentDissipations",
    "required": [
     "total",
     "internalLoads"
    ],
    "type": "object",
    "properties": {
     "total": {
      "title": "Total",
      "minimum": 0.0,
      "type": "number"
     },
     "internalLoads": {
      "title": "Internalloads",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ConOpsSpec": {
    "title": "ConOpsSpec",
    "required": [
     "type"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "conops"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/LineVariable"
        },
        {
         "$ref": "#/components/schemas/PieVariable"
        },
        {
         "$ref": "#/components/schemas/TableVariable"
        },
        {
         "$ref": "#/components/schemas/MarginVariable"
        }
       ]
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ConditionRelationship": {
    "title": "ConditionRelationship",
    "enum": [
     "GREATER",
     "LESS",
     "GREATER_EQUAL",
     "LESS_EQUAL",
     "EQUAL",
     "NOT_EQUAL"
    ],
    "description": "An enumeration."
   },
   "ConflictsObj": {
    "title": "ConflictsObj",
    "required": [
     "current",
     "incoming",
     "block"
    ],
    "type": "object",
    "properties": {
     "current": {
      "title": "Current",
      "type": "object"
     },
     "incoming": {
      "title": "Incoming",
      "type": "object"
     },
     "block": {
      "title": "Block",
      "type": "string"
     }
    }
   },
   "Cooler": {
    "title": "Cooler",
    "required": [
     "name",
     "onRegHeatFlowRate"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "busRegulator": {
      "title": "ID of Associated BusRegulator Block",
      "type": "string",
      "description": "Relationship to zero or one `BusRegulator` blocks. Inverse key: `BusRegulator.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PowerProcessor` blocks. Inverse key: `PowerProcessor.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "onRegHeatFlowRate": {
      "title": "Heat Flow Rate when Active [W]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "controlledComponent": {
      "title": "ID of Associated Component Block",
      "type": "string",
      "description": "Relationship to a single `Component` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tempControllerStates": {
      "title": "IDs of Associated TempControllerState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `TempControllerState` blocks. Inverse key: `TempControllerState.tempController`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeTempControllerState": {
      "title": "ID of Associated TempControllerState Block",
      "type": "string",
      "description": "Relationship to zero or one `TempControllerState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tempControllerStatesMainRoutine": {
      "title": "ID of Associated TempControllerState Block",
      "type": "string",
      "description": "Relationship to zero or one `TempControllerState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active temp controller state."
     },
     "regHeatFlowRate": {
      "title": "Positive Heat Flow Rate [W]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "commandedTemperature": {
      "title": "Commanded Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "efficiency": {
      "title": "Cooler Efficiency [%]",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "default": 1.0
     },
     "sinkHeatFlowRate": {
      "title": "Heat Flow Rate to Sink Interface [W]",
      "type": "number",
      "default": 0.0
     },
     "type": {
      "title": "Type",
      "enum": [
       "Cooler"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A Cooler Block"
   },
   "CopyValueTo": {
    "title": "CopyValueTo",
    "required": [
     "copy_value_to"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "copy_value_to": {
      "title": "Copy Value To",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "CrudRes": {
    "title": "CrudRes",
    "required": [
     "blocks",
     "delete"
    ],
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "delete": {
      "title": "Delete",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "DataServiceResponse": {
    "title": "DataServiceResponse",
    "required": [
     "Data"
    ],
    "type": "object",
    "properties": {
     "Data": {
      "$ref": "#/components/schemas/DataSet"
     }
    }
   },
   "DataSet": {
    "title": "DataSet",
    "required": [
     "meta",
     "series"
    ],
    "type": "object",
    "properties": {
     "meta": {
      "title": "Meta",
      "type": "object"
     },
     "series": {
      "title": "Series",
      "type": "object"
     }
    }
   },
   "DeletedEntity": {
    "title": "DeletedEntity",
    "required": [
     "model",
     "id"
    ],
    "type": "object",
    "properties": {
     "model": {
      "title": "Model",
      "type": "string"
     },
     "id": {
      "title": "Id",
      "type": "integer"
     }
    }
   },
   "DirectMeasurementAttitudeInitializer": {
    "title": "DirectMeasurementAttitudeInitializer",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "attitudeSensors": {
      "title": "IDs of Associated OpticalAttitudeSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `OpticalAttitudeSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "angularVelocitySensors": {
      "title": "IDs of Associated AngularVelocitySensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `AngularVelocitySensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "defaultAngularVelocitySigma": {
      "title": "Default Angular Velocity Sigma",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateAttitude77"
       }
      ],
      "description": "Initializer will assume an initial angular velocity of 0 with this standard deviation if no angular velocity sensors are provided.",
      "default": {
       "deg/s": 10
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "DirectMeasurementAttitudeInitializer"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A coarse initial attitude determination algorithm that relies on direct attitude and angular velocity measurements to\nproduce a solution. The initializer estimates an attitude and angular velocity by averaging measurements from all\navailable sensors, weighted by the inverse of the assumed variance of that sensor.\n\nIf no angular velocity sensor measurements are available, the initializer will assume an initial angular velocity of 0\nwith the an initial uncertainty equal to `defaultAngularVelocitySigma` in all directions.\n    "
   },
   "DirectionSensor": {
    "title": "DirectionSensor",
    "required": [
     "name",
     "oneSigmaAngleError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "oneSigmaAngleError": {
      "title": "Measurement Angular Error [deg]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleSensors34"
       }
      ],
      "description": "Standard deviation of the angle between the true and measured vector directions."
     },
     "referenceVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "truth": {
      "title": "Zero Noise Measurement Vector",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "measurement": {
      "title": "Measurement Vector",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "DirectionSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A DirectionSensor Block"
   },
   "Distance": {
    "title": "Distance",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DistanceCloudFractionGrou30": {
    "title": "DistanceCloudFractionGrou30",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "exclusiveMinimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DistanceOrbit124": {
    "title": "DistanceOrbit124",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DistanceSensors115": {
    "title": "DistanceSensors115",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DistanceSensors144": {
    "title": "DistanceSensors144",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DistanceSensors86": {
    "title": "DistanceSensors86",
    "type": "object",
    "properties": {
     "m": {
      "title": "M",
      "type": "number"
     },
     "mm": {
      "title": "Mm",
      "type": "number"
     },
     "cm": {
      "title": "Cm",
      "type": "number"
     },
     "km": {
      "title": "Km",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Divide": {
    "title": "Divide",
    "required": [
     "fn",
     "arg"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "/"
      ],
      "type": "string"
     },
     "arg": {
      "title": "Arg",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Duration": {
    "title": "Duration",
    "type": "object",
    "properties": {
     "day": {
      "title": "Day",
      "type": "number"
     },
     "s": {
      "title": "S",
      "type": "number"
     },
     "hour": {
      "title": "Hour",
      "type": "number"
     },
     "min": {
      "title": "Min",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DurationActuator49": {
    "title": "DurationActuator49",
    "type": "object",
    "properties": {
     "day": {
      "title": "Day",
      "minimum": 0.0,
      "type": "number"
     },
     "s": {
      "title": "S",
      "type": "number"
     },
     "hour": {
      "title": "Hour",
      "type": "number"
     },
     "min": {
      "title": "Min",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DurationFieldOfView69": {
    "title": "DurationFieldOfView69",
    "type": "object",
    "properties": {
     "day": {
      "title": "Day",
      "minimum": 0.0,
      "type": "number"
     },
     "s": {
      "title": "S",
      "type": "number"
     },
     "hour": {
      "title": "Hour",
      "type": "number"
     },
     "min": {
      "title": "Min",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "DurationOrbit106": {
    "title": "DurationOrbit106",
    "type": "object",
    "properties": {
     "day": {
      "title": "Day",
      "minimum": 0.0,
      "type": "number"
     },
     "s": {
      "title": "S",
      "type": "number"
     },
     "hour": {
      "title": "Hour",
      "type": "number"
     },
     "min": {
      "title": "Min",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "EcefStationaryKinematics": {
    "title": "EcefStationaryKinematics",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "type": {
      "title": "Type",
      "enum": [
       "EcefStationaryKinematics"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Kinematics block for an object that is stationary in the Earth Centered Earth Fixed (ECEF) frame."
   },
   "EkfAlgorithm": {
    "title": "EkfAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-06
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated position after measurement updates are applied."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Predictive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted position before any measurement updates are applied."
     },
     "predictiveVelocitySolution": {
      "title": "Predictive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolution": {
      "title": "Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of position, either definitive or predictive."
     },
     "velocitySolution": {
      "title": "Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "initializer": {
      "title": "ID of Associated OrbitInitializer Block",
      "type": "string",
      "description": "Relationship to a single `OrbitInitializer` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "positionSensors": {
      "title": "IDs of Associated PositionSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `PositionSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "EkfAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A EkfAlgorithm Block"
   },
   "EntityDeleteRes": {
    "title": "EntityDeleteRes",
    "required": [
     "message",
     "deletedEntities"
    ],
    "type": "object",
    "properties": {
     "message": {
      "title": "Message",
      "type": "string"
     },
     "deletedEntities": {
      "title": "Deletedentities",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DeletedEntity"
      }
     }
    }
   },
   "EphemerisBody": {
    "title": "EphemerisBody",
    "enum": [
     "SUN",
     "MOON",
     "EARTH",
     "MERCURY",
     "VENUS",
     "MARS",
     "JUPITER",
     "SATURN",
     "URANUS",
     "NEPTUNE",
     "PLUTO"
    ],
    "description": "An enumeration."
   },
   "Equals": {
    "title": "Equals",
    "required": [
     "fn",
     "arg"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "="
      ],
      "type": "string"
     },
     "arg": {
      "title": "Arg",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "EquatorialCircularReferenceOrbit": {
    "title": "EquatorialCircularReferenceOrbit",
    "required": [
     "initialRefOrbit",
     "nu",
     "alt"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "EQUATORIAL_CIRC"
      ],
      "type": "string"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "alt": {
      "title": "Altitude [km]",
      "minimum": 100.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Expovariate": {
    "title": "Expovariate",
    "required": [
     "fn",
     "lambd"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "expovariate"
      ],
      "type": "string"
     },
     "lambd": {
      "title": "Lambd",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ExternalStateSetRequest": {
    "title": "ExternalStateSetRequest",
    "type": "object",
    "properties": {
     "values": {
      "title": "External State Values",
      "type": "array",
      "items": {},
      "description": "\nA list containing the values of the external state to be produced.  The shape of this list and its\ncontents should match that defined by the `produced` query on the `ExternalState` block targeted by this request.\n\nExamples:\n```python\nblock = {\n  produced: [\n    {'root': 'velocity'},\n  ],\n  ...\n}\nvalues == [\n    [1, 0, 0]\n]\n\nblock = {\n  produced: [\n    {'root': 'velocity'},\n    {'root': 'commandedAttitude'},\n  ],\n  ...\n}\nvalues == [\n    [1, 0, 0],\n    [0, 0, 0, 1]\n]\n\nblock = {\n  produced: [\n    {'root': 'velocity'},\n    {'Battery': 'voltage'},\n    # Recall that this syntax queries for the `voltage` of all blocks of type `Battery` in the model.\n    # In this example, assume there is a single Battery\n  ],\n  ...\n}\nvalues == [\n    [1, 0, 0],\n    [28.2]\n]\n```\n\nSome state must be produced as numpy arrays.  In this case, follow the numpy serialization/deserialization approach described above.\n",
      "default": []
     },
     "timestamp": {
      "title": "External State Values Timestamp [MJD]",
      "type": "number",
      "description": "\nThe timestamp of the external state `values`. `values` take effect once the relevant simulation\nEngine's `time` is >= `timestamp`. When a `timestamp` is provided, all future `timestamp`s must be\nsequential and increasing. When multiple `timestamp`ed `values` exist in a queue, the most current for\nwhich `time` is >= `timestamp` is taken.\n\nDuring `SpontaneousExternalState` transactions, if `timestamp` is omitted, the relevant Engine's `time` will be used.\n`timestamp` should be omitted for `PerRoundExternalState` transactions.\n"
     }
    }
   },
   "Fills": {
    "title": "Fills",
    "enum": [
     "CONSTANT",
     "PROPAGATED"
    ],
    "description": "An enumeration."
   },
   "FiniteDifferenceOrbitInitializer": {
    "title": "FiniteDifferenceOrbitInitializer",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "positionSensors": {
      "title": "IDs of Associated PositionSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `PositionSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "FiniteDifferenceOrbitInitializer"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A coarse initial orbit determination algorithm that relies on direct position measurements to produce a solution. The\ninitializer estimates a position by averaging measurements from all available position sensors, weighted by the\ninverse of the assumed variance of that sensor. To estimate the velocity, this algorithm uses a finite difference\napproximation from sequential position estimates.\n    "
   },
   "FixedSurface": {
    "title": "FixedSurface",
    "required": [
     "name",
     "area",
     "surfaceCentroid"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "area": {
      "title": "Area [m^2]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "surfaceCentroid": {
      "title": "Centroid [m]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "surfaceMaterial": {
      "title": "ID of Associated SurfaceMaterial Block",
      "type": "string",
      "description": "Relationship to a single `SurfaceMaterial` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "geocenterAngle": {
      "title": "Geocenter Angle [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoViewFactor": {
      "title": "Earth Albedo View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthIrViewFactor": {
      "title": "Earth IR View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarViewFactor": {
      "title": "Solar View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "surfaceNormalVector": {
      "title": "Surface Normal Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "sat2Sun": {
      "title": "Sat to Sun Relative Vector [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "earthIrHeatFlowRate": {
      "title": "Earth Infrared Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoHeatFlowRate": {
      "title": "Earth Albedo Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarHeatFlowRate": {
      "title": "Solar Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "spaceHeatFlowRate": {
      "title": "Space Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "heatFlowRate": {
      "title": "Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "FixedSurface"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A FixedSurface Block"
   },
   "FnChain": {
    "title": "FnChain",
    "required": [
     "fn_chain"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn_chain": {
      "title": "Fn Chain",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/Equals"
        },
        {
         "$ref": "#/components/schemas/Addition"
        },
        {
         "$ref": "#/components/schemas/Multiply"
        },
        {
         "$ref": "#/components/schemas/Divide"
        },
        {
         "$ref": "#/components/schemas/Choices"
        },
        {
         "$ref": "#/components/schemas/Sample"
        },
        {
         "$ref": "#/components/schemas/Randrange"
        },
        {
         "$ref": "#/components/schemas/Uniform"
        },
        {
         "$ref": "#/components/schemas/Triangular"
        },
        {
         "$ref": "#/components/schemas/Expovariate"
        },
        {
         "$ref": "#/components/schemas/GammaVariate"
        },
        {
         "$ref": "#/components/schemas/Gauss"
        },
        {
         "$ref": "#/components/schemas/NormalVariate"
        },
        {
         "$ref": "#/components/schemas/LogNormVariate"
        },
        {
         "$ref": "#/components/schemas/VonmisesVariate"
        },
        {
         "$ref": "#/components/schemas/ParetoVariate"
        },
        {
         "$ref": "#/components/schemas/WeibullVariate"
        },
        {
         "$ref": "#/components/schemas/Clamp"
        },
        {
         "$ref": "#/components/schemas/CopyValueTo"
        },
        {
         "$ref": "#/components/schemas/Substraction"
        },
        {
         "$ref": "#/components/schemas/SquareRoot"
        },
        {
         "$ref": "#/components/schemas/FnChain"
        },
        {
         "type": "integer"
        },
        {
         "type": "number"
        },
        {
         "type": "string"
        }
       ]
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "FrameVector": {
    "title": "FrameVector",
    "type": "object",
    "properties": {
     "ecef": {
      "title": "Ecef",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "eci": {
      "title": "Eci",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "body": {
      "title": "Body",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "FuelReservoir": {
    "title": "FuelReservoir",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "fuelTanks": {
      "title": "IDs of Associated FuelTank Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `FuelTank` blocks. Inverse key: `FuelTank.reservoir`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "thrusters": {
      "title": "IDs of Associated Thruster Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Thruster` blocks. Inverse key: `Thruster.fuelReservoir`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "flowRate": {
      "title": "Current Flow Rate [kg/s]",
      "minimum": 0.0,
      "type": "number",
      "default": 0.0
     },
     "totalFuel": {
      "title": "Total Fuel Mass [kg]",
      "minimum": 0.0,
      "type": "number"
     },
     "fillPercent": {
      "title": "Fuel Fill Percentage",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "type": {
      "title": "Type",
      "enum": [
       "FuelReservoir"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A FuelReservoir Block"
   },
   "FullyRegDetPowerProcessor": {
    "title": "FullyRegDetPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "FullyRegDetPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A FullyRegDetPowerProcessor Block"
   },
   "FullyRegDetTopologyParams": {
    "title": "FullyRegDetTopologyParams",
    "required": [
     "bcrEfficiency",
     "outputPowerRating",
     "chargeDiodeDrop",
     "bdrEfficiency",
     "drivenControllerBusVoltage"
    ],
    "type": "object",
    "properties": {
     "bcrEfficiency": {
      "title": "Battery Charge Regulator (BCR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "outputPowerRating": {
      "title": "Output Power Rating [W]",
      "minimum": 0.0,
      "type": "number"
     },
     "chargeDiodeDrop": {
      "title": "Charge Diode Drop [V]",
      "minimum": 0.0,
      "type": "number"
     },
     "bdrEfficiency": {
      "title": "Battery Discharge Regulator (BDR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "drivenControllerBusVoltage": {
      "title": "Driven Controller Bus Voltage [V]",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "GammaVariate": {
    "title": "GammaVariate",
    "required": [
     "fn",
     "alpha",
     "beta"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "gammavariate"
      ],
      "type": "string"
     },
     "alpha": {
      "title": "Alpha",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "beta": {
      "title": "Beta",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Gauss": {
    "title": "Gauss",
    "required": [
     "fn",
     "mu",
     "sigma"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "gauss"
      ],
      "type": "string"
     },
     "mu": {
      "title": "Mu",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "sigma": {
      "title": "Sigma",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "GenericAdAlgorithm": {
    "title": "GenericAdAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-08
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of attitude, either definitive or predictive."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of angular velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated attitude after measurement updates are applied."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated angular velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Definitive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted attitude before any measurement updates are applied."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted angular velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Predictive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "oneSigmaYawError": {
      "title": "Attitude Measurement Yaw Error [rad]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAttitude142"
       }
      ],
      "description": "Standard deviation of the angular error added to the Z body frame axis of the true attitude.",
      "default": 0
     },
     "oneSigmaPitchError": {
      "title": "Attitude Measurement Pitch Error [rad]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAttitude147"
       }
      ],
      "description": "Standard deviation of the angular error added to the Y body frame axis of the true attitude.",
      "default": 0
     },
     "oneSigmaRollError": {
      "title": "Attitude Measurement Roll Error [rad]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAttitude152"
       }
      ],
      "description": "Standard deviation of the angular error added to the X body frame axis of the true attitude.",
      "default": 0
     },
     "oneSigmaAngularVelocityError": {
      "title": "Angular Velocity Measurement Per-Axis Error [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateAttitude157"
       }
      ],
      "description": "Standard deviation of the error added to all elements of the true angular velocity.",
      "default": 0
     },
     "type": {
      "title": "Type",
      "enum": [
       "GenericAdAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A GenericAdAlgorithm Block"
   },
   "GenericOdAlgorithm": {
    "title": "GenericOdAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-06
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated position after measurement updates are applied."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Predictive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted position before any measurement updates are applied."
     },
     "predictiveVelocitySolution": {
      "title": "Predictive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolution": {
      "title": "Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of position, either definitive or predictive."
     },
     "velocitySolution": {
      "title": "Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "oneSigmaPositionError": {
      "title": "Measurement Per-Axis Error [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/DistanceOrbit124"
       }
      ],
      "description": "Standard deviation of the position error added to all elements of the true position.",
      "default": 0
     },
     "oneSigmaVelocityError": {
      "title": "Measurement Per-Axis Error [km/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpeedOrbit129"
       }
      ],
      "description": "Standard deviation of the velocity error added to all elements of the true velocity.",
      "default": 0
     },
     "type": {
      "title": "Type",
      "enum": [
       "GenericOdAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A GenericOdAlgorithm Block"
   },
   "GeoAreaDateTimeGroup": {
    "title": "GeoAreaDateTimeGroup",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "dataset": {
      "allOf": [
       {
        "$ref": "#/components/schemas/GeoAreaDatetimeDataSetSource"
       }
      ],
      "default": 4
     },
     "geoAreaDatetimeTargetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "GeoAreaDateTimeGroup"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A GeoAreaDateTimeGroup Block"
   },
   "GeoAreaDatetimeDataSetSource": {
    "title": "GeoAreaDatetimeDataSetSource",
    "enum": [
     1,
     2,
     3,
     4
    ],
    "type": "integer",
    "description": "An enumeration."
   },
   "GeostationaryReferenceOrbit": {
    "title": "GeostationaryReferenceOrbit",
    "required": [
     "initialRefOrbit",
     "lon"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "GEOSTAT"
      ],
      "type": "string"
     },
     "lon": {
      "title": "Longitude [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "GeostationaryTransferReferenceOrbit": {
    "title": "GeostationaryTransferReferenceOrbit",
    "required": [
     "initialRefOrbit",
     "om",
     "nu",
     "altPerigee"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "GEOSTAT_TRANSFER"
      ],
      "type": "string"
     },
     "om": {
      "title": "Omega [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "altPerigee": {
      "title": "Perigee Altitude [km]",
      "minimum": 100.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "GpsAlgorithm": {
    "title": "GpsAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-06
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated position after measurement updates are applied."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Predictive Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted position before any measurement updates are applied."
     },
     "predictiveVelocitySolution": {
      "title": "Predictive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolution": {
      "title": "Position Solution [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of position, either definitive or predictive."
     },
     "velocitySolution": {
      "title": "Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "latestSolutionTime": {
      "title": "Latest Solution Time [s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/DurationOrbit106"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "s": 0
      }
     },
     "latestSolution": {
      "title": "Latest Non-propagated Solution",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "latestSolutionSigma": {
      "title": "Latest Non-propagated Solution Uncertainty",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSensors": {
      "title": "IDs of Associated PositionSensor Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `PositionSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "GpsAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A GpsAlgorithm Block"
   },
   "GroupRollers": {
    "title": "GroupRollers",
    "enum": [
     "MAX",
     "MIN",
     "MEAN",
     "MEDIAN",
     "COUNT",
     "ANY",
     "NOTANY",
     "ALL",
     "NOTALL",
     null
    ],
    "description": "An enumeration."
   },
   "HTTPValidationError": {
    "title": "HTTPValidationError",
    "type": "object",
    "properties": {
     "detail": {
      "title": "Detail",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ValidationError"
      }
     }
    }
   },
   "Heater": {
    "title": "Heater",
    "required": [
     "name",
     "onRegHeatFlowRate"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "busRegulator": {
      "title": "ID of Associated BusRegulator Block",
      "type": "string",
      "description": "Relationship to zero or one `BusRegulator` blocks. Inverse key: `BusRegulator.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PowerProcessor` blocks. Inverse key: `PowerProcessor.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "onRegHeatFlowRate": {
      "title": "Heat Flow Rate when Active [W]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "controlledComponent": {
      "title": "ID of Associated Component Block",
      "type": "string",
      "description": "Relationship to a single `Component` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tempControllerStates": {
      "title": "IDs of Associated TempControllerState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `TempControllerState` blocks. Inverse key: `TempControllerState.tempController`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeTempControllerState": {
      "title": "ID of Associated TempControllerState Block",
      "type": "string",
      "description": "Relationship to zero or one `TempControllerState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tempControllerStatesMainRoutine": {
      "title": "ID of Associated TempControllerState Block",
      "type": "string",
      "description": "Relationship to zero or one `TempControllerState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active temp controller state."
     },
     "regHeatFlowRate": {
      "title": "Positive Heat Flow Rate [W]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "commandedTemperature": {
      "title": "Commanded Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "Heater"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A Heater Block"
   },
   "HorizontalBarSpec": {
    "title": "HorizontalBarSpec",
    "required": [
     "type",
     "variables",
     "unit"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "horizontal-bar"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/MarginVariable"
      }
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "IdealOrbitalAttitudeDynamics": {
    "title": "IdealOrbitalAttitudeDynamics",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "maxSlewRate": {
      "title": "Maximum Slew Rate [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateAttitude15"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "IdealOrbitalAttitudeDynamics"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A IdealOrbitalAttitudeDynamics Block"
   },
   "InitialStateDefType": {
    "title": "InitialStateDefType",
    "enum": [
     "ORBITAL_ELEMENTS",
     "REF_ORBIT",
     "REL_ORBIT",
     "ECI_STATE",
     "TLE"
    ],
    "type": "string",
    "description": "An enumeration."
   },
   "IssReferenceOrbit": {
    "title": "IssReferenceOrbit",
    "required": [
     "initialRefOrbit",
     "raan",
     "nu"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "ISS"
      ],
      "type": "string"
     },
     "raan": {
      "title": "RAAN [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "LineSpec": {
    "title": "LineSpec",
    "required": [
     "type",
     "variables"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "line"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/LineVariable"
      }
     },
     "label": {
      "title": "Label",
      "type": "string"
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     },
     "step": {
      "title": "Step",
      "type": "string"
     },
     "labelRight": {
      "title": "Labelright",
      "type": "string"
     },
     "unitRight": {
      "title": "Unitright",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "LineVariable": {
    "title": "LineVariable",
    "required": [
     "legend"
    ],
    "type": "object",
    "properties": {
     "each": {
      "title": "Each",
      "type": "string"
     },
     "keys": {
      "title": "Keys",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "legend": {
      "title": "Legend",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "right": {
      "title": "Right",
      "type": "boolean"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "LocalPointingDirections": {
    "title": "LocalPointingDirections",
    "enum": [
     "NADIR",
     "ZENITH",
     "CROSS_TRACK_POS",
     "CROSS_TRACK_NEG",
     "ALONG_TRACK_POS",
     "ALONG_TRACK_NEG",
     "RAM",
     "ANTI_RAM",
     "MAGNETIC_FIELD",
     "ECI_COORDINATES",
     "ENU_COORDINATES",
     "LVLH_COORDINATES"
    ],
    "description": "An enumeration."
   },
   "LocalVector": {
    "title": "LocalVector",
    "required": [
     "name",
     "localPointingDirection"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "representation": {
      "title": "Use Estimate or Truth in Algoritms",
      "allOf": [
       {
        "$ref": "#/components/schemas/Representation"
       }
      ],
      "default": "TRUTH"
     },
     "truth": {
      "title": "Truth Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimate": {
      "title": "Estimated Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "eclipsed": {
      "title": "Eclipsed Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "localPointingDirection": {
      "title": "Local Pointing Direction Indicator",
      "allOf": [
       {
        "$ref": "#/components/schemas/LocalPointingDirections"
       }
      ]
     },
     "vectorCoordinates": {
      "title": "Vector Coordinates [x: km, y: km, z: km]",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "\nConstant vector coordinates in the chosen frame (per `localPointingDirection`):\n- `ECI_COORDINATES`: J2000 ECI\n- `LVLH_COORDINATES`: \n    - `x`: Local vertical, aligned with spacecraft position vector\n    - `y`: In-track, component of velocity vector perpendicular to x\n    - `z`: Completes the right-handed system, parallel to orbit angular momentum.\n- `ENU_COORDINATES`: \n    - `z`: Up, aligned with spacecraft position vector\n    - `y`: Component of geographic north vector perpendicular to z\n    - `x`: Completes the right-handed system, points along local East\n        "
     },
     "type": {
      "title": "Type",
      "enum": [
       "LocalVector"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A LocalVector Block"
   },
   "LockSpinPointingMode": {
    "title": "LockSpinPointingMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "odAlgorithm": {
      "title": "ID of Associated OrbitDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `OrbitDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "adAlgorithm": {
      "title": "ID of Associated AttitudeDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tcAlgorithm": {
      "title": "ID of Associated ThrustControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `ThrustControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Rate [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "acAlgorithm": {
      "title": "ID of Associated AttitudeControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "lockBodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "lockVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "spinRate": {
      "title": "Commanded Spin Rate [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRate"
       }
      ],
      "default": {
       "rad/s": 0.0
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "LockSpinPointingMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A LockSpinPointingMode Block"
   },
   "LogNormVariate": {
    "title": "LogNormVariate",
    "required": [
     "fn",
     "mu",
     "sigma"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "lognormvariate"
      ],
      "type": "string"
     },
     "mu": {
      "title": "Mu",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "sigma": {
      "title": "Sigma",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "LvlhOffsetOrbit": {
    "title": "LvlhOffsetOrbit",
    "required": [
     "initialRelOrbit",
     "chief"
    ],
    "type": "object",
    "properties": {
     "initialRelOrbit": {
      "title": "Initialrelorbit",
      "enum": [
       "LVLH_OFFSET"
      ],
      "type": "string"
     },
     "chief": {
      "title": "Orbit Chief Agent Block ID",
      "type": "string"
     },
     "deputyLvlhPosition": {
      "title": "Deputy Initial LVLH Position [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "deputyLvlhVelocity": {
      "title": "Deputy Initial LVLH Velocity [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "default": [
       0.0,
       0.0,
       0.0
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "MagneticDetumblingAlgorithm": {
    "title": "MagneticDetumblingAlgorithm",
    "required": [
     "name",
     "gainK"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "actuators": {
      "title": "IDs of Associated Magnetorquer Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Magnetorquer` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "gainK": {
      "title": "Magnetometer Control Gain",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "Scales the commanded magnetorquer moments."
     },
     "type": {
      "title": "Type",
      "enum": [
       "MagneticDetumblingAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "This algorithm seeks to detumble a spacecraft by applying a magnetic dipole moment. The control law seeks to reduce\nthe angular velocity of the spacecraft to zero. Details can be found here:\nF. Markley, J. Crassidis. \"Fundamentals of Spacecraft Attitude Determination and Control\". 2014. Section 7.5.1."
   },
   "MagneticHysteresisRod": {
    "title": "MagneticHysteresisRod",
    "required": [
     "name",
     "length",
     "diameter",
     "coerciveField",
     "fluxRemanence",
     "saturationFlux"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "torque": {
      "title": "Current Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "dipoleMomentMagnitude": {
      "title": "Magnetic Moment Magnitude [A\u2022m\u00b2]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0
     },
     "dipoleOrientation": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nBody Frame Vector parallel to the magnetic moment, from the South to North pole by convention."
     },
     "length": {
      "title": "Length [m]",
      "minimum": 0.0,
      "type": "number"
     },
     "diameter": {
      "title": "Diameter [m]",
      "minimum": 0.0,
      "type": "number"
     },
     "coerciveField": {
      "title": "Magnetic Coercivity [A/m]",
      "minimum": 0.0,
      "type": "number"
     },
     "fluxRemanence": {
      "title": "Magnetic Remanence [T]",
      "minimum": 0.0,
      "type": "number"
     },
     "saturationFlux": {
      "title": "Saturation Flux [T]",
      "minimum": 0.0,
      "type": "number"
     },
     "rateScalingPower": {
      "title": "Rate Scaling Power",
      "minimum": 1.0,
      "type": "number",
      "description": "Exponent applied to the fractional distance from the hysteresis boundary when determining dB/dH",
      "default": 3.0
     },
     "slopeOffset": {
      "title": "Slopeoffset",
      "minimum": 0.0,
      "type": "number",
      "default": 0
     },
     "type": {
      "title": "Type",
      "enum": [
       "MagneticHysteresisRod"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ferromagnetic rod with a dynamic magnetic moment. Magnetic hysteresis causes dampening of satellite rotation in Earth's magnetic field, so these rods are often used as a form of passive attitude control. The details of the hysteresis model can be found here https://ntrs.nasa.gov/citations/19950021380."
   },
   "Magnetorquer": {
    "title": "Magnetorquer",
    "required": [
     "name",
     "ratedMagneticMoment",
     "powerAtRatedMagneticMoment"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "busRegulator": {
      "title": "ID of Associated BusRegulator Block",
      "type": "string",
      "description": "Relationship to zero or one `BusRegulator` blocks. Inverse key: `BusRegulator.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PowerProcessor` blocks. Inverse key: `PowerProcessor.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "activeFailureMode": {
      "title": "ID of Associated ActuatorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `ActuatorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated ActuatorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ActuatorFailureMode` blocks. Inverse key: `ActuatorFailureMode.actuator`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "torque": {
      "title": "Current Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "maxTorque": {
      "title": "Current Estimated Maximum Torque Vector [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "ratedMagneticMoment": {
      "title": "Maximum Magnetic Moment [A\u2022m\u00b2]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "powerAtRatedMagneticMoment": {
      "title": "Maximum Power [W]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "modulationType": {
      "title": "Modulation Type",
      "allOf": [
       {
        "$ref": "#/components/schemas/ModulationType"
       }
      ],
      "default": "ANALOG"
     },
     "dutyCyclePeriod": {
      "title": "Duty Cycle Period",
      "allOf": [
       {
        "$ref": "#/components/schemas/DurationActuator49"
       }
      ]
     },
     "commandedMomentMagnitude": {
      "title": "Current Commanded Magnetic Moment Magnitude [N\u2022m/T]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "pwmDutyCycle": {
      "title": "Pulse-Width Modulation Duty Cycle",
      "maximum": 1.0,
      "minimum": -1.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "magneticMoment": {
      "title": "Current Magnetic Moment [N\u2022m/T]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "magneticMomentMargin": {
      "title": "Magnetic Moment Margin [%]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "Magnetorquer"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A Magnetorquer Block"
   },
   "MarginSpec": {
    "title": "MarginSpec",
    "required": [
     "type",
     "variables",
     "unit"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "margin"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/MarginVariable"
      }
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "MarginVariable": {
    "title": "MarginVariable",
    "required": [
     "legend",
     "ops"
    ],
    "type": "object",
    "properties": {
     "each": {
      "title": "Each",
      "type": "string"
     },
     "keys": {
      "title": "Keys",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "legend": {
      "title": "Legend",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ops": {
      "title": "Ops",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/LineVariable"
        },
        {
         "$ref": "#/components/schemas/PieVariable"
        },
        {
         "$ref": "#/components/schemas/TableVariable"
        },
        {
         "$ref": "#/components/schemas/MarginVariable"
        }
       ]
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "MaxAlignPointingMode": {
    "title": "MaxAlignPointingMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "odAlgorithm": {
      "title": "ID of Associated OrbitDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `OrbitDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "adAlgorithm": {
      "title": "ID of Associated AttitudeDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tcAlgorithm": {
      "title": "ID of Associated ThrustControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `ThrustControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Rate [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "acAlgorithm": {
      "title": "ID of Associated AttitudeControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "lockBodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "lockVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "maxAlignBodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "maxAlignVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "MaxAlignPointingMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A MaxAlignPointingMode Block"
   },
   "MekfAlgorithm": {
    "title": "MekfAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-08
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of attitude, either definitive or predictive."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of angular velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated attitude after measurement updates are applied."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated angular velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Definitive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted attitude before any measurement updates are applied."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted angular velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Predictive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "initializer": {
      "title": "ID of Associated AttitudeInitializer Block",
      "type": "string",
      "description": "Relationship to a single `AttitudeInitializer` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "opticalAttitudeSensors": {
      "title": "IDs of Associated OpticalAttitudeSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `OpticalAttitudeSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "angularVelocitySensors": {
      "title": "IDs of Associated AngularVelocitySensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `AngularVelocitySensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "directionSensors": {
      "title": "IDs of Associated DirectionSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `DirectionSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "vectorSensors": {
      "title": "IDs of Associated VectorSensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `VectorSensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "MekfAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A MekfAlgorithm Block"
   },
   "Menu": {
    "title": "Menu",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "menuItems": {
      "title": "IDs of Associated MenuItem Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `MenuItem` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "Menu"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A Menu Block"
   },
   "MenuItem": {
    "title": "MenuItem",
    "required": [
     "title"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "parentMenuItem": {
      "title": "ID of Associated MenuItem Block",
      "type": "string",
      "description": "Relationship to zero or one `MenuItem` blocks. Inverse key: `MenuItem.menuItems`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "menuItems": {
      "title": "IDs of Associated MenuItem Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `MenuItem` blocks. Inverse key: `MenuItem.parentMenuItem`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "widgetSpecs": {
      "title": "IDs of Associated WidgetSpec Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `WidgetSpec` blocks. Inverse key: `WidgetSpec.parentMenuItem`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "title": {
      "title": "Title",
      "type": "string"
     },
     "playback": {
      "title": "Playback",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "MenuItem"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A MenuItem Block"
   },
   "MessageRes": {
    "title": "MessageRes",
    "required": [
     "message"
    ],
    "type": "object",
    "properties": {
     "message": {
      "title": "Message",
      "type": "string"
     }
    }
   },
   "ModelCrudRes": {
    "title": "ModelCrudRes",
    "required": [
     "crud",
     "branch"
    ],
    "type": "object",
    "properties": {
     "crud": {
      "$ref": "#/components/schemas/CrudRes"
     },
     "branch": {
      "$ref": "#/components/schemas/BranchRes"
     }
    }
   },
   "ModulationType": {
    "title": "ModulationType",
    "enum": [
     "ANALOG",
     "DIGITAL"
    ],
    "description": "An enumeration."
   },
   "Multiply": {
    "title": "Multiply",
    "required": [
     "fn",
     "arg"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "*"
      ],
      "type": "string"
     },
     "arg": {
      "title": "Arg",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "NaturalMotionCircOrbit": {
    "title": "NaturalMotionCircOrbit",
    "required": [
     "initialRelOrbit",
     "chief"
    ],
    "type": "object",
    "properties": {
     "initialRelOrbit": {
      "title": "Initialrelorbit",
      "enum": [
       "NATURAL_MOTION_CIRC"
      ],
      "type": "string"
     },
     "chief": {
      "title": "Orbit Chief Agent Block ID",
      "type": "string"
     },
     "deputyLvlhPosition": {
      "title": "Deputy Initial LVLH Position [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "deputyCrossVelocity": {
      "title": "Deputy Initial LVLH Cross-Track Velocity [km/s]",
      "type": "number",
      "default": 0
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "NormalVariate": {
    "title": "NormalVariate",
    "required": [
     "fn",
     "mu",
     "sigma"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "normalvariate"
      ],
      "type": "string"
     },
     "mu": {
      "title": "Mu",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "sigma": {
      "title": "Sigma",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "OpticalAttitudeSensor": {
    "title": "OpticalAttitudeSensor",
    "required": [
     "name",
     "oneSigmaCrossAxisError",
     "oneSigmaBoresightAxisError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to a single `FieldOfView` block. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "oneSigmaCrossAxisError": {
      "title": "Cross-Axis Angular Error [deg]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleSensors65"
       }
      ],
      "description": "Standard deviation of the angle between the true and measured attitude directions."
     },
     "oneSigmaBoresightAxisError": {
      "title": "Boresight Angular Error [deg]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleSensors70"
       }
      ],
      "description": "Standard deviation of the rotational error about the boresight of the sensor."
     },
     "measurement": {
      "title": "Measured Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "OpticalAttitudeSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A OpticalAttitudeSensor Block"
   },
   "OrbitalAttitudeDynamics": {
    "title": "OrbitalAttitudeDynamics",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "type": {
      "title": "Type",
      "enum": [
       "OrbitalAttitudeDynamics"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A OrbitalAttitudeDynamics Block"
   },
   "OrbitalElementsData": {
    "title": "OrbitalElementsData",
    "type": "object",
    "properties": {
     "a": {
      "title": "Semimajor Axis [km]",
      "type": "number"
     },
     "e": {
      "title": "Eccentricity",
      "type": "number"
     },
     "inc": {
      "title": "Inclination [rad]",
      "type": "number"
     },
     "raan": {
      "title": "RAAN [rad]",
      "type": "number",
      "description": "Right Ascension of the Ascending Node. 0 if the orbit is equatorial."
     },
     "om": {
      "title": "Argument of Periapsis [rad]",
      "type": "number",
      "description": "Argument of periapsis. 0 if the orbit is circular."
     },
     "nu": {
      "title": "True Anomaly [rad]",
      "type": "number",
      "description": "True anomaly. Arugument of latitude if the orbit is circular inclined, true longitude if the orbit is circular equatorial."
     },
     "eAnom": {
      "title": "Eccentric Anomaly [rad]",
      "type": "number"
     },
     "mAnom": {
      "title": "Mean Anomaly [rad]",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "OverrideSet": {
    "title": "OverrideSet",
    "required": [
     "name",
     "variables",
     "overrides"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "OverrideSet Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this OverrideSet."
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/modsim__models__blocks__scenario__overrideset__Variable"
      }
     },
     "overrides": {
      "title": "Overrides",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/Equals"
        },
        {
         "$ref": "#/components/schemas/Addition"
        },
        {
         "$ref": "#/components/schemas/Multiply"
        },
        {
         "$ref": "#/components/schemas/Divide"
        },
        {
         "$ref": "#/components/schemas/Choices"
        },
        {
         "$ref": "#/components/schemas/Sample"
        },
        {
         "$ref": "#/components/schemas/Randrange"
        },
        {
         "$ref": "#/components/schemas/Uniform"
        },
        {
         "$ref": "#/components/schemas/Triangular"
        },
        {
         "$ref": "#/components/schemas/Expovariate"
        },
        {
         "$ref": "#/components/schemas/GammaVariate"
        },
        {
         "$ref": "#/components/schemas/Gauss"
        },
        {
         "$ref": "#/components/schemas/NormalVariate"
        },
        {
         "$ref": "#/components/schemas/LogNormVariate"
        },
        {
         "$ref": "#/components/schemas/VonmisesVariate"
        },
        {
         "$ref": "#/components/schemas/ParetoVariate"
        },
        {
         "$ref": "#/components/schemas/WeibullVariate"
        },
        {
         "$ref": "#/components/schemas/Clamp"
        },
        {
         "$ref": "#/components/schemas/CopyValueTo"
        },
        {
         "$ref": "#/components/schemas/Substraction"
        },
        {
         "$ref": "#/components/schemas/SquareRoot"
        },
        {
         "$ref": "#/components/schemas/FnChain"
        },
        {
         "$ref": "#/components/schemas/SimIndex"
        },
        {
         "$ref": "#/components/schemas/ClampRepeat"
        }
       ]
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "OverrideSet"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A OverrideSet Block"
   },
   "PanelDissipations": {
    "title": "PanelDissipations",
    "required": [
     "total",
     "internalLoads",
     "blockingDiode"
    ],
    "type": "object",
    "properties": {
     "total": {
      "title": "Total",
      "minimum": 0.0,
      "type": "number"
     },
     "internalLoads": {
      "title": "Internalloads",
      "minimum": 0.0,
      "type": "number"
     },
     "blockingDiode": {
      "title": "Blockingdiode",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "ParetoVariate": {
    "title": "ParetoVariate",
    "required": [
     "fn",
     "alpha"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "paretovariate"
      ],
      "type": "string"
     },
     "alpha": {
      "title": "Alpha",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "PassivePointingMode": {
    "title": "PassivePointingMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "odAlgorithm": {
      "title": "ID of Associated OrbitDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `OrbitDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "adAlgorithm": {
      "title": "ID of Associated AttitudeDeterminationAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `AttitudeDeterminationAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "tcAlgorithm": {
      "title": "ID of Associated ThrustControlAlgorithm Block",
      "type": "string",
      "description": "Relationship to zero or one `ThrustControlAlgorithm` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commands",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Rate [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nOptionally add a body frame vector whose alignment to compare to `referenceVector`"
     },
     "referenceVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to zero or one `ReferenceVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nOptionally add a reference vector and compare alignment with `bodyFrameVector`. This will be used to determine an attitude error for analyze plots."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PassivePointingMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PassivePointingMode Block"
   },
   "PerRoundExternalState": {
    "title": "PerRoundExternalState",
    "required": [
     "engineIndex"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "consumed": {
      "title": "Consumed State Variable Query",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "object"
        }
       ]
      },
      "default": []
     },
     "produced": {
      "title": "Produced State Variable Query",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "object"
        }
       ]
      },
      "default": []
     },
     "engineIndex": {
      "title": "Engine Index",
      "type": "integer",
      "description": "The index of the Engine to interface to.  This defines the `timeStep` at which these values are propagated. `0`: GNC, `1`: C&DH, `2`: Power, `3`: Thermal"
     },
     "agents": {
      "title": "IDs of Associated Agent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Agent` blocks. Inverse key: `Agent.externalState`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "PerRoundExternalState"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PerRoundExternalState Block"
   },
   "PeripheralAgent": {
    "title": "PeripheralAgent",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "PeripheralAgent"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PeripheralAgent Block"
   },
   "PeripheralCelestialPoint": {
    "title": "PeripheralCelestialPoint",
    "required": [
     "name",
     "body"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "body": {
      "title": "Celestial Body Name",
      "allOf": [
       {
        "$ref": "#/components/schemas/EphemerisBody"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "PeripheralCelestialPoint"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PeripheralCelestialPoint Block"
   },
   "PeripheralGroundArea": {
    "title": "PeripheralGroundArea",
    "required": [
     "name",
     "vertices",
     "southPole"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "vertices": {
      "title": "Vertices",
      "type": "array",
      "items": {
       "maxItems": 2,
       "minItems": 2,
       "type": "array",
       "items": [
        {
         "type": "number"
        },
        {
         "type": "number"
        }
       ]
      }
     },
     "southPole": {
      "title": "Indicate whether the target area includes the South Pole.",
      "type": "boolean"
     },
     "timeStepConstraints": {
      "title": "Time step constraints.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/components/schemas/TimeStepConstraint"
      },
      "default": {
       "gnc": {
        "min": 5,
        "max": 30
       }
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "PeripheralGroundArea"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PeripheralGroundArea Block"
   },
   "PeripheralGroundPoint": {
    "title": "PeripheralGroundPoint",
    "required": [
     "name",
     "lat",
     "lon",
     "alt"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "kinematics": {
      "title": "ID of Associated Kinematics Block",
      "type": "string",
      "description": "Relationship to a single `Kinematics` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "lat": {
      "title": "Latitude",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAgent181"
       }
      ]
     },
     "lon": {
      "title": "Longitude",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAgent182"
       }
      ]
     },
     "alt": {
      "title": "Altitude",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ]
     },
     "timeStepConstraints": {
      "title": "Time step constraints.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/components/schemas/TimeStepConstraint"
      },
      "default": {
       "gnc": {
        "min": 1,
        "max": 60
       }
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "PeripheralGroundPoint"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PeripheralGroundPoint Block"
   },
   "PeripheralSpacePoint": {
    "title": "PeripheralSpacePoint",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "timeStepConstraints": {
      "title": "Time step constraints.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/components/schemas/TimeStepConstraint"
      },
      "default": {
       "gnc": {
        "min": 0.1,
        "max": 10
       }
      }
     },
     "kinematics": {
      "title": "ID of Associated Orbit Block",
      "type": "string",
      "description": "Relationship to a single `Orbit` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PeripheralSpacePoint"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PeripheralSpacePoint Block"
   },
   "PermanentDipoleMagnet": {
    "title": "PermanentDipoleMagnet",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "torque": {
      "title": "Current Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "dipoleMomentMagnitude": {
      "title": "Magnetic Moment Magnitude [A\u2022m\u00b2]",
      "minimum": 0.0,
      "type": "number",
      "default": 0
     },
     "dipoleOrientation": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nBody Frame Vector parallel to the magnetic moment, from the South to North pole by convention."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PermanentDipoleMagnet"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A permanent magnet with a static magnetic moment. Permanent magnets are often used as a form of passive attitude control."
   },
   "PhotovoltaicPowerProcessor": {
    "title": "PhotovoltaicPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "PhotovoltaicPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PhotovoltaicPowerProcessor Block"
   },
   "PidAlgorithm": {
    "title": "PidAlgorithm",
    "required": [
     "name",
     "gainP",
     "gainI",
     "gainD",
     "gainC"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "actuators": {
      "title": "IDs of Associated Actuator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Actuator` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "gainP": {
      "title": "Proportional Gain",
      "minimum": 0.0,
      "type": "number",
      "description": "Weighting applied to multiplicative quaternion error."
     },
     "gainI": {
      "title": "Integral Gain",
      "minimum": 0.0,
      "type": "number",
      "description": "Weighting applied to integratal of the multiplicative quaternion error."
     },
     "gainD": {
      "title": "Derivative Gain",
      "minimum": 0.0,
      "type": "number",
      "description": "Weighting applied to angular rate error."
     },
     "gainC": {
      "title": "Gain C",
      "minimum": 0.0,
      "type": "number",
      "description": "Dictates the strength of the magnetorquer desaturation torques."
     },
     "errorIntegral": {
      "title": "Attitude Error Integral",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PidAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PidAlgorithm Block"
   },
   "PieSpec": {
    "title": "PieSpec",
    "required": [
     "type",
     "variables"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "pie"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/PieVariable"
      }
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "PieVariable": {
    "title": "PieVariable",
    "required": [
     "legend"
    ],
    "type": "object",
    "properties": {
     "each": {
      "title": "Each",
      "type": "string"
     },
     "keys": {
      "title": "Keys",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "legend": {
      "title": "Legend",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "ops": {
      "title": "Ops",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "PolarCircularReferenceOrbit": {
    "title": "PolarCircularReferenceOrbit",
    "required": [
     "initialRefOrbit",
     "raan",
     "nu",
     "alt"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "POLAR_CIRC"
      ],
      "type": "string"
     },
     "raan": {
      "title": "RAAN [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "alt": {
      "title": "Altitude [km]",
      "minimum": 100.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Position": {
    "title": "Position",
    "type": "object",
    "properties": {
     "gcLlaDeg": {
      "title": "Gclladeg",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "gcLla": {
      "title": "Gclla",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "ecef": {
      "title": "Ecef",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "eci": {
      "title": "Eci",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "llaDeg": {
      "title": "Lladeg",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "lla": {
      "title": "Lla",
      "maxItems": 3,
      "minItems": 3,
      "type": "array",
      "items": {
       "type": "number"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "PositionSensor": {
    "title": "PositionSensor",
    "required": [
     "name",
     "oneSigmaDistanceError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "oneSigmaDistanceError": {
      "title": "Measurement Per-Axis Error [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/DistanceSensors86"
       }
      ],
      "description": "Standard deviation of the error added to all elements of the measured position."
     },
     "measurement": {
      "title": "Measured Position Vector [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PositionSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A PositionSensor Block"
   },
   "ProcessorDissipations": {
    "title": "ProcessorDissipations",
    "required": [
     "total",
     "internalLoads",
     "busRegulators",
     "powerController"
    ],
    "type": "object",
    "properties": {
     "total": {
      "title": "Total",
      "minimum": 0.0,
      "type": "number"
     },
     "internalLoads": {
      "title": "Internalloads",
      "minimum": 0.0,
      "type": "number"
     },
     "busRegulators": {
      "title": "Busregulators",
      "minimum": 0.0,
      "type": "number"
     },
     "powerController": {
      "title": "Powercontroller",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "PropagatedOrbitKinematics": {
    "title": "PropagatedOrbitKinematics",
    "required": [
     "initialStateDefType",
     "initialStateDefParams"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "period": {
      "title": "Orbital Period [Days]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "semiLatusRectum": {
      "title": "Semi-Latus Rectum [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "radiusPerigee": {
      "title": "Radius of Perigee [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "In Shadow Status",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True indicates that the vehicle is currently in shadow.",
      "default": false
     },
     "beta": {
      "title": "Beta Angle",
      "maximum": 1.5707963267948966,
      "minimum": -1.5707963267948966,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magneticFieldVector": {
      "title": "Magnetic Field Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "atmosphericDensity": {
      "title": "Atmospheric Density [kg/m\u00b3]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set dynamically given Agent `position`.",
      "default": 0.0
     },
     "lst": {
      "title": "Local Sidereal Time [rad]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "initialStateDefType": {
      "title": "Initial State Definition Type",
      "allOf": [
       {
        "$ref": "#/components/schemas/InitialStateDefType"
       }
      ],
      "description": "\nThis attribute defines the necessary parameters for `initialStateDefParams`.\n\n- `ORBITAL_ELEMENTS`: Define initial orbit via classical orbital elements\n- `REF_ORBIT`: Define initial orbit via `ReferenceOrbit`. If selected, define one of the following under `initialStateDefParams`:\n    - `IssReferenceOrbit`\n    - `GeostationaryReferenceOrbit`\n    - `GeostationaryTransferReferenceOrbit`\n    - `PolarCircularReferenceOrbit`\n    - `EquatorialCircularReferenceOrbit`\n    - `SunSynchronousCircularOrbit`\n- `REL_ORBIT`: Define initial orbit via LVLH offset or natural motion circular orbit. If selected, define one of the following under `initialStateDefParams`:\n    - `LvlhOffsetOrbit`\n    - `NaturalMotionCircOrbit`\n- `ECI_STATE`: Define initial orbit via ECI state\n- `TLE`: Define initial orbit via TLE\n        "
     },
     "initialStateDefParams": {
      "title": "Initial State Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/StateVector"
       },
       {
        "$ref": "#/components/schemas/ClassicalOrbitalElements"
       },
       {
        "$ref": "#/components/schemas/Tle"
       },
       {
        "$ref": "#/components/schemas/IssReferenceOrbit"
       },
       {
        "$ref": "#/components/schemas/GeostationaryReferenceOrbit"
       },
       {
        "$ref": "#/components/schemas/GeostationaryTransferReferenceOrbit"
       },
       {
        "$ref": "#/components/schemas/PolarCircularReferenceOrbit"
       },
       {
        "$ref": "#/components/schemas/EquatorialCircularReferenceOrbit"
       },
       {
        "$ref": "#/components/schemas/SunSynchronousCircularOrbit"
       },
       {
        "$ref": "#/components/schemas/LvlhOffsetOrbit"
       },
       {
        "$ref": "#/components/schemas/NaturalMotionCircOrbit"
       }
      ],
      "description": "The parameters required for defining the orbit specified by `initialStateDefType`."
     },
     "type": {
      "title": "Type",
      "enum": [
       "PropagatedOrbitKinematics"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Agents with this Orbit block will propagate their position and velocity with our high-precision propagator, which\nincludes a high-fidelity gravity model, atmospheric drag, and solar radiation pressure. The initial state of the\nagent is specified in the configuration of this block."
   },
   "QuasiRegDetPowerProcessor": {
    "title": "QuasiRegDetPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "QuasiRegDetPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A QuasiRegDetPowerProcessor Block"
   },
   "QuasiRegDetTopologyParams": {
    "title": "QuasiRegDetTopologyParams",
    "required": [
     "bcrEfficiency",
     "outputPowerRating",
     "chargeDiodeDrop",
     "dischargeDiodeDrop",
     "chargeControllerBusVoltage"
    ],
    "type": "object",
    "properties": {
     "bcrEfficiency": {
      "title": "Battery Charge Regulator (BCR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "outputPowerRating": {
      "title": "Output Power Rating [W]",
      "minimum": 0.0,
      "type": "number"
     },
     "chargeDiodeDrop": {
      "title": "Charge Diode Drop [V]",
      "minimum": 0.0,
      "type": "number"
     },
     "dischargeDiodeDrop": {
      "title": "Discharge Diode Drop [V]",
      "minimum": 0.0,
      "type": "number"
     },
     "chargeControllerBusVoltage": {
      "title": "Charge Controller Bus Voltage [V]",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Quaternion": {
    "title": "Quaternion",
    "type": "object",
    "properties": {
     "ecef_body": {
      "title": "Ecef Body",
      "maxItems": 4,
      "minItems": 4,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "body_ecef": {
      "title": "Body Ecef",
      "maxItems": 4,
      "minItems": 4,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "eci_body": {
      "title": "Eci Body",
      "maxItems": 4,
      "minItems": 4,
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "body_eci": {
      "title": "Body Eci",
      "maxItems": 4,
      "minItems": 4,
      "type": "array",
      "items": {
       "type": "number"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Randrange": {
    "title": "Randrange",
    "required": [
     "fn",
     "start",
     "stop",
     "step"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "randrange"
      ],
      "type": "string"
     },
     "start": {
      "title": "Start",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "stop": {
      "title": "Stop",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "step": {
      "title": "Step",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "RangeRelationship": {
    "title": "RangeRelationship",
    "enum": [
     "IN_INCLUSIVE_RANGE",
     "IN_EXCLUSIVE_RANGE",
     "NOT_IN_INCLUSIVE_RANGE",
     "NOT_IN_EXCLUSIVE_RANGE"
    ],
    "description": "An enumeration."
   },
   "ReactionWheel": {
    "title": "ReactionWheel",
    "required": [
     "name",
     "inertia",
     "ratedMomentum",
     "ratedTorque",
     "efficiency"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "busRegulator": {
      "title": "ID of Associated BusRegulator Block",
      "type": "string",
      "description": "Relationship to zero or one `BusRegulator` blocks. Inverse key: `BusRegulator.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PowerProcessor` blocks. Inverse key: `PowerProcessor.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "activeFailureMode": {
      "title": "ID of Associated ActuatorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `ActuatorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated ActuatorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ActuatorFailureMode` blocks. Inverse key: `ActuatorFailureMode.actuator`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "torque": {
      "title": "Current Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "maxTorque": {
      "title": "Current Estimated Maximum Torque Vector [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedTorqueMagnitude": {
      "title": "Current Commanded Torque [N\u2022m]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "inertia": {
      "title": "Wheel Inertia [kg\u2022m\u00b2]",
      "minimum": 0.0,
      "type": "number"
     },
     "ratedMomentum": {
      "title": "Maximum Stored Momentum [kg\u2022m/s]",
      "minimum": 0.0,
      "type": "number"
     },
     "ratedTorque": {
      "title": "Maximum Torque [N\u2022m]",
      "minimum": 0.0,
      "type": "number"
     },
     "efficiency": {
      "title": "Motor Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "frictionDissipation": {
      "title": "Friction Heat Dissipation [W]",
      "minimum": 0.0,
      "type": "number",
      "default": 0.0
     },
     "momentum": {
      "title": "Wheel Momentum [kg\u2022m/s]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "speed": {
      "title": "Wheel Speed [rad/s]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "torqueMargin": {
      "title": "Torque Margin [%]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "momentumMargin": {
      "title": "Momentum Margin [%]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "ReactionWheel"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ReactionWheel Block"
   },
   "RepoCreateReq": {
    "title": "RepoCreateReq",
    "required": [
     "name",
     "workspace",
     "dataType"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 64,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 1000,
      "type": "string"
     },
     "workspace": {
      "title": "Workspace",
      "type": "string"
     },
     "dataType": {
      "title": "Datatype",
      "type": "string"
     }
    }
   },
   "RepoImportReq": {
    "title": "RepoImportReq",
    "required": [
     "workspace",
     "file"
    ],
    "type": "object",
    "properties": {
     "workspace": {
      "title": "Workspace",
      "type": "string"
     },
     "file": {
      "title": "File",
      "type": "string",
      "format": "binary"
     }
    }
   },
   "RepoRes": {
    "title": "RepoRes",
    "required": [
     "id",
     "name",
     "workspace",
     "dataType",
     "dateCreated",
     "dateModified",
     "branches"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "integer"
     },
     "name": {
      "title": "Name",
      "maxLength": 64,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 1000,
      "type": "string"
     },
     "workspace": {
      "title": "Workspace",
      "type": "object"
     },
     "dataType": {
      "title": "Datatype",
      "type": "string"
     },
     "dateCreated": {
      "title": "Datecreated",
      "type": "string",
      "format": "date-time"
     },
     "dateModified": {
      "title": "Datemodified",
      "type": "string",
      "format": "date-time"
     },
     "branches": {
      "title": "Branches",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/BranchRes"
      }
     }
    }
   },
   "RepoUpdateReq": {
    "title": "RepoUpdateReq",
    "required": [
     "name",
     "dataType"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "maxLength": 64,
      "type": "string"
     },
     "description": {
      "title": "Description",
      "maxLength": 1000,
      "type": "string"
     },
     "dataType": {
      "title": "Datatype",
      "type": "string"
     }
    }
   },
   "Representation": {
    "title": "Representation",
    "enum": [
     "TRUTH",
     "ESTIMATE"
    ],
    "description": "An enumeration."
   },
   "SameTargetMultiCondition": {
    "title": "SameTargetMultiCondition",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "targetCompliance": {
      "title": "Target Compliance Status",
      "type": "object",
      "additionalProperties": {
       "type": "boolean"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>A dictionary keyed by `Target` ID where each value is the compliance of the condition for the respective `Target`."
     },
     "targetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "isFilter": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to zero or one `TargetGroup` blocks. Inverse key: `TargetGroup.filterConditions`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nThis relationship is set when the condition filters the related TargetGroup. Otherwise, set to None."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "SameTargetMultiCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SameTargetMultiCondition Block"
   },
   "Sample": {
    "title": "Sample",
    "required": [
     "fn",
     "counts",
     "population",
     "k"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "sample"
      ],
      "type": "string"
     },
     "counts": {
      "title": "Counts",
      "type": "array",
      "items": {}
     },
     "population": {
      "title": "Population",
      "type": "array",
      "items": {}
     },
     "k": {
      "title": "K",
      "type": "integer"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SatelliteParameters": {
    "title": "SatelliteParameters",
    "enum": [
     "BETA",
     "MEAN_ANOM",
     "TRUE_ANOM",
     "BATTERY_SOC"
    ],
    "description": "An enumeration."
   },
   "SatelliteToSatelliteCondition": {
    "title": "SatelliteToSatelliteCondition",
    "required": [
     "name",
     "relationship"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "paramA": {
      "title": "Parameter A Selection",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SatelliteParameters"
       },
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "paramB": {
      "title": "Parameter B Selection",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SatelliteParameters"
       },
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "SatelliteToSatelliteCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SatelliteToSatelliteCondition Block"
   },
   "SatelliteToScalarCondition": {
    "title": "SatelliteToScalarCondition",
    "required": [
     "name",
     "relationship",
     "scalar",
     "param"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "anyOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       },
       {
        "$ref": "#/components/schemas/RangeRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "scalar": {
      "title": "Constant value to compare to or pair of values to use as a range.",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "object",
        "additionalProperties": {
         "type": "number"
        }
       },
       {
        "maxItems": 2,
        "minItems": 2,
        "type": "array",
        "items": {
         "anyOf": [
          {
           "type": "number"
          },
          {
           "type": "object",
           "additionalProperties": {
            "type": "number"
           }
          }
         ]
        }
       }
      ]
     },
     "param": {
      "title": "Parameter A Selection",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SatelliteParameters"
       },
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "SatelliteToScalarCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SatelliteToScalarCondition Block"
   },
   "SatelliteToTargetCondition": {
    "title": "SatelliteToTargetCondition",
    "required": [
     "name",
     "relationship",
     "targetParam"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "selfParam": {
      "title": "Satellite Parameter Selection",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SatelliteParameters"
       },
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "targetA": {
      "title": "ID of Associated Target Block",
      "type": "string",
      "description": "Relationship to a single `Target` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "targetParam": {
      "title": "Target Parameter Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/TargetParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "SatelliteToTargetCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SatelliteToTargetCondition Block"
   },
   "ScanFieldOfViewArticulationMode": {
    "title": "ScanFieldOfViewArticulationMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to a single `FieldOfView` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "commandedArticulations": {
      "title": "Commanded Articulations",
      "type": "array",
      "items": {},
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "scanParameters": {
      "title": "IDs of Associated BodyFrameVector Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `BodyFrameVector` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "timeActive": {
      "title": "Time Active",
      "allOf": [
       {
        "$ref": "#/components/schemas/DurationFieldOfView69"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "s": 0
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "ScanFieldOfViewArticulationMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ScanFieldOfViewArticulationMode Block"
   },
   "Scenario": {
    "title": "Scenario",
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/definitions/AgentGroup"
        },
        {
         "$ref": "#/definitions/ClockConfig"
        },
        {
         "$ref": "#/definitions/EcefStationaryKinematics"
        },
        {
         "$ref": "#/definitions/Menu"
        },
        {
         "$ref": "#/definitions/MenuItem"
        },
        {
         "$ref": "#/definitions/OverrideSet"
        },
        {
         "$ref": "#/definitions/PerRoundExternalState"
        },
        {
         "$ref": "#/definitions/PeripheralAgent"
        },
        {
         "$ref": "#/definitions/PeripheralCelestialPoint"
        },
        {
         "$ref": "#/definitions/PeripheralGroundArea"
        },
        {
         "$ref": "#/definitions/PeripheralGroundPoint"
        },
        {
         "$ref": "#/definitions/PeripheralSpacePoint"
        },
        {
         "$ref": "#/definitions/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/definitions/SpkEphemeris"
        },
        {
         "$ref": "#/definitions/SpontaneousExternalState"
        },
        {
         "$ref": "#/definitions/StkEphemeris"
        },
        {
         "$ref": "#/definitions/TemplatedAgent"
        },
        {
         "$ref": "#/definitions/WaypointPathWithDuration"
        },
        {
         "$ref": "#/definitions/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/definitions/WaypointPathWithTimestamps"
        },
        {
         "$ref": "#/definitions/WidgetSpec"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "clockConfig": {
      "title": "ID of Associated ClockConfig Block",
      "type": "string",
      "description": "Relationship to zero or one `ClockConfig` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "Scenario"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "A Scenario Metamodel"
   },
   "ScenarioModelRes": {
    "title": "ScenarioModelRes",
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/definitions/AgentGroup"
        },
        {
         "$ref": "#/definitions/ClockConfig"
        },
        {
         "$ref": "#/definitions/EcefStationaryKinematics"
        },
        {
         "$ref": "#/definitions/Menu"
        },
        {
         "$ref": "#/definitions/MenuItem"
        },
        {
         "$ref": "#/definitions/OverrideSet"
        },
        {
         "$ref": "#/definitions/PerRoundExternalState"
        },
        {
         "$ref": "#/definitions/PeripheralAgent"
        },
        {
         "$ref": "#/definitions/PeripheralCelestialPoint"
        },
        {
         "$ref": "#/definitions/PeripheralGroundArea"
        },
        {
         "$ref": "#/definitions/PeripheralGroundPoint"
        },
        {
         "$ref": "#/definitions/PeripheralSpacePoint"
        },
        {
         "$ref": "#/definitions/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/definitions/SpkEphemeris"
        },
        {
         "$ref": "#/definitions/SpontaneousExternalState"
        },
        {
         "$ref": "#/definitions/StkEphemeris"
        },
        {
         "$ref": "#/definitions/TemplatedAgent"
        },
        {
         "$ref": "#/definitions/WaypointPathWithDuration"
        },
        {
         "$ref": "#/definitions/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/definitions/WaypointPathWithTimestamps"
        },
        {
         "$ref": "#/definitions/WidgetSpec"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "clockConfig": {
      "title": "ID of Associated ClockConfig Block",
      "type": "string",
      "description": "Relationship to zero or one `ClockConfig` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "_blockNames": {
      "title": " Blocknames",
      "type": "array",
      "items": {},
      "description": "Names of all valid `Block`s for this `Metamodel` class"
     },
     "_relationships": {
      "title": " Relationships",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of relationship fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_quantityKinds": {
      "title": " Quantitykinds",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of `QuantityKind` fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_supers": {
      "title": " Supers",
      "type": "object",
      "description": "Object mapping `Block` class names to a list of names of their direct super classes."
     },
     "type": {
      "title": "Type",
      "enum": [
       "ScenarioModelRes"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Class for Scenario with meta attributes"
   },
   "ScenarioModelRoot": {
    "title": "ScenarioModelRoot",
    "type": "object",
    "properties": {
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "clockConfig": {
      "title": "ID of Associated ClockConfig Block",
      "type": "string",
      "description": "Relationship to zero or one `ClockConfig` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "ScenarioModelRoot"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Scenario Root Attributes"
   },
   "ScenarioModelUpdateInterface": {
    "title": "ScenarioModelUpdateInterface",
    "required": [
     "root",
     "blocks",
     "delete"
    ],
    "type": "object",
    "properties": {
     "root": {
      "$ref": "#/components/schemas/ScenarioModelRoot"
     },
     "blocks": {
      "title": "Blocks",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/PeripheralGroundArea"
        },
        {
         "$ref": "#/components/schemas/WidgetSpec"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/components/schemas/PerRoundExternalState"
        },
        {
         "$ref": "#/components/schemas/SpontaneousExternalState"
        },
        {
         "$ref": "#/components/schemas/ClockConfig"
        },
        {
         "$ref": "#/components/schemas/MenuItem"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithDuration"
        },
        {
         "$ref": "#/components/schemas/AgentGroup"
        },
        {
         "$ref": "#/components/schemas/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/components/schemas/EcefStationaryKinematics"
        },
        {
         "$ref": "#/components/schemas/SpkEphemeris"
        },
        {
         "$ref": "#/components/schemas/StkEphemeris"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithTimestamps"
        },
        {
         "$ref": "#/components/schemas/OverrideSet"
        },
        {
         "$ref": "#/components/schemas/TemplatedAgent"
        },
        {
         "$ref": "#/components/schemas/PeripheralAgent"
        },
        {
         "$ref": "#/components/schemas/PeripheralGroundPoint"
        },
        {
         "$ref": "#/components/schemas/PeripheralSpacePoint"
        },
        {
         "$ref": "#/components/schemas/PeripheralCelestialPoint"
        },
        {
         "$ref": "#/components/schemas/Menu"
        }
       ]
      }
     },
     "delete": {
      "title": "Delete",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "SelfToScalarCondition": {
    "title": "SelfToScalarCondition",
    "required": [
     "name",
     "relationship",
     "scalar",
     "param"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "anyOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       },
       {
        "$ref": "#/components/schemas/RangeRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "scalar": {
      "title": "Constant value to compare to or pair of values to use as a range.",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "object",
        "additionalProperties": {
         "type": "number"
        }
       },
       {
        "maxItems": 2,
        "minItems": 2,
        "type": "array",
        "items": {
         "anyOf": [
          {
           "type": "number"
          },
          {
           "type": "object",
           "additionalProperties": {
            "type": "number"
           }
          }
         ]
        }
       }
      ]
     },
     "param": {
      "title": "Parameter Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ],
      "description": "Choose a satellite parameter to compare to the scalar value. The default units indicated in the description will be used."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SelfToScalarCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SelfToScalarCondition Block"
   },
   "SelfToSelfCondition": {
    "title": "SelfToSelfCondition",
    "required": [
     "name",
     "relationship"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "paramA": {
      "title": "Parameter A Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "paramB": {
      "title": "Parameter B Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "SelfToSelfCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SelfToSelfCondition Block"
   },
   "SelfToTargetCondition": {
    "title": "SelfToTargetCondition",
    "required": [
     "name",
     "relationship",
     "selfParam",
     "targetParam"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "selfParam": {
      "title": "Self Parameter Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "targetA": {
      "title": "ID of Associated Target Block",
      "type": "string",
      "description": "Relationship to a single `Target` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "targetParam": {
      "title": "Target Parameter Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/TargetParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "SelfToTargetCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SelfToTargetCondition Block"
   },
   "SideCategories": {
    "title": "SideCategories",
    "enum": [
     "COMPONENT",
     "SURFACE",
     "COOLER"
    ],
    "description": "An enumeration."
   },
   "SimIndex": {
    "title": "SimIndex",
    "required": [
     "sim_index"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "sim_index": {
      "title": "Sim Index",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/Equals"
        },
        {
         "$ref": "#/components/schemas/Addition"
        },
        {
         "$ref": "#/components/schemas/Multiply"
        },
        {
         "$ref": "#/components/schemas/Divide"
        },
        {
         "$ref": "#/components/schemas/Choices"
        },
        {
         "$ref": "#/components/schemas/Sample"
        },
        {
         "$ref": "#/components/schemas/Randrange"
        },
        {
         "$ref": "#/components/schemas/Uniform"
        },
        {
         "$ref": "#/components/schemas/Triangular"
        },
        {
         "$ref": "#/components/schemas/Expovariate"
        },
        {
         "$ref": "#/components/schemas/GammaVariate"
        },
        {
         "$ref": "#/components/schemas/Gauss"
        },
        {
         "$ref": "#/components/schemas/NormalVariate"
        },
        {
         "$ref": "#/components/schemas/LogNormVariate"
        },
        {
         "$ref": "#/components/schemas/VonmisesVariate"
        },
        {
         "$ref": "#/components/schemas/ParetoVariate"
        },
        {
         "$ref": "#/components/schemas/WeibullVariate"
        },
        {
         "$ref": "#/components/schemas/Clamp"
        },
        {
         "$ref": "#/components/schemas/CopyValueTo"
        },
        {
         "$ref": "#/components/schemas/Substraction"
        },
        {
         "$ref": "#/components/schemas/SquareRoot"
        },
        {
         "$ref": "#/components/schemas/FnChain"
        },
        {
         "type": "integer"
        },
        {
         "type": "number"
        },
        {
         "type": "string"
        }
       ]
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SimulationJob": {
    "title": "SimulationJob",
    "required": [
     "id",
     "status",
     "bedRef",
     "dataArray",
     "seed",
     "scenarioHash",
     "startTime",
     "stopTime"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "ID",
      "type": "string"
     },
     "status": {
      "title": "Simulation Status",
      "allOf": [
       {
        "$ref": "#/components/schemas/services__model__spec_models__SimulationJob__Statuses"
       }
      ],
      "description": "This value is used to determine the current state of the simulation, including its status upon exit."
     },
     "bedRef": {
      "title": "Simulation Bed Reference",
      "type": "string",
      "description": "A unique identifier for the Simulation Bed head node."
     },
     "dataArray": {
      "title": "Data Identifier",
      "type": "string",
      "description": "A unique identifier for the Data Service array that stores all of this simulation's data streams."
     },
     "seed": {
      "title": "Simulation Seed",
      "type": "integer",
      "description": "This value is used as part of the seed for the random number generators used throughout the simulation for purposes such as simulated error injection. Simulations are deterministic for a given `seed`."
     },
     "scenarioHash": {
      "title": "Scenario Hash",
      "type": "string",
      "description": "A unique hash identifying the scenario and agent configuration for this job."
     },
     "startTime": {
      "title": "Simulation Start Time [MJD]",
      "type": "number"
     },
     "stopTime": {
      "title": "Simulation Stop Time [MJD]",
      "type": "number"
     },
     "realTime": {
      "title": "Real Time Flag",
      "type": "boolean",
      "description": "Coming soon.",
      "default": false
     },
     "progress": {
      "title": "Simulation Progress",
      "type": "object",
      "description": "This property is missing when simulation status is unknown."
     }
    }
   },
   "SingleConvHybridPowerProcessor": {
    "title": "SingleConvHybridPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "availableSolarRootPower": {
      "title": "Available Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "solarRootPower": {
      "title": "Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "SingleConvHybridPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SingleConvHybridPowerProcessor Block"
   },
   "SingleConvHybridTopologyParams": {
    "title": "SingleConvHybridTopologyParams",
    "required": [
     "bcrEfficiency",
     "outputPowerRating",
     "bypassBlockingDiodeDrop"
    ],
    "type": "object",
    "properties": {
     "bcrEfficiency": {
      "title": "Battery Charge Regulator (BCR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "outputPowerRating": {
      "title": "Output Power Rating [W]",
      "minimum": 0.0,
      "type": "number"
     },
     "bypassBlockingDiodeDrop": {
      "title": "Bypass Blocking Diode Drop [V]",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SingleConvMpptPowerProcessor": {
    "title": "SingleConvMpptPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "availableSolarRootPower": {
      "title": "Available Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "solarRootPower": {
      "title": "Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "SingleConvMpptPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SingleConvMpptPowerProcessor Block"
   },
   "SingleConvMpptTopologyParams": {
    "title": "SingleConvMpptTopologyParams",
    "required": [
     "bcrEfficiency",
     "outputPowerRating"
    ],
    "type": "object",
    "properties": {
     "bcrEfficiency": {
      "title": "Battery Charge Regulator (BCR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "outputPowerRating": {
      "title": "Output Power Rating [W]",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SlidingModeAlgorithm": {
    "title": "SlidingModeAlgorithm",
    "required": [
     "name",
     "gainK",
     "gainG",
     "gainC",
     "epsilon"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "actuators": {
      "title": "IDs of Associated Actuator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Actuator` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "reactionWheelCommands": {
      "title": "Reaction Wheel Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magnetorquerCommands": {
      "title": "Magnetorquer Commanded Torques [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "gainK": {
      "title": "Gain K",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "Alters the relative weighting between angular rate error."
     },
     "gainG": {
      "title": "Gain G",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "Scales the overall speed of convergence."
     },
     "gainC": {
      "title": "Gain C",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "Dictates the strength of the magnetorquer desaturation torques."
     },
     "epsilon": {
      "title": "Epsilon",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "The sliding mode boundary layer. Higher values may produce more error, but less chattering."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SlidingModeAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SlidingModeAlgorithm Block"
   },
   "SolarArray": {
    "title": "SolarArray",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "powerProcessor": {
      "title": "ID of Associated PhotovoltaicPowerProcessor Block",
      "type": "string",
      "description": "Relationship to a single `PhotovoltaicPowerProcessor` block. Inverse key: `PhotovoltaicPowerProcessor.solarArrays`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "panels": {
      "title": "IDs of Associated SolarPanel Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarPanel` blocks. Inverse key: `SolarPanel.array`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "powerCommand": {
      "title": "Processor-Commanded Power Parameters",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0,
       null
      ]
     },
     "idealOpenCircuitVoltage": {
      "title": "Open circuit voltage [V] based on VOC of the panels.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "idealShortCircuitCurrent": {
      "title": "Short-circuit current [A] based on that of the panels.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "current": {
      "title": "Array operating current [A]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "voltage": {
      "title": "Array operating voltage [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPower": {
      "title": "Max panel power [W] at the given illumination.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPowerVoltage": {
      "title": "Max array voltage [V] at the given illumination.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPowerCurrent": {
      "title": "Max array current [A] at the given illumination.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "openCircuitVoltage": {
      "title": "Left-shifted open circuit voltage [V] at given illumination.",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "power": {
      "title": "Overall operating solar panel power [W].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "utilization": {
      "title": "Array utilization.",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SolarArray"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SolarArray Block"
   },
   "SolarCell": {
    "title": "SolarCell",
    "required": [
     "partNumber",
     "openCircuitVoltage",
     "shortCircuitCurrent",
     "maxPowerVoltage",
     "maxPowerCurrent",
     "numJunctions"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "openCircuitVoltage": {
      "title": "Open Circuit Voltage [V]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "shortCircuitCurrent": {
      "title": "Short Circuit Current [A]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "maxPowerVoltage": {
      "title": "Max Power Voltage [V]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "maxPowerCurrent": {
      "title": "Max Power Current [A]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "numJunctions": {
      "title": "# of Junctions",
      "minimum": 1.0,
      "type": "integer"
     },
     "type": {
      "title": "Type",
      "enum": [
       "SolarCell"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SolarCell Block"
   },
   "SolarPanel": {
    "title": "SolarPanel",
    "required": [
     "name",
     "numSeries",
     "numParallel",
     "blockingDiodeDrop"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/PanelDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "numSeries": {
      "title": "# of Series Cells",
      "minimum": 1.0,
      "type": "integer"
     },
     "numParallel": {
      "title": "# of Parallel Cells",
      "minimum": 1.0,
      "type": "integer"
     },
     "blockingDiodeDrop": {
      "title": "Blocking Diode Drop [V]",
      "minimum": 0.0,
      "type": "number",
      "description": "Set to 0 to omit diode."
     },
     "cell": {
      "title": "ID of Associated SolarCell Block",
      "type": "string",
      "description": "Relationship to a single `SolarCell` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "surface": {
      "title": "ID of Associated Surface Block",
      "type": "string",
      "description": "Relationship to a single `Surface` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "array": {
      "title": "ID of Associated SolarArray Block",
      "type": "string",
      "description": "Relationship to zero or one `SolarArray` blocks. Inverse key: `SolarArray.panels`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "idealMaxPowerVoltage": {
      "title": "Ideal voltage at maximum power point [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "idealMaxPowerCurrent": {
      "title": "Current at maximum power point [A].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "idealOpenCircuitVoltage": {
      "title": "Open circuit voltage based on VOC of the cells [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "idealShortCircuitCurrent": {
      "title": "Short-circuit current based on that of the cells [A].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "equivSeriesResistance": {
      "title": "Series resistance of equivalent circuit model [ohms].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "equivShuntResistance": {
      "title": "Shunt resistance of equivalent circuit model [ohms].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "equivDarkCurrent": {
      "title": "Dark saturation current of equivalent circuit model [A].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "equivLightCurrent": {
      "title": "Light (photovoltaic) current of equivalent circuit model [A].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "current": {
      "title": "Panel operating current [A]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "voltage": {
      "title": "Panel operating voltage [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPower": {
      "title": "Max panel power at the given illumination [W].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPowerVoltage": {
      "title": "Max panel voltage at the given illumination [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "maxPowerCurrent": {
      "title": "Max panel current at the given illumination [A].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "openCircuitVoltage": {
      "title": "Left-shifted open circuit voltage at given illumination [V].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "power": {
      "title": "Overall operating power [W].",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "utilization": {
      "title": "Panel utilization.",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SolarPanel"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SolarPanel Block"
   },
   "Spacecraft": {
    "title": "Spacecraft",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor",
     "mass",
     "inertia"
    ],
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/ActivePointingMode"
        },
        {
         "$ref": "#/components/schemas/AngularVelocitySensor"
        },
        {
         "$ref": "#/components/schemas/Antenna"
        },
        {
         "$ref": "#/components/schemas/AreaTarget"
        },
        {
         "$ref": "#/components/schemas/AveragingAlgorithm"
        },
        {
         "$ref": "#/components/schemas/Battery"
        },
        {
         "$ref": "#/components/schemas/BatteryCell"
        },
        {
         "$ref": "#/components/schemas/BatteryPack"
        },
        {
         "$ref": "#/components/schemas/BodyFrameVector"
        },
        {
         "$ref": "#/components/schemas/BodyInFovCondition"
        },
        {
         "$ref": "#/components/schemas/BusRegulator"
        },
        {
         "$ref": "#/components/schemas/CelestialTarget"
        },
        {
         "$ref": "#/components/schemas/CelestialVector"
        },
        {
         "$ref": "#/components/schemas/CircularFieldOfView"
        },
        {
         "$ref": "#/components/schemas/CloudFractionGroup"
        },
        {
         "$ref": "#/components/schemas/CloudFractionGroupToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/CombinationalLogic"
        },
        {
         "$ref": "#/components/schemas/Component"
        },
        {
         "$ref": "#/components/schemas/ComponentToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/CompoundCondition"
        },
        {
         "$ref": "#/components/schemas/Cooler"
        },
        {
         "$ref": "#/components/schemas/CooperativeTransmitInterface"
        },
        {
         "$ref": "#/components/schemas/DataBus"
        },
        {
         "$ref": "#/components/schemas/DataInterface"
        },
        {
         "$ref": "#/components/schemas/DataMode"
        },
        {
         "$ref": "#/components/schemas/DataStorage"
        },
        {
         "$ref": "#/components/schemas/DataType"
        },
        {
         "$ref": "#/components/schemas/DirectMeasurementAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/DirectionSensor"
        },
        {
         "$ref": "#/components/schemas/DynamicallyLoadedComponent"
        },
        {
         "$ref": "#/components/schemas/EkfAlgorithm"
        },
        {
         "$ref": "#/components/schemas/ElapsedTimeCondition"
        },
        {
         "$ref": "#/components/schemas/FieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/FiniteDifferenceOrbitInitializer"
        },
        {
         "$ref": "#/components/schemas/FiniteStateMachine"
        },
        {
         "$ref": "#/components/schemas/FixedSchedule"
        },
        {
         "$ref": "#/components/schemas/FixedSurface"
        },
        {
         "$ref": "#/components/schemas/FuelReservoir"
        },
        {
         "$ref": "#/components/schemas/FullyRegDetPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/GenericAdAlgorithm"
        },
        {
         "$ref": "#/components/schemas/GenericOdAlgorithm"
        },
        {
         "$ref": "#/components/schemas/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/components/schemas/GpsAlgorithm"
        },
        {
         "$ref": "#/components/schemas/GroundTarget"
        },
        {
         "$ref": "#/components/schemas/Heater"
        },
        {
         "$ref": "#/components/schemas/IdealOrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/InternalDataInterface"
        },
        {
         "$ref": "#/components/schemas/LaserCommModule"
        },
        {
         "$ref": "#/components/schemas/LoadState"
        },
        {
         "$ref": "#/components/schemas/LocalVector"
        },
        {
         "$ref": "#/components/schemas/LockSpinPointingMode"
        },
        {
         "$ref": "#/components/schemas/LogicalConfiguration"
        },
        {
         "$ref": "#/components/schemas/MagneticDetumblingAlgorithm"
        },
        {
         "$ref": "#/components/schemas/MagneticHysteresisRod"
        },
        {
         "$ref": "#/components/schemas/Magnetorquer"
        },
        {
         "$ref": "#/components/schemas/MaxAlignPointingMode"
        },
        {
         "$ref": "#/components/schemas/MekfAlgorithm"
        },
        {
         "$ref": "#/components/schemas/Modem"
        },
        {
         "$ref": "#/components/schemas/OpticalAttitudeSensor"
        },
        {
         "$ref": "#/components/schemas/OrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/PassivePointingMode"
        },
        {
         "$ref": "#/components/schemas/PassiveTransmitInterface"
        },
        {
         "$ref": "#/components/schemas/PermanentDipoleMagnet"
        },
        {
         "$ref": "#/components/schemas/PhotovoltaicPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/PidAlgorithm"
        },
        {
         "$ref": "#/components/schemas/PositionSensor"
        },
        {
         "$ref": "#/components/schemas/PowerLoad"
        },
        {
         "$ref": "#/components/schemas/PowerProcessor"
        },
        {
         "$ref": "#/components/schemas/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/components/schemas/QuasiRegDetPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/ReactionWheel"
        },
        {
         "$ref": "#/components/schemas/ReceiveInterface"
        },
        {
         "$ref": "#/components/schemas/RectangularFieldOfView"
        },
        {
         "$ref": "#/components/schemas/RelativeSchedule"
        },
        {
         "$ref": "#/components/schemas/ResistanceLoad"
        },
        {
         "$ref": "#/components/schemas/Routine"
        },
        {
         "$ref": "#/components/schemas/SameTargetMultiCondition"
        },
        {
         "$ref": "#/components/schemas/SatelliteToSatelliteCondition"
        },
        {
         "$ref": "#/components/schemas/SatelliteToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/SatelliteToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/Sensor"
        },
        {
         "$ref": "#/components/schemas/SensorFailureMode"
        },
        {
         "$ref": "#/components/schemas/SingleConvHybridPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/SingleConvMpptPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/SlidingModeAlgorithm"
        },
        {
         "$ref": "#/components/schemas/SolarArray"
        },
        {
         "$ref": "#/components/schemas/SolarCell"
        },
        {
         "$ref": "#/components/schemas/SolarPanel"
        },
        {
         "$ref": "#/components/schemas/SpaceTarget"
        },
        {
         "$ref": "#/components/schemas/SphericalFuelTank"
        },
        {
         "$ref": "#/components/schemas/SpherocylinderFuelTank"
        },
        {
         "$ref": "#/components/schemas/SpkEphemeris"
        },
        {
         "$ref": "#/components/schemas/StateTransition"
        },
        {
         "$ref": "#/components/schemas/StaticAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/StaticThrustControlAlgorithm"
        },
        {
         "$ref": "#/components/schemas/StkEphemeris"
        },
        {
         "$ref": "#/components/schemas/Subsystem"
        },
        {
         "$ref": "#/components/schemas/SunTrackingSurface"
        },
        {
         "$ref": "#/components/schemas/SurfaceMaterial"
        },
        {
         "$ref": "#/components/schemas/TargetAttitudeSensor"
        },
        {
         "$ref": "#/components/schemas/TargetGroup"
        },
        {
         "$ref": "#/components/schemas/TargetGroupInFovCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToSatelliteCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupVector"
        },
        {
         "$ref": "#/components/schemas/TargetInFovCondition"
        },
        {
         "$ref": "#/components/schemas/TargetPositionSensor"
        },
        {
         "$ref": "#/components/schemas/TargetRangeRateSensor"
        },
        {
         "$ref": "#/components/schemas/TargetRangeSensor"
        },
        {
         "$ref": "#/components/schemas/TargetToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/TargetToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/TargetVector"
        },
        {
         "$ref": "#/components/schemas/TempControllerState"
        },
        {
         "$ref": "#/components/schemas/ThermalDesignLayout"
        },
        {
         "$ref": "#/components/schemas/ThermalInterface"
        },
        {
         "$ref": "#/components/schemas/ThermalInterfaceMaterial"
        },
        {
         "$ref": "#/components/schemas/Thruster"
        },
        {
         "$ref": "#/components/schemas/TimeCondition"
        },
        {
         "$ref": "#/components/schemas/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/TriadAlgorithm"
        },
        {
         "$ref": "#/components/schemas/TriadAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/TwoConvMpptPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveMagnetorquerFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveReactionWheelFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveSensorFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveThrusterFailureMode"
        },
        {
         "$ref": "#/components/schemas/VectorInFovCondition"
        },
        {
         "$ref": "#/components/schemas/VectorSensor"
        },
        {
         "$ref": "#/components/schemas/VectorTrackingSurface"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Self ID",
      "type": "string",
      "description": "**This field is for internal use only**"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "mass": {
      "title": "Dry Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "inertia": {
      "title": "Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      }
     },
     "dynamicMass": {
      "title": "Dynamic Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "dynamicInertia": {
      "title": "Dynamic Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "torque": {
      "title": "Total Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH",
       "Power",
       "Thermal"
      ]
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpacecraftTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 0.1
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       },
       "power": {
        "max": 10.0,
        "min": 1e-06
       },
       "thermal": {
        "max": 30.0,
        "min": 1.0
       }
      }
     },
     "missionOrbit": {
      "title": "ID of Associated Orbit Block",
      "type": "string",
      "description": "Relationship to zero or one `Orbit` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "pointingModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active pointing mode."
     },
     "activePointingMode": {
      "title": "ID of Associated PointingMode Block",
      "type": "string",
      "description": "Relationship to zero or one `PointingMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PhotovoltaicPowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PhotovoltaicPowerProcessor` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dynamicCenterOfMass": {
      "title": "Dynamic Center of Mass [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "srpTorque": {
      "title": "SRP Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "dragTorque": {
      "title": "Drag Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "gravityGradientTorque": {
      "title": "Gravity Gradient Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "positionSolution": {
      "title": "Active Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolutionError": {
      "title": "Active Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolution": {
      "title": "Active Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolutionError": {
      "title": "Active Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionError": {
      "title": "Attitude Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionErrorAngle": {
      "title": "Attitude Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolutionError": {
      "title": "Angular Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionError": {
      "title": "Definitive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionErrorAngle": {
      "title": "Definitive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolutionError": {
      "title": "Definitive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionError": {
      "title": "Predictive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionErrorAngle": {
      "title": "Predictive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolutionError": {
      "title": "Predictive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimatedMagneticFieldVector": {
      "title": "Estimated Local Magnetic Field [T]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Velocity [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "lvlhAxes": {
      "title": "LVLH Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "enuAxes": {
      "title": "ENU Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "beta": {
      "title": "Beta Angle",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "activeCommInterfaces": {
      "title": "Active Data Handling Interfaces",
      "type": "array",
      "items": {
       "type": "array",
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "integer"
         }
        ]
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>List of currently active interfaces on this Agent. Each entry contains a tuple of `transmitStatus`, `agentId`, `bitRate`, and `canLink`.",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "Spacecraft"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "A Spacecraft Metamodel"
   },
   "SpacecraftModelRes": {
    "title": "SpacecraftModelRes",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor",
     "mass",
     "inertia"
    ],
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/definitions/ActivePointingMode"
        },
        {
         "$ref": "#/definitions/AngularVelocitySensor"
        },
        {
         "$ref": "#/definitions/Antenna"
        },
        {
         "$ref": "#/definitions/AreaTarget"
        },
        {
         "$ref": "#/definitions/AveragingAlgorithm"
        },
        {
         "$ref": "#/definitions/Battery"
        },
        {
         "$ref": "#/definitions/BatteryCell"
        },
        {
         "$ref": "#/definitions/BatteryPack"
        },
        {
         "$ref": "#/definitions/BodyFrameVector"
        },
        {
         "$ref": "#/definitions/BodyInFovCondition"
        },
        {
         "$ref": "#/definitions/BusRegulator"
        },
        {
         "$ref": "#/definitions/CelestialTarget"
        },
        {
         "$ref": "#/definitions/CelestialVector"
        },
        {
         "$ref": "#/definitions/CircularFieldOfView"
        },
        {
         "$ref": "#/definitions/CloudFractionGroup"
        },
        {
         "$ref": "#/definitions/CloudFractionGroupToScalarCondition"
        },
        {
         "$ref": "#/definitions/CombinationalLogic"
        },
        {
         "$ref": "#/definitions/Component"
        },
        {
         "$ref": "#/definitions/ComponentToScalarCondition"
        },
        {
         "$ref": "#/definitions/CompoundCondition"
        },
        {
         "$ref": "#/definitions/Cooler"
        },
        {
         "$ref": "#/definitions/CooperativeTransmitInterface"
        },
        {
         "$ref": "#/definitions/DataBus"
        },
        {
         "$ref": "#/definitions/DataInterface"
        },
        {
         "$ref": "#/definitions/DataMode"
        },
        {
         "$ref": "#/definitions/DataStorage"
        },
        {
         "$ref": "#/definitions/DataType"
        },
        {
         "$ref": "#/definitions/DirectMeasurementAttitudeInitializer"
        },
        {
         "$ref": "#/definitions/DirectionSensor"
        },
        {
         "$ref": "#/definitions/DynamicallyLoadedComponent"
        },
        {
         "$ref": "#/definitions/EkfAlgorithm"
        },
        {
         "$ref": "#/definitions/ElapsedTimeCondition"
        },
        {
         "$ref": "#/definitions/FieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/FiniteDifferenceOrbitInitializer"
        },
        {
         "$ref": "#/definitions/FiniteStateMachine"
        },
        {
         "$ref": "#/definitions/FixedSchedule"
        },
        {
         "$ref": "#/definitions/FixedSurface"
        },
        {
         "$ref": "#/definitions/FuelReservoir"
        },
        {
         "$ref": "#/definitions/FullyRegDetPowerProcessor"
        },
        {
         "$ref": "#/definitions/GenericAdAlgorithm"
        },
        {
         "$ref": "#/definitions/GenericOdAlgorithm"
        },
        {
         "$ref": "#/definitions/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/definitions/GpsAlgorithm"
        },
        {
         "$ref": "#/definitions/GroundTarget"
        },
        {
         "$ref": "#/definitions/Heater"
        },
        {
         "$ref": "#/definitions/IdealOrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/definitions/InternalDataInterface"
        },
        {
         "$ref": "#/definitions/LaserCommModule"
        },
        {
         "$ref": "#/definitions/LoadState"
        },
        {
         "$ref": "#/definitions/LocalVector"
        },
        {
         "$ref": "#/definitions/LockSpinPointingMode"
        },
        {
         "$ref": "#/definitions/LogicalConfiguration"
        },
        {
         "$ref": "#/definitions/MagneticDetumblingAlgorithm"
        },
        {
         "$ref": "#/definitions/MagneticHysteresisRod"
        },
        {
         "$ref": "#/definitions/Magnetorquer"
        },
        {
         "$ref": "#/definitions/MaxAlignPointingMode"
        },
        {
         "$ref": "#/definitions/MekfAlgorithm"
        },
        {
         "$ref": "#/definitions/Modem"
        },
        {
         "$ref": "#/definitions/OpticalAttitudeSensor"
        },
        {
         "$ref": "#/definitions/OrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/definitions/PassivePointingMode"
        },
        {
         "$ref": "#/definitions/PassiveTransmitInterface"
        },
        {
         "$ref": "#/definitions/PermanentDipoleMagnet"
        },
        {
         "$ref": "#/definitions/PhotovoltaicPowerProcessor"
        },
        {
         "$ref": "#/definitions/PidAlgorithm"
        },
        {
         "$ref": "#/definitions/PositionSensor"
        },
        {
         "$ref": "#/definitions/PowerLoad"
        },
        {
         "$ref": "#/definitions/PowerProcessor"
        },
        {
         "$ref": "#/definitions/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/definitions/QuasiRegDetPowerProcessor"
        },
        {
         "$ref": "#/definitions/ReactionWheel"
        },
        {
         "$ref": "#/definitions/ReceiveInterface"
        },
        {
         "$ref": "#/definitions/RectangularFieldOfView"
        },
        {
         "$ref": "#/definitions/RelativeSchedule"
        },
        {
         "$ref": "#/definitions/ResistanceLoad"
        },
        {
         "$ref": "#/definitions/Routine"
        },
        {
         "$ref": "#/definitions/SameTargetMultiCondition"
        },
        {
         "$ref": "#/definitions/SatelliteToSatelliteCondition"
        },
        {
         "$ref": "#/definitions/SatelliteToScalarCondition"
        },
        {
         "$ref": "#/definitions/SatelliteToTargetCondition"
        },
        {
         "$ref": "#/definitions/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/Sensor"
        },
        {
         "$ref": "#/definitions/SensorFailureMode"
        },
        {
         "$ref": "#/definitions/SingleConvHybridPowerProcessor"
        },
        {
         "$ref": "#/definitions/SingleConvMpptPowerProcessor"
        },
        {
         "$ref": "#/definitions/SlidingModeAlgorithm"
        },
        {
         "$ref": "#/definitions/SolarArray"
        },
        {
         "$ref": "#/definitions/SolarCell"
        },
        {
         "$ref": "#/definitions/SolarPanel"
        },
        {
         "$ref": "#/definitions/SpaceTarget"
        },
        {
         "$ref": "#/definitions/SphericalFuelTank"
        },
        {
         "$ref": "#/definitions/SpherocylinderFuelTank"
        },
        {
         "$ref": "#/definitions/SpkEphemeris"
        },
        {
         "$ref": "#/definitions/StateTransition"
        },
        {
         "$ref": "#/definitions/StaticAttitudeInitializer"
        },
        {
         "$ref": "#/definitions/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/StaticThrustControlAlgorithm"
        },
        {
         "$ref": "#/definitions/StkEphemeris"
        },
        {
         "$ref": "#/definitions/Subsystem"
        },
        {
         "$ref": "#/definitions/SunTrackingSurface"
        },
        {
         "$ref": "#/definitions/SurfaceMaterial"
        },
        {
         "$ref": "#/definitions/TargetAttitudeSensor"
        },
        {
         "$ref": "#/definitions/TargetGroup"
        },
        {
         "$ref": "#/definitions/TargetGroupInFovCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToSatelliteCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToScalarCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToTargetCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupVector"
        },
        {
         "$ref": "#/definitions/TargetInFovCondition"
        },
        {
         "$ref": "#/definitions/TargetPositionSensor"
        },
        {
         "$ref": "#/definitions/TargetRangeRateSensor"
        },
        {
         "$ref": "#/definitions/TargetRangeSensor"
        },
        {
         "$ref": "#/definitions/TargetToScalarCondition"
        },
        {
         "$ref": "#/definitions/TargetToTargetCondition"
        },
        {
         "$ref": "#/definitions/TargetVector"
        },
        {
         "$ref": "#/definitions/TempControllerState"
        },
        {
         "$ref": "#/definitions/ThermalDesignLayout"
        },
        {
         "$ref": "#/definitions/ThermalInterface"
        },
        {
         "$ref": "#/definitions/ThermalInterfaceMaterial"
        },
        {
         "$ref": "#/definitions/Thruster"
        },
        {
         "$ref": "#/definitions/TimeCondition"
        },
        {
         "$ref": "#/definitions/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/TriadAlgorithm"
        },
        {
         "$ref": "#/definitions/TriadAttitudeInitializer"
        },
        {
         "$ref": "#/definitions/TwoConvMpptPowerProcessor"
        },
        {
         "$ref": "#/definitions/UnresponsiveMagnetorquerFailureMode"
        },
        {
         "$ref": "#/definitions/UnresponsiveReactionWheelFailureMode"
        },
        {
         "$ref": "#/definitions/UnresponsiveSensorFailureMode"
        },
        {
         "$ref": "#/definitions/UnresponsiveThrusterFailureMode"
        },
        {
         "$ref": "#/definitions/VectorInFovCondition"
        },
        {
         "$ref": "#/definitions/VectorSensor"
        },
        {
         "$ref": "#/definitions/VectorTrackingSurface"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Self ID",
      "type": "string",
      "description": "**This field is for internal use only**"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "mass": {
      "title": "Dry Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "inertia": {
      "title": "Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      }
     },
     "dynamicMass": {
      "title": "Dynamic Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "dynamicInertia": {
      "title": "Dynamic Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "torque": {
      "title": "Total Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH",
       "Power",
       "Thermal"
      ]
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpacecraftTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 0.1
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       },
       "power": {
        "max": 10.0,
        "min": 1e-06
       },
       "thermal": {
        "max": 30.0,
        "min": 1.0
       }
      }
     },
     "missionOrbit": {
      "title": "ID of Associated Orbit Block",
      "type": "string",
      "description": "Relationship to zero or one `Orbit` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "pointingModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active pointing mode."
     },
     "activePointingMode": {
      "title": "ID of Associated PointingMode Block",
      "type": "string",
      "description": "Relationship to zero or one `PointingMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PhotovoltaicPowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PhotovoltaicPowerProcessor` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dynamicCenterOfMass": {
      "title": "Dynamic Center of Mass [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "srpTorque": {
      "title": "SRP Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "dragTorque": {
      "title": "Drag Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "gravityGradientTorque": {
      "title": "Gravity Gradient Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "positionSolution": {
      "title": "Active Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolutionError": {
      "title": "Active Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolution": {
      "title": "Active Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolutionError": {
      "title": "Active Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionError": {
      "title": "Attitude Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionErrorAngle": {
      "title": "Attitude Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolutionError": {
      "title": "Angular Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionError": {
      "title": "Definitive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionErrorAngle": {
      "title": "Definitive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolutionError": {
      "title": "Definitive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionError": {
      "title": "Predictive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionErrorAngle": {
      "title": "Predictive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolutionError": {
      "title": "Predictive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimatedMagneticFieldVector": {
      "title": "Estimated Local Magnetic Field [T]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Velocity [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "lvlhAxes": {
      "title": "LVLH Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "enuAxes": {
      "title": "ENU Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "beta": {
      "title": "Beta Angle",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "activeCommInterfaces": {
      "title": "Active Data Handling Interfaces",
      "type": "array",
      "items": {
       "type": "array",
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "integer"
         }
        ]
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>List of currently active interfaces on this Agent. Each entry contains a tuple of `transmitStatus`, `agentId`, `bitRate`, and `canLink`.",
      "default": []
     },
     "_blockNames": {
      "title": " Blocknames",
      "type": "array",
      "items": {},
      "description": "Names of all valid `Block`s for this `Metamodel` class"
     },
     "_relationships": {
      "title": " Relationships",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of relationship fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_quantityKinds": {
      "title": " Quantitykinds",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of `QuantityKind` fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_supers": {
      "title": " Supers",
      "type": "object",
      "description": "Object mapping `Block` class names to a list of names of their direct super classes."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SpacecraftModelRes"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Class for Spacecraft with meta attributes"
   },
   "SpacecraftModelRoot": {
    "title": "SpacecraftModelRoot",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor",
     "mass",
     "inertia"
    ],
    "type": "object",
    "properties": {
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Self ID",
      "type": "string",
      "description": "**This field is for internal use only**"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "mass": {
      "title": "Dry Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "inertia": {
      "title": "Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      }
     },
     "dynamicMass": {
      "title": "Dynamic Mass [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "dynamicInertia": {
      "title": "Dynamic Inertia Matrix [Matrix3[kg-m^2]]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "torque": {
      "title": "Total Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH",
       "Power",
       "Thermal"
      ]
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpacecraftTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 0.1
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       },
       "power": {
        "max": 10.0,
        "min": 1e-06
       },
       "thermal": {
        "max": 30.0,
        "min": 1.0
       }
      }
     },
     "missionOrbit": {
      "title": "ID of Associated Orbit Block",
      "type": "string",
      "description": "Relationship to zero or one `Orbit` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "pointingModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active pointing mode."
     },
     "activePointingMode": {
      "title": "ID of Associated PointingMode Block",
      "type": "string",
      "description": "Relationship to zero or one `PointingMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PhotovoltaicPowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PhotovoltaicPowerProcessor` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dynamicCenterOfMass": {
      "title": "Dynamic Center of Mass [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "srpTorque": {
      "title": "SRP Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "dragTorque": {
      "title": "Drag Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "gravityGradientTorque": {
      "title": "Gravity Gradient Torque [N\u2022m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "positionSolution": {
      "title": "Active Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "positionSolutionError": {
      "title": "Active Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolution": {
      "title": "Active Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "velocitySolutionError": {
      "title": "Active Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolution": {
      "title": "Definitive Position Solution [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictivePositionSolutionError": {
      "title": "Definitive Position Solution Error [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolution": {
      "title": "Definitive Velocity Solution [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveVelocitySolutionError": {
      "title": "Definitive Velocity Solution Error [km/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionError": {
      "title": "Attitude Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "attitudeSolutionErrorAngle": {
      "title": "Attitude Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "angularVelocitySolutionError": {
      "title": "Angular Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionError": {
      "title": "Definitive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolutionErrorAngle": {
      "title": "Definitive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAngularVelocitySolutionError": {
      "title": "Definitive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionError": {
      "title": "Predictive Error YPR [rad]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolutionErrorAngle": {
      "title": "Predictive Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAngularVelocitySolutionError": {
      "title": "Predictive Velocity Error [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimatedMagneticFieldVector": {
      "title": "Estimated Local Magnetic Field [T]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "commandedAttitude": {
      "title": "Commanded Attitude Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "commandedAngularRates": {
      "title": "Commanded Angular Velocity [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "pointingErrorAngle": {
      "title": "Pointing Error Angle",
      "allOf": [
       {
        "$ref": "#/components/schemas/Angle"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "lvlhAxes": {
      "title": "LVLH Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "enuAxes": {
      "title": "ENU Axes",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "beta": {
      "title": "Beta Angle",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "activeCommInterfaces": {
      "title": "Active Data Handling Interfaces",
      "type": "array",
      "items": {
       "type": "array",
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "integer"
         }
        ]
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>List of currently active interfaces on this Agent. Each entry contains a tuple of `transmitStatus`, `agentId`, `bitRate`, and `canLink`.",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "SpacecraftModelRoot"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Class for the updateable fields on Spacecraft (root)"
   },
   "SpacecraftModelUpdateInterface": {
    "title": "SpacecraftModelUpdateInterface",
    "required": [
     "root",
     "blocks",
     "delete"
    ],
    "type": "object",
    "properties": {
     "root": {
      "$ref": "#/components/schemas/SpacecraftModelRoot"
     },
     "blocks": {
      "title": "Blocks",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/MagneticHysteresisRod"
        },
        {
         "$ref": "#/components/schemas/ThermalInterface"
        },
        {
         "$ref": "#/components/schemas/FixedSurface"
        },
        {
         "$ref": "#/components/schemas/SunTrackingSurface"
        },
        {
         "$ref": "#/components/schemas/VectorTrackingSurface"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveReactionWheelFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveThrusterFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveMagnetorquerFailureMode"
        },
        {
         "$ref": "#/components/schemas/UnresponsiveSensorFailureMode"
        },
        {
         "$ref": "#/components/schemas/PassivePointingMode"
        },
        {
         "$ref": "#/components/schemas/ActivePointingMode"
        },
        {
         "$ref": "#/components/schemas/MaxAlignPointingMode"
        },
        {
         "$ref": "#/components/schemas/LockSpinPointingMode"
        },
        {
         "$ref": "#/components/schemas/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/TempControllerState"
        },
        {
         "$ref": "#/components/schemas/SphericalFuelTank"
        },
        {
         "$ref": "#/components/schemas/SpherocylinderFuelTank"
        },
        {
         "$ref": "#/components/schemas/ThermalInterfaceMaterial"
        },
        {
         "$ref": "#/components/schemas/SurfaceMaterial"
        },
        {
         "$ref": "#/components/schemas/ReactionWheel"
        },
        {
         "$ref": "#/components/schemas/SolarPanel"
        },
        {
         "$ref": "#/components/schemas/SolarCell"
        },
        {
         "$ref": "#/components/schemas/GenericAdAlgorithm"
        },
        {
         "$ref": "#/components/schemas/GenericOdAlgorithm"
        },
        {
         "$ref": "#/components/schemas/TriadAlgorithm"
        },
        {
         "$ref": "#/components/schemas/PidAlgorithm"
        },
        {
         "$ref": "#/components/schemas/SlidingModeAlgorithm"
        },
        {
         "$ref": "#/components/schemas/EkfAlgorithm"
        },
        {
         "$ref": "#/components/schemas/MekfAlgorithm"
        },
        {
         "$ref": "#/components/schemas/AveragingAlgorithm"
        },
        {
         "$ref": "#/components/schemas/MagneticDetumblingAlgorithm"
        },
        {
         "$ref": "#/components/schemas/StaticThrustControlAlgorithm"
        },
        {
         "$ref": "#/components/schemas/GpsAlgorithm"
        },
        {
         "$ref": "#/components/schemas/SatelliteToSatelliteCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToSatelliteCondition"
        },
        {
         "$ref": "#/components/schemas/SatelliteToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/CloudFractionGroupToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/SatelliteToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/VectorInFovCondition"
        },
        {
         "$ref": "#/components/schemas/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/components/schemas/CloudFractionGroup"
        },
        {
         "$ref": "#/components/schemas/Cooler"
        },
        {
         "$ref": "#/components/schemas/Heater"
        },
        {
         "$ref": "#/components/schemas/Thruster"
        },
        {
         "$ref": "#/components/schemas/Magnetorquer"
        },
        {
         "$ref": "#/components/schemas/StaticAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/TriadAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/DirectMeasurementAttitudeInitializer"
        },
        {
         "$ref": "#/components/schemas/FiniteDifferenceOrbitInitializer"
        },
        {
         "$ref": "#/components/schemas/FuelReservoir"
        },
        {
         "$ref": "#/components/schemas/OpticalAttitudeSensor"
        },
        {
         "$ref": "#/components/schemas/TargetAttitudeSensor"
        },
        {
         "$ref": "#/components/schemas/TargetRangeSensor"
        },
        {
         "$ref": "#/components/schemas/TargetRangeRateSensor"
        },
        {
         "$ref": "#/components/schemas/DirectionSensor"
        },
        {
         "$ref": "#/components/schemas/PositionSensor"
        },
        {
         "$ref": "#/components/schemas/TargetPositionSensor"
        },
        {
         "$ref": "#/components/schemas/VectorSensor"
        },
        {
         "$ref": "#/components/schemas/AngularVelocitySensor"
        },
        {
         "$ref": "#/components/schemas/PhotovoltaicPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/SingleConvHybridPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/QuasiRegDetPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/FullyRegDetPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/SingleConvMpptPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/TwoConvMpptPowerProcessor"
        },
        {
         "$ref": "#/components/schemas/LocalVector"
        },
        {
         "$ref": "#/components/schemas/CelestialVector"
        },
        {
         "$ref": "#/components/schemas/TargetGroupVector"
        },
        {
         "$ref": "#/components/schemas/TargetVector"
        },
        {
         "$ref": "#/components/schemas/OrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/IdealOrbitalAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/PropagatedOrbitKinematics"
        },
        {
         "$ref": "#/components/schemas/SpkEphemeris"
        },
        {
         "$ref": "#/components/schemas/StkEphemeris"
        },
        {
         "$ref": "#/components/schemas/PermanentDipoleMagnet"
        },
        {
         "$ref": "#/components/schemas/ThermalDesignLayout"
        },
        {
         "$ref": "#/components/schemas/SolarArray"
        }
       ]
      }
     },
     "delete": {
      "title": "Delete",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "SpacecraftTimeStepConstraints": {
    "title": "SpacecraftTimeStepConstraints",
    "type": "object",
    "properties": {
     "gnc": {
      "title": "GNC Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 0.1,
       "max": 10
      }
     },
     "cdh": {
      "title": "CDH Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 0.1,
       "max": 10
      }
     },
     "power": {
      "title": "Power Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 1e-06,
       "max": 10
      }
     },
     "thermal": {
      "title": "Thermal Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 1,
       "max": 30
      }
     }
    },
    "additionalProperties": false,
    "description": "Set the minimum and maximum time steps for each simulation module."
   },
   "Speed": {
    "title": "Speed",
    "type": "object",
    "properties": {
     "cm/s": {
      "title": "Cm/S",
      "type": "number"
     },
     "m/s": {
      "title": "M/S",
      "type": "number"
     },
     "mm/s": {
      "title": "Mm/S",
      "type": "number"
     },
     "km/s": {
      "title": "Km/S",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SpeedOrbit129": {
    "title": "SpeedOrbit129",
    "type": "object",
    "properties": {
     "cm/s": {
      "title": "Cm/S",
      "type": "number"
     },
     "m/s": {
      "title": "M/S",
      "type": "number"
     },
     "mm/s": {
      "title": "Mm/S",
      "type": "number"
     },
     "km/s": {
      "title": "Km/S",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SpeedSensors156": {
    "title": "SpeedSensors156",
    "type": "object",
    "properties": {
     "cm/s": {
      "title": "Cm/S",
      "type": "number"
     },
     "m/s": {
      "title": "M/S",
      "type": "number"
     },
     "mm/s": {
      "title": "Mm/S",
      "type": "number"
     },
     "km/s": {
      "title": "Km/S",
      "minimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SphericalFuelTank": {
    "title": "SphericalFuelTank",
    "required": [
     "name",
     "capacity",
     "priority",
     "location",
     "wetMass",
     "diameter"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "capacity": {
      "title": "Tank Capacity [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "priority": {
      "title": "Tank Priority",
      "type": "integer",
      "description": "Fuel is drawn from higher priority (greater value) tanks first. Tanks with identical priorities are drained in parallel."
     },
     "location": {
      "title": "Tank Location [Vector3[m]]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "Tank location relative to the origin of the spacecraft body frame."
     },
     "reservoir": {
      "title": "ID of Associated FuelReservoir Block",
      "type": "string",
      "description": "Relationship to a single `FuelReservoir` block. Inverse key: `FuelReservoir.fuelTanks`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "wetMass": {
      "title": "Current Fuel Mass [kg]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "flowRate": {
      "title": "Current Flow Rate [kg/s]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "inertia": {
      "title": "Current Inertia Matrix [kg\u2022m^2]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Inertia matrix assuming homogeneous distribution of current fuel."
     },
     "diameter": {
      "title": "Tank Diameter [m]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "type": {
      "title": "Type",
      "enum": [
       "SphericalFuelTank"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SphericalFuelTank Block"
   },
   "SpherocylinderFuelTank": {
    "title": "SpherocylinderFuelTank",
    "required": [
     "name",
     "capacity",
     "priority",
     "location",
     "wetMass",
     "capDiameter",
     "cylinderLength"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "capacity": {
      "title": "Tank Capacity [kg]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "priority": {
      "title": "Tank Priority",
      "type": "integer",
      "description": "Fuel is drawn from higher priority (greater value) tanks first. Tanks with identical priorities are drained in parallel."
     },
     "location": {
      "title": "Tank Location [Vector3[m]]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "Tank location relative to the origin of the spacecraft body frame."
     },
     "reservoir": {
      "title": "ID of Associated FuelReservoir Block",
      "type": "string",
      "description": "Relationship to a single `FuelReservoir` block. Inverse key: `FuelReservoir.fuelTanks`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "wetMass": {
      "title": "Current Fuel Mass [kg]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "flowRate": {
      "title": "Current Flow Rate [kg/s]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "inertia": {
      "title": "Current Inertia Matrix [kg\u2022m^2]",
      "type": "array",
      "items": {
       "maxItems": 3,
       "minItems": 3,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Inertia matrix assuming homogeneous distribution of current fuel."
     },
     "capDiameter": {
      "title": "Tank Diameter [m]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "cylinderLength": {
      "title": "Tank Length [m]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "orientationVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nThis vector defines the longitudinal axis of the cylindrical portion of the tank relative to the spacecraft body frame. It is used in conjunction with `location` to fully locate and orient the tank."
     },
     "type": {
      "title": "Type",
      "enum": [
       "SpherocylinderFuelTank"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SpherocylinderFuelTank Block"
   },
   "SpkEphemeris": {
    "title": "SpkEphemeris",
    "required": [
     "objectCode"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "period": {
      "title": "Orbital Period [Days]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "semiLatusRectum": {
      "title": "Semi-Latus Rectum [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "radiusPerigee": {
      "title": "Radius of Perigee [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "In Shadow Status",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True indicates that the vehicle is currently in shadow.",
      "default": false
     },
     "beta": {
      "title": "Beta Angle",
      "maximum": 1.5707963267948966,
      "minimum": -1.5707963267948966,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magneticFieldVector": {
      "title": "Magnetic Field Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "atmosphericDensity": {
      "title": "Atmospheric Density [kg/m\u00b3]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set dynamically given Agent `position`.",
      "default": 0.0
     },
     "lst": {
      "title": "Local Sidereal Time [rad]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "fileName": {
      "title": "Ephemeris Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "signedUrl": {
      "title": "Ephemeris URL",
      "maxLength": 1024,
      "type": "string",
      "default": ""
     },
     "objectCode": {
      "title": "The integer ID code of an object for which ephemeris data are expected to exist in the specified SPK file.",
      "type": "integer"
     },
     "type": {
      "title": "Type",
      "enum": [
       "SpkEphemeris"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Ephemeris format used by SPICE, a free informaiton system created and maintained by NASA's Navigation and Ancillary\nInformation Facility (NAIF). SPICE ephemerides take the format of binary SPK kernels with the file extension .bsp.\nMore informaiton can be found here:\nhttps://naif.jpl.nasa.gov/naif/spiceconcept.html"
   },
   "SpontaneousExternalState": {
    "title": "SpontaneousExternalState",
    "required": [
     "engineIndex"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "consumed": {
      "title": "Consumed State Variable Query",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "object"
        }
       ]
      },
      "default": []
     },
     "produced": {
      "title": "Produced State Variable Query",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "object"
        }
       ]
      },
      "default": []
     },
     "engineIndex": {
      "title": "Engine Index",
      "type": "integer",
      "description": "The index of the Engine to interface to.  This defines the `timeStep` at which these values are propagated. `0`: GNC, `1`: C&DH, `2`: Power, `3`: Thermal"
     },
     "agents": {
      "title": "IDs of Associated Agent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Agent` blocks. Inverse key: `Agent.externalState`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fill": {
      "title": "Gap Fill Type",
      "allOf": [
       {
        "$ref": "#/components/schemas/Fills"
       }
      ],
      "description": "How the simulator fills the gaps in the relevant data during the simulation.  Options: `CONSTANT`: The previous value is held constant.  `PROPAGATED`: Sedaro propagators resume control over the relevant state until the next external cosimulator interaction.",
      "default": "CONSTANT"
     },
     "type": {
      "title": "Type",
      "enum": [
       "SpontaneousExternalState"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SpontaneousExternalState Block"
   },
   "SquareRoot": {
    "title": "SquareRoot",
    "required": [
     "fn"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "sqrt"
      ],
      "type": "string"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "StateVector": {
    "title": "StateVector",
    "required": [
     "stateEci"
    ],
    "type": "object",
    "properties": {
     "stateEci": {
      "title": "ECI State Vector [km, km, km, km/s, km/s, km/s]",
      "type": "array",
      "items": {
       "type": "number"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "StaticAttitudeInitializer": {
    "title": "StaticAttitudeInitializer",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "initialAttitude": {
      "title": "Initial Attitude Quaternion Estimate",
      "type": "array",
      "items": {
       "type": "number"
      },
      "default": [
       0.0,
       0.0,
       0.0,
       1.0
      ]
     },
     "attitudeErrorSigma": {
      "title": "Attitude Estimate Error",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleAttitude29"
       }
      ],
      "default": {
       "deg": 45
      }
     },
     "initialAngularVelocity": {
      "title": "Initial Angular Velocity Estimate",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "angularVelocityErrorSigma": {
      "title": "Angular Velocity Estimate Error",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateAttitude31"
       }
      ],
      "default": {
       "deg/s": 10
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "StaticAttitudeInitializer"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A simple attitude initialization algorithm that assumes a constant initial attitude, angular velocity, and uncertainty.\n    "
   },
   "StaticFieldOfViewArticulationMode": {
    "title": "StaticFieldOfViewArticulationMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to a single `FieldOfView` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "commandedArticulations": {
      "title": "Commanded Articulations",
      "type": "array",
      "items": {},
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "articulationAngles": {
      "title": "IDs of Associated BodyFrameVector Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `BodyFrameVector` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "StaticFieldOfViewArticulationMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A StaticFieldOfViewArticulationMode Block"
   },
   "StaticThrustControlAlgorithm": {
    "title": "StaticThrustControlAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "thrusters": {
      "title": "IDs of Associated Thruster Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `Thruster` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "StaticThrustControlAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A StaticThrustControlAlgorithm Block"
   },
   "StkEphemeris": {
    "title": "StkEphemeris",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "orbitalElements": {
      "title": "Orbital Elements",
      "allOf": [
       {
        "$ref": "#/components/schemas/OrbitalElementsData"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "period": {
      "title": "Orbital Period [Days]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "semiLatusRectum": {
      "title": "Semi-Latus Rectum [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "radiusPerigee": {
      "title": "Radius of Perigee [km]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "shadow": {
      "title": "In Shadow Status",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True indicates that the vehicle is currently in shadow.",
      "default": false
     },
     "beta": {
      "title": "Beta Angle",
      "maximum": 1.5707963267948966,
      "minimum": -1.5707963267948966,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "magneticFieldVector": {
      "title": "Magnetic Field Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "atmosphericDensity": {
      "title": "Atmospheric Density [kg/m\u00b3]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set dynamically given Agent `position`.",
      "default": 0.0
     },
     "lst": {
      "title": "Local Sidereal Time [rad]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "fileName": {
      "title": "Ephemeris Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "signedUrl": {
      "title": "Ephemeris URL",
      "maxLength": 1024,
      "type": "string",
      "default": ""
     },
     "type": {
      "title": "Type",
      "enum": [
       "StkEphemeris"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "STK ephemerides are stored in ASCII text files with extension .e. More information can be found here:\nhttps://help.agi.com/stk/11.0.1/Content/stk/importfiles-02.htm"
   },
   "StudyJob": {
    "title": "StudyJob",
    "required": [
     "id",
     "status",
     "scenarioHash"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "ID",
      "type": "string"
     },
     "status": {
      "title": "Simulation Status",
      "allOf": [
       {
        "$ref": "#/components/schemas/services__model__spec_models__StudyJob__Statuses"
       }
      ],
      "description": "This value is used to determine the current state of the simulation, including its status upon exit."
     },
     "scenarioHash": {
      "title": "Study Scenario Identifier",
      "type": "string"
     }
    }
   },
   "Substraction": {
    "title": "Substraction",
    "required": [
     "fn",
     "arg"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "-"
      ],
      "type": "string"
     },
     "arg": {
      "title": "Arg",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SunSynchronousCircularOrbit": {
    "title": "SunSynchronousCircularOrbit",
    "required": [
     "initialRefOrbit",
     "mltAscNode",
     "nu",
     "alt"
    ],
    "type": "object",
    "properties": {
     "initialRefOrbit": {
      "title": "Initialreforbit",
      "enum": [
       "SUN_SYNC_CIRC"
      ],
      "type": "string"
     },
     "mltAscNode": {
      "title": "Mean Local Time of the Ascending Node [day]",
      "type": "number"
     },
     "nu": {
      "title": "Nu [deg]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number"
     },
     "alt": {
      "title": "Altitude [km]",
      "minimum": 100.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "SunTrackingSurface": {
    "title": "SunTrackingSurface",
    "required": [
     "name",
     "area",
     "surfaceCentroid"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "area": {
      "title": "Area [m^2]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "surfaceCentroid": {
      "title": "Centroid [m]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "surfaceMaterial": {
      "title": "ID of Associated SurfaceMaterial Block",
      "type": "string",
      "description": "Relationship to a single `SurfaceMaterial` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "geocenterAngle": {
      "title": "Geocenter Angle [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoViewFactor": {
      "title": "Earth Albedo View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthIrViewFactor": {
      "title": "Earth IR View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarViewFactor": {
      "title": "Solar View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "surfaceNormalVector": {
      "title": "Surface Normal Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "sat2Sun": {
      "title": "Sat to Sun Relative Vector [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "earthIrHeatFlowRate": {
      "title": "Earth Infrared Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoHeatFlowRate": {
      "title": "Earth Albedo Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarHeatFlowRate": {
      "title": "Solar Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "spaceHeatFlowRate": {
      "title": "Space Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "heatFlowRate": {
      "title": "Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "antiTrack": {
      "title": "Set this option true if you want the surface to minimize alignment with the tracked vector. For example, the back side of a sun tracking solar panel.",
      "type": "boolean",
      "default": false
     },
     "refVector1": {
      "title": "Surface Plane Vector 1",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "refVector2": {
      "title": "Surface Plane Vector 2",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "vectorProjection": {
      "title": "Surface Plane Vector Projection",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "articulationAngle": {
      "title": "Articulation Angle [rad]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "type": {
      "title": "Type",
      "enum": [
       "SunTrackingSurface"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SunTrackingSurface Block"
   },
   "SurfaceMaterial": {
    "title": "SurfaceMaterial",
    "required": [
     "partNumber",
     "irEmissivity",
     "solarAbsorptivity",
     "diffuseSolarReflectivity",
     "specularSolarReflectivity"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "irEmissivity": {
      "title": "IR Emissivity [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "solarAbsorptivity": {
      "title": "Solar Absorptance [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "diffuseSolarReflectivity": {
      "title": "Diffuse Solar Reflectance [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "specularSolarReflectivity": {
      "title": "Specular Solar Reflectance [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number"
     },
     "hotTempRating": {
      "title": "Maximum Rated Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Rated Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "SurfaceMaterial"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A SurfaceMaterial Block"
   },
   "TUnit": {
    "title": "TUnit",
    "enum": [
     "a",
     "c",
     "days",
     "deg",
     "km",
     "ms",
     "pct",
     "w",
     "wday",
     "whr"
    ],
    "description": "An enumeration."
   },
   "TableSpec": {
    "title": "TableSpec",
    "required": [
     "type",
     "variables"
    ],
    "type": "object",
    "properties": {
     "type": {
      "title": "Type",
      "enum": [
       "table"
      ],
      "type": "string"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/TableVariable"
      }
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "TableVariable": {
    "title": "TableVariable",
    "required": [
     "legend"
    ],
    "type": "object",
    "properties": {
     "each": {
      "title": "Each",
      "type": "string"
     },
     "keys": {
      "title": "Keys",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "legend": {
      "title": "Legend",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "variables": {
      "title": "Variables",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/TableVariable"
      }
     },
     "unit": {
      "title": "Unit",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "$ref": "#/components/schemas/TUnit"
       }
      ]
     },
     "ops": {
      "title": "Ops",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "TargetAttitudeSensor": {
    "title": "TargetAttitudeSensor",
    "required": [
     "name",
     "oneSigmaCrossAxisError",
     "oneSigmaBoresightAxisError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "target": {
      "title": "ID of Associated SpaceTarget Block",
      "type": "string",
      "description": "Relationship to a single `SpaceTarget` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "oneSigmaCrossAxisError": {
      "title": "Cross-Axis Angular Error [deg]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleSensors127"
       }
      ],
      "description": "Standard deviation of the angle between the true and measured attitude directions."
     },
     "oneSigmaBoresightAxisError": {
      "title": "Boresight Angular Error [deg]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngleSensors132"
       }
      ],
      "description": "Standard deviation of the rotational error about the boresight of the sensor."
     },
     "measurement": {
      "title": "Measured Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetAttitudeSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetAttitudeSensor Block"
   },
   "TargetGroupToSatelliteCondition": {
    "title": "TargetGroupToSatelliteCondition",
    "required": [
     "name",
     "relationship",
     "tgParam"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "targetCompliance": {
      "title": "Target Compliance Status",
      "type": "object",
      "additionalProperties": {
       "type": "boolean"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>A dictionary keyed by `Target` ID where each value is the compliance of the condition for the respective `Target`."
     },
     "countRelationship": {
      "title": "Count Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "Set if `groupRoller` == `COUNT` to define the way to compare number of compliant targets to the `countValue`."
     },
     "countValue": {
      "title": "Count Value",
      "type": "integer",
      "description": "Set if `groupRoller` == `COUNT` as a number to which to compare the number of compliant targets."
     },
     "tgParam": {
      "title": "Parameter selection.",
      "allOf": [
       {
        "$ref": "#/components/schemas/TargetParameters"
       }
      ]
     },
     "groupRoller": {
      "title": "Group Roller Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/GroupRollers"
       }
      ],
      "description": "The method to use to combine the target values into a single compliance.",
      "default": "ANY"
     },
     "targetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "isFilter": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to zero or one `TargetGroup` blocks. Inverse key: `TargetGroup.filterConditions`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nThis relationship is set when the condition filters the related TargetGroup. Otherwise, set to None."
     },
     "selfParam": {
      "title": "Satellite Parameter Selection",
      "anyOf": [
       {
        "$ref": "#/components/schemas/SatelliteParameters"
       },
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetGroupToSatelliteCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetGroupToSatelliteCondition Block"
   },
   "TargetGroupToSelfCondition": {
    "title": "TargetGroupToSelfCondition",
    "required": [
     "name",
     "relationship",
     "tgParam",
     "selfParam"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "relationship": {
      "title": "Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "The relationship to use when comparing the assigned values."
     },
     "targetCompliance": {
      "title": "Target Compliance Status",
      "type": "object",
      "additionalProperties": {
       "type": "boolean"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>A dictionary keyed by `Target` ID where each value is the compliance of the condition for the respective `Target`."
     },
     "countRelationship": {
      "title": "Count Relationship",
      "allOf": [
       {
        "$ref": "#/components/schemas/ConditionRelationship"
       }
      ],
      "description": "Set if `groupRoller` == `COUNT` to define the way to compare number of compliant targets to the `countValue`."
     },
     "countValue": {
      "title": "Count Value",
      "type": "integer",
      "description": "Set if `groupRoller` == `COUNT` as a number to which to compare the number of compliant targets."
     },
     "tgParam": {
      "title": "Parameter selection.",
      "allOf": [
       {
        "$ref": "#/components/schemas/TargetParameters"
       }
      ]
     },
     "groupRoller": {
      "title": "Group Roller Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/GroupRollers"
       }
      ],
      "description": "The method to use to combine the target values into a single compliance.",
      "default": "ANY"
     },
     "targetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "isFilter": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to zero or one `TargetGroup` blocks. Inverse key: `TargetGroup.filterConditions`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nThis relationship is set when the condition filters the related TargetGroup. Otherwise, set to None."
     },
     "selfParam": {
      "title": "Self Parameter Selection",
      "allOf": [
       {
        "$ref": "#/components/schemas/AgentParameters"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetGroupToSelfCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetGroupToSelfCondition Block"
   },
   "TargetGroupVector": {
    "title": "TargetGroupVector",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "representation": {
      "title": "Use Estimate or Truth in Algoritms",
      "allOf": [
       {
        "$ref": "#/components/schemas/Representation"
       }
      ],
      "default": "TRUTH"
     },
     "truth": {
      "title": "Truth Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimate": {
      "title": "Estimated Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "eclipsed": {
      "title": "Eclipsed Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "targetGroup": {
      "title": "ID of Associated TargetGroup Block",
      "type": "string",
      "description": "Relationship to a single `TargetGroup` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetGroupVector"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetGroupVector Block"
   },
   "TargetParameters": {
    "title": "TargetParameters",
    "enum": [
     "SHADOW",
     "BETA",
     "MEAN_ANOM",
     "TRUE_ANOM",
     "LAT",
     "LON",
     "ALT",
     "LO_SIGHT",
     "RANGE",
     "SOLAR_AZ",
     "SOLAR_EL",
     "SELF_AZ",
     "SELF_EL",
     "LOCAL_SIDEREAL_TIME"
    ],
    "description": "An enumeration."
   },
   "TargetPositionSensor": {
    "title": "TargetPositionSensor",
    "required": [
     "name",
     "oneSigmaDistanceError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "target": {
      "title": "ID of Associated SpaceTarget Block",
      "type": "string",
      "description": "Relationship to a single `SpaceTarget` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "oneSigmaDistanceError": {
      "title": "Measurement Per-Axis Error [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/DistanceSensors115"
       }
      ],
      "description": "Standard deviation of the error added to all elements of the measured position."
     },
     "measurement": {
      "title": "Measured Position Vector [km]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetPositionSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetPositionSensor Block"
   },
   "TargetRangeRateSensor": {
    "title": "TargetRangeRateSensor",
    "required": [
     "name",
     "oneSigmaVelocityError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "target": {
      "title": "ID of Associated SpaceTarget Block",
      "type": "string",
      "description": "Relationship to a single `SpaceTarget` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "oneSigmaVelocityError": {
      "title": "Measurement Error [km/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpeedSensors156"
       }
      ],
      "description": "Standard deviation of the error added to the measured range rate."
     },
     "measurement": {
      "title": "Measured Range Rate [km/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Speed"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetRangeRateSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetRangeRateSensor Block"
   },
   "TargetRangeSensor": {
    "title": "TargetRangeSensor",
    "required": [
     "name",
     "oneSigmaDistanceError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "target": {
      "title": "ID of Associated SpaceTarget Block",
      "type": "string",
      "description": "Relationship to a single `SpaceTarget` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "oneSigmaDistanceError": {
      "title": "Measurement Error [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/DistanceSensors144"
       }
      ],
      "description": "Standard deviation of the error added to the measured range."
     },
     "measurement": {
      "title": "Measured Range [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetRangeSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetRangeSensor Block"
   },
   "TargetVector": {
    "title": "TargetVector",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "representation": {
      "title": "Use Estimate or Truth in Algoritms",
      "allOf": [
       {
        "$ref": "#/components/schemas/Representation"
       }
      ],
      "default": "TRUTH"
     },
     "truth": {
      "title": "Truth Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "estimate": {
      "title": "Estimated Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "eclipsed": {
      "title": "Eclipsed Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "referenceTarget": {
      "title": "ID of Associated Target Block",
      "type": "string",
      "description": "Relationship to a single `Target` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TargetVector"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TargetVector Block"
   },
   "TempControllerState": {
    "title": "TempControllerState",
    "required": [
     "name",
     "constantTemperature"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "constantTemperature": {
      "title": "Temperature Set Point [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ]
     },
     "tempController": {
      "title": "ID of Associated TempController Block",
      "type": "string",
      "description": "Relationship to a single `TempController` block. Inverse key: `TempController.tempControllerStates`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TempControllerState"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TempControllerState Block"
   },
   "Temperature": {
    "title": "Temperature",
    "type": "object",
    "properties": {
     "degK": {
      "title": "Degk",
      "minimum": 0.0,
      "type": "number"
     },
     "degF": {
      "title": "Degf",
      "type": "number"
     },
     "degC": {
      "title": "Degc",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "TemplatedAgent": {
    "title": "TemplatedAgent",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Agent Name",
      "maxLength": 32,
      "type": "string",
      "description": "The unique name of this Agent."
     },
     "attitude": {
      "title": "Initial Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ]
     },
     "angularVelocity": {
      "title": "Initial Angular Velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ]
     },
     "externalState": {
      "title": "IDs of Associated ExternalState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ExternalState` blocks. Inverse key: `ExternalState.agents`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "targetMapping": {
      "title": "IDs of Associated Agent Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `Agent` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "targetGroupMapping": {
      "title": "IDs of Associated AgentGroup Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `AgentGroup` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "templateRef": {
      "title": "Agent Template Ref",
      "type": "string",
      "description": "The ID of the referenced Agent Template `Branch`."
     },
     "kinematics": {
      "title": "ID of Associated Kinematics Block",
      "type": "string",
      "description": "Relationship to a single `Kinematics` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TemplatedAgent"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TemplatedAgent Block"
   },
   "TerrestrialAttitudeDynamics": {
    "title": "TerrestrialAttitudeDynamics",
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "type": {
      "title": "Type",
      "enum": [
       "TerrestrialAttitudeDynamics"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TerrestrialAttitudeDynamics Block"
   },
   "TerrestrialVehicle": {
    "title": "TerrestrialVehicle",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor"
    ],
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/Antenna"
        },
        {
         "$ref": "#/components/schemas/AreaTarget"
        },
        {
         "$ref": "#/components/schemas/Battery"
        },
        {
         "$ref": "#/components/schemas/BatteryCell"
        },
        {
         "$ref": "#/components/schemas/BatteryPack"
        },
        {
         "$ref": "#/components/schemas/BodyFrameVector"
        },
        {
         "$ref": "#/components/schemas/BodyInFovCondition"
        },
        {
         "$ref": "#/components/schemas/BusRegulator"
        },
        {
         "$ref": "#/components/schemas/CelestialTarget"
        },
        {
         "$ref": "#/components/schemas/CelestialVector"
        },
        {
         "$ref": "#/components/schemas/CircularFieldOfView"
        },
        {
         "$ref": "#/components/schemas/CombinationalLogic"
        },
        {
         "$ref": "#/components/schemas/Component"
        },
        {
         "$ref": "#/components/schemas/ComponentToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/CompoundCondition"
        },
        {
         "$ref": "#/components/schemas/CooperativeTransmitInterface"
        },
        {
         "$ref": "#/components/schemas/DataBus"
        },
        {
         "$ref": "#/components/schemas/DataInterface"
        },
        {
         "$ref": "#/components/schemas/DataMode"
        },
        {
         "$ref": "#/components/schemas/DataStorage"
        },
        {
         "$ref": "#/components/schemas/DataType"
        },
        {
         "$ref": "#/components/schemas/DynamicallyLoadedComponent"
        },
        {
         "$ref": "#/components/schemas/ElapsedTimeCondition"
        },
        {
         "$ref": "#/components/schemas/FieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/FiniteStateMachine"
        },
        {
         "$ref": "#/components/schemas/FixedSchedule"
        },
        {
         "$ref": "#/components/schemas/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/components/schemas/GroundTarget"
        },
        {
         "$ref": "#/components/schemas/InternalDataInterface"
        },
        {
         "$ref": "#/components/schemas/LaserCommModule"
        },
        {
         "$ref": "#/components/schemas/LoadState"
        },
        {
         "$ref": "#/components/schemas/LocalVector"
        },
        {
         "$ref": "#/components/schemas/LogicalConfiguration"
        },
        {
         "$ref": "#/components/schemas/MagneticHysteresisRod"
        },
        {
         "$ref": "#/components/schemas/Modem"
        },
        {
         "$ref": "#/components/schemas/PassiveTransmitInterface"
        },
        {
         "$ref": "#/components/schemas/PermanentDipoleMagnet"
        },
        {
         "$ref": "#/components/schemas/PowerLoad"
        },
        {
         "$ref": "#/components/schemas/PowerProcessor"
        },
        {
         "$ref": "#/components/schemas/ReceiveInterface"
        },
        {
         "$ref": "#/components/schemas/RectangularFieldOfView"
        },
        {
         "$ref": "#/components/schemas/RelativeSchedule"
        },
        {
         "$ref": "#/components/schemas/ResistanceLoad"
        },
        {
         "$ref": "#/components/schemas/Routine"
        },
        {
         "$ref": "#/components/schemas/SameTargetMultiCondition"
        },
        {
         "$ref": "#/components/schemas/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/SelfToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/SelfToSelfCondition"
        },
        {
         "$ref": "#/components/schemas/SelfToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/Sensor"
        },
        {
         "$ref": "#/components/schemas/SensorFailureMode"
        },
        {
         "$ref": "#/components/schemas/SpaceTarget"
        },
        {
         "$ref": "#/components/schemas/StateTransition"
        },
        {
         "$ref": "#/components/schemas/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/Subsystem"
        },
        {
         "$ref": "#/components/schemas/TargetGroup"
        },
        {
         "$ref": "#/components/schemas/TargetGroupInFovCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToSelfCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupVector"
        },
        {
         "$ref": "#/components/schemas/TargetInFovCondition"
        },
        {
         "$ref": "#/components/schemas/TargetToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/TargetToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/TargetVector"
        },
        {
         "$ref": "#/components/schemas/TerrestrialAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/TimeCondition"
        },
        {
         "$ref": "#/components/schemas/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/VectorInFovCondition"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithDuration"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithTimestamps"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Selfid",
      "type": "string"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "currentWaypointPath": {
      "title": "ID of Associated WaypointPath Block",
      "type": "string",
      "description": "Relationship to zero or one `WaypointPath` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "ramVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "upVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH"
      ]
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "solarElevation": {
      "title": "Solar Elevation [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarAzimuth": {
      "title": "Solar Azimuth [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TerrestrialVehicleTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each enabled simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 1.0
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       }
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "TerrestrialVehicle"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "A TerrestrialVehicle Metamodel"
   },
   "TerrestrialVehicleModelRes": {
    "title": "TerrestrialVehicleModelRes",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor"
    ],
    "type": "object",
    "properties": {
     "blocks": {
      "title": "Blocks",
      "type": "object",
      "additionalProperties": {
       "anyOf": [
        {
         "$ref": "#/definitions/Antenna"
        },
        {
         "$ref": "#/definitions/AreaTarget"
        },
        {
         "$ref": "#/definitions/Battery"
        },
        {
         "$ref": "#/definitions/BatteryCell"
        },
        {
         "$ref": "#/definitions/BatteryPack"
        },
        {
         "$ref": "#/definitions/BodyFrameVector"
        },
        {
         "$ref": "#/definitions/BodyInFovCondition"
        },
        {
         "$ref": "#/definitions/BusRegulator"
        },
        {
         "$ref": "#/definitions/CelestialTarget"
        },
        {
         "$ref": "#/definitions/CelestialVector"
        },
        {
         "$ref": "#/definitions/CircularFieldOfView"
        },
        {
         "$ref": "#/definitions/CombinationalLogic"
        },
        {
         "$ref": "#/definitions/Component"
        },
        {
         "$ref": "#/definitions/ComponentToScalarCondition"
        },
        {
         "$ref": "#/definitions/CompoundCondition"
        },
        {
         "$ref": "#/definitions/CooperativeTransmitInterface"
        },
        {
         "$ref": "#/definitions/DataBus"
        },
        {
         "$ref": "#/definitions/DataInterface"
        },
        {
         "$ref": "#/definitions/DataMode"
        },
        {
         "$ref": "#/definitions/DataStorage"
        },
        {
         "$ref": "#/definitions/DataType"
        },
        {
         "$ref": "#/definitions/DynamicallyLoadedComponent"
        },
        {
         "$ref": "#/definitions/ElapsedTimeCondition"
        },
        {
         "$ref": "#/definitions/FieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/FiniteStateMachine"
        },
        {
         "$ref": "#/definitions/FixedSchedule"
        },
        {
         "$ref": "#/definitions/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/definitions/GroundTarget"
        },
        {
         "$ref": "#/definitions/InternalDataInterface"
        },
        {
         "$ref": "#/definitions/LaserCommModule"
        },
        {
         "$ref": "#/definitions/LoadState"
        },
        {
         "$ref": "#/definitions/LocalVector"
        },
        {
         "$ref": "#/definitions/LogicalConfiguration"
        },
        {
         "$ref": "#/definitions/MagneticHysteresisRod"
        },
        {
         "$ref": "#/definitions/Modem"
        },
        {
         "$ref": "#/definitions/PassiveTransmitInterface"
        },
        {
         "$ref": "#/definitions/PermanentDipoleMagnet"
        },
        {
         "$ref": "#/definitions/PowerLoad"
        },
        {
         "$ref": "#/definitions/PowerProcessor"
        },
        {
         "$ref": "#/definitions/ReceiveInterface"
        },
        {
         "$ref": "#/definitions/RectangularFieldOfView"
        },
        {
         "$ref": "#/definitions/RelativeSchedule"
        },
        {
         "$ref": "#/definitions/ResistanceLoad"
        },
        {
         "$ref": "#/definitions/Routine"
        },
        {
         "$ref": "#/definitions/SameTargetMultiCondition"
        },
        {
         "$ref": "#/definitions/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/SelfToScalarCondition"
        },
        {
         "$ref": "#/definitions/SelfToSelfCondition"
        },
        {
         "$ref": "#/definitions/SelfToTargetCondition"
        },
        {
         "$ref": "#/definitions/Sensor"
        },
        {
         "$ref": "#/definitions/SensorFailureMode"
        },
        {
         "$ref": "#/definitions/SpaceTarget"
        },
        {
         "$ref": "#/definitions/StateTransition"
        },
        {
         "$ref": "#/definitions/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/Subsystem"
        },
        {
         "$ref": "#/definitions/TargetGroup"
        },
        {
         "$ref": "#/definitions/TargetGroupInFovCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToScalarCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToSelfCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupToTargetCondition"
        },
        {
         "$ref": "#/definitions/TargetGroupVector"
        },
        {
         "$ref": "#/definitions/TargetInFovCondition"
        },
        {
         "$ref": "#/definitions/TargetToScalarCondition"
        },
        {
         "$ref": "#/definitions/TargetToTargetCondition"
        },
        {
         "$ref": "#/definitions/TargetVector"
        },
        {
         "$ref": "#/definitions/TerrestrialAttitudeDynamics"
        },
        {
         "$ref": "#/definitions/TimeCondition"
        },
        {
         "$ref": "#/definitions/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/definitions/VectorInFovCondition"
        },
        {
         "$ref": "#/definitions/WaypointPathWithDuration"
        },
        {
         "$ref": "#/definitions/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/definitions/WaypointPathWithTimestamps"
        }
       ]
      },
      "description": "Object that maps all `Block` `id`'s to respective `Block`s in the `Metamodel` instance.",
      "default": {}
     },
     "index": {
      "title": "Index",
      "type": "object",
      "additionalProperties": {
       "type": "array",
       "items": {
        "type": "string"
       }
      },
      "description": "Object that maps `Block` class names to subclasses and to `Block` `id`s of the given class."
     },
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Selfid",
      "type": "string"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "currentWaypointPath": {
      "title": "ID of Associated WaypointPath Block",
      "type": "string",
      "description": "Relationship to zero or one `WaypointPath` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "ramVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "upVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH"
      ]
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "solarElevation": {
      "title": "Solar Elevation [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarAzimuth": {
      "title": "Solar Azimuth [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TerrestrialVehicleTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each enabled simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 1.0
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       }
      }
     },
     "_blockNames": {
      "title": " Blocknames",
      "type": "array",
      "items": {},
      "description": "Names of all valid `Block`s for this `Metamodel` class"
     },
     "_relationships": {
      "title": " Relationships",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of relationship fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_quantityKinds": {
      "title": " Quantitykinds",
      "type": "object",
      "description": "Object mapping `Block` class names and `root` to the names of `QuantityKind` fields. The field\n    names then map to an object of descriptive information about the field."
     },
     "_supers": {
      "title": " Supers",
      "type": "object",
      "description": "Object mapping `Block` class names to a list of names of their direct super classes."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TerrestrialVehicleModelRes"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Class for TerrestrialVehicle with meta attributes"
   },
   "TerrestrialVehicleModelRoot": {
    "title": "TerrestrialVehicleModelRoot",
    "required": [
     "cadKey",
     "cadSignedUrl",
     "cadScaleFactor"
    ],
    "type": "object",
    "properties": {
     "migrated": {
      "title": "Migrated",
      "type": "string",
      "description": "Name of the migration file that was last run on this `Metamodel`."
     },
     "position": {
      "title": "Agent Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "velocity": {
      "title": "Agent Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>This value is set based on the `Orbit` associated to this `Agent` in a `Scenario`."
     },
     "attitude": {
      "title": "Attitude Quaternion",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quaternion"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "body_eci": [
        0.0,
        0.0,
        0.0,
        1.0
       ]
      }
     },
     "angularVelocity": {
      "title": "Body frame angular velocity [rad/s]",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularVelocity"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "rad/s": [
        0.0,
        0.0,
        0.0
       ]
      }
     },
     "angularAcceleration": {
      "title": "Body-frame angular acceleration [rad/s^2]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": [
       0.0,
       0.0,
       0.0
      ]
     },
     "selfId": {
      "title": "Selfid",
      "type": "string"
     },
     "cadFileName": {
      "title": "Vehicle CAD Model Filename",
      "maxLength": 100,
      "type": "string",
      "default": ""
     },
     "cadKey": {
      "title": "Vehicle CAD Model Key",
      "maxLength": 48,
      "type": "string"
     },
     "cadSignedUrl": {
      "title": "Vehicle CAD Model URL",
      "maxLength": 1024,
      "type": "string"
     },
     "cadScaleFactor": {
      "title": "Vehicle CAD Model Scale Factor",
      "exclusiveMaximum": 100000000.0,
      "exclusiveMinimum": 0.0,
      "type": "number",
      "description": "A normalizing factor that scales the model such that its largest bounding dimension is `1`."
     },
     "activeRoutines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "currentWaypointPath": {
      "title": "ID of Associated WaypointPath Block",
      "type": "string",
      "description": "Relationship to zero or one `WaypointPath` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "ramVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "upVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to zero or one `BodyFrameVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "enabledModules": {
      "title": "Enabled Simulation Modules",
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Enable/disable specific simulation modules. GNC and CDH must always be enabled.",
      "default": [
       "GNC",
       "CDH"
      ]
     },
     "shadow": {
      "title": "Eclipse State",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "solarElevation": {
      "title": "Solar Elevation [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarAzimuth": {
      "title": "Solar Azimuth [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "timeStepConstraints": {
      "title": "Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TerrestrialVehicleTimeStepConstraints"
       }
      ],
      "description": "Set the minimum and maximum time steps for each enabled simulation module.",
      "default": {
       "gnc": {
        "max": 10.0,
        "min": 1.0
       },
       "cdh": {
        "max": 10.0,
        "min": 0.1
       }
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "TerrestrialVehicleModelRoot"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Metamodel"
     }
    },
    "additionalProperties": false,
    "description": "Class for the updateable fields on TerrestrialVehicle (root)"
   },
   "TerrestrialVehicleTimeStepConstraints": {
    "title": "TerrestrialVehicleTimeStepConstraints",
    "type": "object",
    "properties": {
     "gnc": {
      "title": "GNC Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 1,
       "max": 10
      }
     },
     "cdh": {
      "title": "CDH Time Step Constraints",
      "allOf": [
       {
        "$ref": "#/components/schemas/TimeStepConstraint"
       }
      ],
      "default": {
       "min": 0.1,
       "max": 10
      }
     }
    },
    "additionalProperties": false,
    "description": "Set the minimum and maximum time steps for each enabled simulation module."
   },
   "TerrestrialVehicleUpdateInterface": {
    "title": "TerrestrialVehicleUpdateInterface",
    "required": [
     "root",
     "blocks",
     "delete"
    ],
    "type": "object",
    "properties": {
     "root": {
      "$ref": "#/components/schemas/TerrestrialVehicleModelRoot"
     },
     "blocks": {
      "title": "Blocks",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/WaypointPathWithSpeed"
        },
        {
         "$ref": "#/components/schemas/MagneticHysteresisRod"
        },
        {
         "$ref": "#/components/schemas/StaticFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/TrackingFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/ScanFieldOfViewArticulationMode"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithDuration"
        },
        {
         "$ref": "#/components/schemas/SelfToSelfCondition"
        },
        {
         "$ref": "#/components/schemas/TargetGroupToSelfCondition"
        },
        {
         "$ref": "#/components/schemas/SameTargetMultiCondition"
        },
        {
         "$ref": "#/components/schemas/SelfToScalarCondition"
        },
        {
         "$ref": "#/components/schemas/SelfToTargetCondition"
        },
        {
         "$ref": "#/components/schemas/VectorInFovCondition"
        },
        {
         "$ref": "#/components/schemas/GeoAreaDateTimeGroup"
        },
        {
         "$ref": "#/components/schemas/LocalVector"
        },
        {
         "$ref": "#/components/schemas/CelestialVector"
        },
        {
         "$ref": "#/components/schemas/TargetGroupVector"
        },
        {
         "$ref": "#/components/schemas/TargetVector"
        },
        {
         "$ref": "#/components/schemas/TerrestrialAttitudeDynamics"
        },
        {
         "$ref": "#/components/schemas/WaypointPathWithTimestamps"
        },
        {
         "$ref": "#/components/schemas/PermanentDipoleMagnet"
        }
       ]
      }
     },
     "delete": {
      "title": "Delete",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "ThermalDesignLayout": {
    "title": "ThermalDesignLayout",
    "required": [
     "name",
     "dateCreated",
     "lastEdited",
     "lastUsed"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Layout Name",
      "maxLength": 25,
      "minLength": 2,
      "type": "string",
      "description": "Also serves as version"
     },
     "dateCreated": {
      "title": "Date Created",
      "type": "number"
     },
     "lastEdited": {
      "title": "Date Last Edited",
      "type": "number"
     },
     "lastUsed": {
      "title": "Date Last Used",
      "type": "number"
     },
     "nodes": {
      "title": "IDs of Associated BlockWithQuantityKind Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `BlockWithQuantityKind` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "type": {
      "title": "Type",
      "enum": [
       "ThermalDesignLayout"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ThermalDesignLayout Block"
   },
   "ThermalInterface": {
    "title": "ThermalInterface",
    "required": [
     "name",
     "sideA",
     "sideB"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "area": {
      "title": "Interface Area [m\u00b2]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "sideA": {
      "title": "Side A Item Category",
      "allOf": [
       {
        "$ref": "#/components/schemas/SideCategories"
       }
      ],
      "description": "\nIf value is:\n- `COMPONENT`: `componentA` must be defined\n- `SURFACE`: `surfaceA` must be defined\n- `COOLER`: `coolerA` must be defined\n        "
     },
     "sideB": {
      "title": "Side B Item Category",
      "allOf": [
       {
        "$ref": "#/components/schemas/SideCategories"
       }
      ],
      "description": "\nIf value is:\n- `COMPONENT`: `componentB` must be defined\n- `SURFACE`: `surfaceB` must be defined\n- `COOLER`: `coolerB` must be defined\n        "
     },
     "material": {
      "title": "ID of Associated ThermalInterfaceMaterial Block",
      "type": "string",
      "description": "Relationship to zero or one `ThermalInterfaceMaterial` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "componentA": {
      "title": "ID of Associated Component Block",
      "type": "string",
      "description": "Relationship to zero or one `Component` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "componentB": {
      "title": "ID of Associated Component Block",
      "type": "string",
      "description": "Relationship to zero or one `Component` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "surfaceA": {
      "title": "ID of Associated Surface Block",
      "type": "string",
      "description": "Relationship to zero or one `Surface` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "surfaceB": {
      "title": "ID of Associated Surface Block",
      "type": "string",
      "description": "Relationship to zero or one `Surface` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "coolerA": {
      "title": "ID of Associated Cooler Block",
      "type": "string",
      "description": "Relationship to zero or one `Cooler` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "coolerB": {
      "title": "ID of Associated Cooler Block",
      "type": "string",
      "description": "Relationship to zero or one `Cooler` blocks. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "resistance": {
      "title": "Thermal Resistance [K/W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "tempDelta": {
      "title": "Temperature Delta [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "heatFlowRate": {
      "title": "Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "hotTemp": {
      "title": "Hot Side Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldTemp": {
      "title": "Cold Side Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "Maximum Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Minimum Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "ThermalInterface"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ThermalInterface Block"
   },
   "ThermalInterfaceMaterial": {
    "title": "ThermalInterfaceMaterial",
    "required": [
     "name",
     "resistivity",
     "thickness",
     "hotTempRating",
     "coldTempRating"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "resistivity": {
      "title": "Thermal Resistivity [K\u2022m/W]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "thickness": {
      "title": "Interface Thickness [m]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "hotTempRating": {
      "title": "Maximum Rated Interface Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ]
     },
     "coldTempRating": {
      "title": "Minimum Rated Interface Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ]
     },
     "type": {
      "title": "Type",
      "enum": [
       "ThermalInterfaceMaterial"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A ThermalInterfaceMaterial Block"
   },
   "Thruster": {
    "title": "Thruster",
    "required": [
     "name",
     "isp",
     "minThrust",
     "maxThrust",
     "location"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "busRegulator": {
      "title": "ID of Associated BusRegulator Block",
      "type": "string",
      "description": "Relationship to zero or one `BusRegulator` blocks. Inverse key: `BusRegulator.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "powerProcessor": {
      "title": "ID of Associated PowerProcessor Block",
      "type": "string",
      "description": "Relationship to zero or one `PowerProcessor` blocks. Inverse key: `PowerProcessor.dynamicallyLoadedComponents`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "activeFailureMode": {
      "title": "ID of Associated ActuatorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `ActuatorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated ActuatorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `ActuatorFailureMode` blocks. Inverse key: `ActuatorFailureMode.actuator`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "isp": {
      "title": "Specific Impulse [s]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "minThrust": {
      "title": "Minimum Thrust [N]",
      "minimum": 0.0,
      "type": "number"
     },
     "maxThrust": {
      "title": "Maximum Thrust [N]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "location": {
      "title": "Thruster Location [m]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "Location relative to the origin of the spacecraft body frame."
     },
     "orientation": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "fuelReservoir": {
      "title": "ID of Associated FuelReservoir Block",
      "type": "string",
      "description": "Relationship to a single `FuelReservoir` block. Inverse key: `FuelReservoir.thrusters`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "thrust": {
      "title": "Thrust [N]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "type": {
      "title": "Type",
      "enum": [
       "Thruster"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A Thruster Block"
   },
   "TimeStepConstraint": {
    "title": "TimeStepConstraint",
    "required": [
     "max",
     "min"
    ],
    "type": "object",
    "properties": {
     "max": {
      "title": "Max Time Step [s]",
      "type": "number"
     },
     "min": {
      "title": "Min Time Step [s]",
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Tle": {
    "title": "Tle",
    "required": [
     "tle"
    ],
    "type": "object",
    "properties": {
     "tle": {
      "title": "TLE",
      "type": "string"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "TrackingFieldOfViewArticulationMode": {
    "title": "TrackingFieldOfViewArticulationMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to a single `FieldOfView` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "commandedArticulations": {
      "title": "Commanded Articulations",
      "type": "array",
      "items": {},
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "lockVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "TrackingFieldOfViewArticulationMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TrackingFieldOfViewArticulationMode Block"
   },
   "TriadAlgorithm": {
    "title": "TriadAlgorithm",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "rate": {
      "title": "Update Rate [Hz]",
      "type": "number",
      "description": "Update rate is not currently implemented but will be supported in a future release."
     },
     "processNoise": {
      "title": "Process Noise",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of the prediction process noise.",
      "default": 1e-08
     },
     "attitudeSolution": {
      "title": "Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of attitude, either definitive or predictive."
     },
     "angularVelocitySolution": {
      "title": "Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Best available estimate of angular velocity, either definitive or predictive."
     },
     "covariance": {
      "title": "Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "definitiveAttitudeSolution": {
      "title": "Definitive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated attitude after measurement updates are applied."
     },
     "definitiveAngularVelocitySolution": {
      "title": "Definitive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Estimated angular velocity after measurement updates are applied."
     },
     "definitiveCovariance": {
      "title": "Definitive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "predictiveAttitudeSolution": {
      "title": "Predictive Attitude Solution Quaternion",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted attitude before any measurement updates are applied."
     },
     "predictiveAngularVelocitySolution": {
      "title": "Predictive Angular Velocity Solution [rad/s]",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Predicted angular velocity before any measurement updates are applied."
     },
     "predictiveCovariance": {
      "title": "Predictive Solution Covariance",
      "type": "array",
      "items": {
       "maxItems": 6,
       "minItems": 6,
       "type": "array",
       "items": {
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "vectorSensors": {
      "title": "IDs of Associated Sensor Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Sensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "angularVelocitySensors": {
      "title": "IDs of Associated AngularVelocitySensor Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `AngularVelocitySensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "TriadAlgorithm"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TriadAlgorithm Block"
   },
   "TriadAttitudeInitializer": {
    "title": "TriadAttitudeInitializer",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "vectorSensors": {
      "title": "IDs of Associated Sensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `Sensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "angularVelocitySensors": {
      "title": "IDs of Associated Sensor Blocks",
      "type": "object",
      "description": "Relationship with data to one or more `Sensor` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": {}
     },
     "defaultAngularVelocitySigma": {
      "title": "Default Angular Velocity Sigma",
      "allOf": [
       {
        "$ref": "#/components/schemas/AngularRateAttitude45"
       }
      ],
      "description": "Initializer will assume an initial angular velocity of 0 with this standard deviation if no angular velocity sensors are provided.",
      "default": {
       "deg/s": 10
      }
     },
     "type": {
      "title": "Type",
      "enum": [
       "TriadAttitudeInitializer"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A coarse initial attitude determination algorithm that relies on vector sensor and direct angular velocity measurements\nto produce a solution. The initializer estimates an attitude using the Triad algorithm to solve Wahba's problem and\nestimates an angular velocity by averaging measurements from all available angular velocity sensors.\n\nIf no angular velocity sensor measurements are available, the initializer will assume an initial angular velocity of 0\nwith the an initial uncertainty equal to `defaultAngularVelocitySigma` in all directions.\n    "
   },
   "Triangular": {
    "title": "Triangular",
    "required": [
     "fn",
     "low",
     "high",
     "mode"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "triangular"
      ],
      "type": "string"
     },
     "low": {
      "title": "Low",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "high": {
      "title": "High",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "mode": {
      "title": "Mode",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "TwoConvMpptPowerProcessor": {
    "title": "TwoConvMpptPowerProcessor",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "availableSolarRootPower": {
      "title": "Available Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "solarRootPower": {
      "title": "Solar Root Power [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ProcessorDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "loads": {
      "title": "IDs of Associated Load Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Load` blocks. Inverse key: `Load.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dynamicallyLoadedComponents": {
      "title": "IDs of Associated DynamicallyLoadedComponent Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DynamicallyLoadedComponent` blocks. Inverse key: `DynamicallyLoadedComponent.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "busRegulators": {
      "title": "IDs of Associated BusRegulator Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `BusRegulator` blocks. Inverse key: `BusRegulator.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "battery": {
      "title": "ID of Associated Battery Block",
      "type": "string",
      "description": "Relationship to a single `Battery` block. Inverse key: `Battery.powerProcessor`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "topologyParams": {
      "title": "Topology Definition Parameters",
      "anyOf": [
       {
        "$ref": "#/components/schemas/FullyRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvHybridTopologyParams"
       },
       {
        "$ref": "#/components/schemas/QuasiRegDetTopologyParams"
       },
       {
        "$ref": "#/components/schemas/TwoConvMpptTopologyParams"
       },
       {
        "$ref": "#/components/schemas/SingleConvMpptTopologyParams"
       }
      ],
      "description": "This field may only be undefined initially.  It is required on first update."
     },
     "solarArrays": {
      "title": "IDs of Associated SolarArray Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SolarArray` blocks. Inverse key: `SolarArray.powerProcessor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "type": {
      "title": "Type",
      "enum": [
       "TwoConvMpptPowerProcessor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A TwoConvMpptPowerProcessor Block"
   },
   "TwoConvMpptTopologyParams": {
    "title": "TwoConvMpptTopologyParams",
    "required": [
     "bcrEfficiency",
     "outputPowerRating",
     "dischargeDiodeDrop",
     "chargeControllerBusVoltage",
     "pptEfficiency"
    ],
    "type": "object",
    "properties": {
     "bcrEfficiency": {
      "title": "Battery Charge Regulator (BCR) Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "outputPowerRating": {
      "title": "Output Power Rating [W]",
      "minimum": 0.0,
      "type": "number"
     },
     "dischargeDiodeDrop": {
      "title": "Discharge Diode Drop [V]",
      "minimum": 0.0,
      "type": "number"
     },
     "chargeControllerBusVoltage": {
      "title": "Charge Controller Bus Voltage [V]",
      "minimum": 0.0,
      "type": "number"
     },
     "pptEfficiency": {
      "title": "Peak Power Tracking (PPT) Converter Efficiency",
      "maximum": 1.0,
      "exclusiveMinimum": 0.0,
      "type": "number"
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "Types": {
    "title": "Types",
    "enum": [
     "SpaceTarget",
     "CelestialTarget",
     "GroundTarget",
     "AreaTarget"
    ],
    "description": "An enumeration."
   },
   "Uniform": {
    "title": "Uniform",
    "required": [
     "fn",
     "a",
     "b"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "uniform"
      ],
      "type": "string"
     },
     "a": {
      "title": "A",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "integer"
       },
       {
        "type": "string"
       }
      ]
     },
     "b": {
      "title": "B",
      "anyOf": [
       {
        "type": "number"
       },
       {
        "type": "integer"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "UnresponsiveMagnetorquerFailureMode": {
    "title": "UnresponsiveMagnetorquerFailureMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "actuator": {
      "title": "ID of Associated Magnetorquer Block",
      "type": "string",
      "description": "Relationship to a single `Magnetorquer` block. Inverse key: `Magnetorquer.failureModes`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "torque": {
      "title": "Torque",
      "type": "null",
      "description": "The torque altered by the `FailureMode`."
     },
     "type": {
      "title": "Type",
      "enum": [
       "UnresponsiveMagnetorquerFailureMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A UnresponsiveMagnetorquerFailureMode Block"
   },
   "UnresponsiveReactionWheelFailureMode": {
    "title": "UnresponsiveReactionWheelFailureMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "actuator": {
      "title": "ID of Associated ReactionWheel Block",
      "type": "string",
      "description": "Relationship to a single `ReactionWheel` block. Inverse key: `ReactionWheel.failureModes`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "torque": {
      "title": "Torque",
      "type": "null",
      "description": "The torque altered by the `FailureMode`."
     },
     "type": {
      "title": "Type",
      "enum": [
       "UnresponsiveReactionWheelFailureMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A UnresponsiveReactionWheelFailureMode Block"
   },
   "UnresponsiveSensorFailureMode": {
    "title": "UnresponsiveSensorFailureMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "sensor": {
      "title": "ID of Associated Sensor Block",
      "type": "string",
      "description": "Relationship to a single `Sensor` block. Inverse key: `Sensor.failureModes`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "measurement": {
      "title": "Measurement",
      "type": "null",
      "description": "The measurement altered by the `FailureMode`."
     },
     "type": {
      "title": "Type",
      "enum": [
       "UnresponsiveSensorFailureMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A UnresponsiveSensorFailureMode Block"
   },
   "UnresponsiveThrusterFailureMode": {
    "title": "UnresponsiveThrusterFailureMode",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "isActive": {
      "title": "Activity Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this `Mode` is active, false otherwise.",
      "default": false
     },
     "routines": {
      "title": "IDs of Associated Routine Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Routine` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "actuator": {
      "title": "ID of Associated Thruster Block",
      "type": "string",
      "description": "Relationship to a single `Thruster` block. Inverse key: `Thruster.failureModes`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "thrust": {
      "title": "Thrust",
      "type": "null",
      "description": "The thrust altered by the `FailureMode`."
     },
     "type": {
      "title": "Type",
      "enum": [
       "UnresponsiveThrusterFailureMode"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A UnresponsiveThrusterFailureMode Block"
   },
   "ValidationError": {
    "title": "ValidationError",
    "required": [
     "loc",
     "msg",
     "type"
    ],
    "type": "object",
    "properties": {
     "loc": {
      "title": "Location",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        }
       ]
      }
     },
     "msg": {
      "title": "Message",
      "type": "string"
     },
     "type": {
      "title": "Error Type",
      "type": "string"
     }
    }
   },
   "VectorInFovCondition": {
    "title": "VectorInFovCondition",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "terminator": {
      "title": "Termination Condition",
      "type": "boolean",
      "description": "If set to true, the simulation will be terminated when this condition evaluates to true.",
      "default": false
     },
     "compliance": {
      "title": "Compliance Status",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>True when this condition is compliant, false otherwise."
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to a single `FieldOfView` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "negate": {
      "title": "Negate the condition so that it is compliant if the vector lies outside of the Field of View.",
      "type": "boolean",
      "default": false
     },
     "referenceVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nThe condition will be compliant if this vector lies within the Field of View. This does not check for eclipsing. (See TargetInFovCondition, which does.)"
     },
     "type": {
      "title": "Type",
      "enum": [
       "VectorInFovCondition"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A VectorInFovCondition Block"
   },
   "VectorSensor": {
    "title": "VectorSensor",
    "required": [
     "name",
     "oneSigmaPerAxisError"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "partNumber": {
      "title": "Part Number",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "manufacturer": {
      "title": "Manufacturer",
      "maxLength": 32,
      "type": "string",
      "default": ""
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "hotTempRating": {
      "title": "Maximum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": 100.0
      }
     },
     "coldTempRating": {
      "title": "Minimum Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "default": {
       "degC": -40.0
      }
     },
     "thermalCapacitance": {
      "title": "Thermal Capacitance [J/K]",
      "minimum": 0.0,
      "type": "number",
      "default": 1000
     },
     "cotsTemplate": {
      "title": "COTS Template Name",
      "maxLength": 64,
      "type": "string",
      "description": "Read-only",
      "default": ""
     },
     "subsystem": {
      "title": "ID of Associated Subsystem Block",
      "type": "string",
      "description": "Relationship to a single `Subsystem` block. Inverse key: `Subsystem.components`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "loadStates": {
      "title": "IDs of Associated LoadState Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `LoadState` blocks. Inverse key: `LoadState.component`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeLoadState": {
      "title": "ID of Associated LoadState Block",
      "type": "string",
      "description": "Relationship to zero or one `LoadState` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "loadStatesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active load state."
     },
     "dataSinks": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.source`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataSources": {
      "title": "IDs of Associated DataInterface Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataInterface` blocks. Inverse key: `DataInterface.sink`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "dataStorage": {
      "title": "ID of Associated DataStorage Block",
      "type": "string",
      "description": "Relationship to zero or one `DataStorage` blocks. Inverse key: `DataStorage.component`. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModes": {
      "title": "IDs of Associated DataMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `DataMode` blocks. Inverse key: `DataMode.components`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "activeDataMode": {
      "title": "ID of Associated DataMode Block",
      "type": "string",
      "description": "Relationship to zero or one `DataMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "dataModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active data mode."
     },
     "powerConsumed": {
      "title": "Power Consumption",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "dissipations": {
      "title": "Power Dissipation Breakdown",
      "allOf": [
       {
        "$ref": "#/components/schemas/ComponentDissipations"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "storage": {
      "title": "Data Usage Breakdown",
      "type": "object",
      "additionalProperties": {
       "type": "object",
       "additionalProperties": {
        "minimum": 0.0,
        "type": "number"
       }
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "readRate": {
      "title": "Data Storage Read Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "writeRate": {
      "title": "Data Storage Write Rate [bps]",
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "conditions": {
      "title": "IDs of Associated Condition Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `Condition` blocks. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "fieldOfView": {
      "title": "ID of Associated FieldOfView Block",
      "type": "string",
      "description": "Relationship to zero or one `FieldOfView` blocks. Inverse key: `FieldOfView.sensors`. On delete: `restrict` (prevent referenced block from being deleted while relationship to this one exists)."
     },
     "activeFailureMode": {
      "title": "ID of Associated SensorFailureMode Block",
      "type": "string",
      "description": "Relationship to zero or one `SensorFailureMode` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "failureModes": {
      "title": "IDs of Associated SensorFailureMode Blocks",
      "type": "array",
      "items": {},
      "description": "Relationship to one or more `SensorFailureMode` blocks. Inverse key: `SensorFailureMode.sensor`. On delete: `set-none` (remove ID of referenced block from this relationship field).",
      "default": []
     },
     "failureModesMainRoutine": {
      "title": "ID of Associated Routine Block",
      "type": "string",
      "description": "Relationship to zero or one `Routine` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted).\n\nAdditional Details:\nSet automatically to the root of the routine tree for the active failure mode."
     },
     "shouldMeasure": {
      "title": "Should Measure During this Step",
      "type": "boolean",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": false
     },
     "oneSigmaPerAxisError": {
      "title": "Measurment Per-Axis Error",
      "minimum": 0.0,
      "type": "number",
      "description": "Standard deviation of normally-distributed noise added to all elements of the measured vector."
     },
     "referenceVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to a single `ReferenceVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "measurement": {
      "title": "Measurement Vector",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "type": {
      "title": "Type",
      "enum": [
       "VectorSensor"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A VectorSensor Block"
   },
   "VectorTrackingSurface": {
    "title": "VectorTrackingSurface",
    "required": [
     "name",
     "area",
     "surfaceCentroid"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "area": {
      "title": "Area [m^2]",
      "exclusiveMinimum": 0.0,
      "type": "number"
     },
     "surfaceCentroid": {
      "title": "Centroid [m]",
      "type": "array",
      "items": {
       "type": "number"
      }
     },
     "bodyFrameVector": {
      "title": "ID of Associated BodyFrameVector Block",
      "type": "string",
      "description": "Relationship to a single `BodyFrameVector` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "surfaceMaterial": {
      "title": "ID of Associated SurfaceMaterial Block",
      "type": "string",
      "description": "Relationship to a single `SurfaceMaterial` block. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "geocenterAngle": {
      "title": "Geocenter Angle [rad]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoViewFactor": {
      "title": "Earth Albedo View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthIrViewFactor": {
      "title": "Earth IR View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarViewFactor": {
      "title": "Solar View Factor [%]",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "surfaceNormalVector": {
      "title": "Surface Normal Vector",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "sat2Sun": {
      "title": "Sat to Sun Relative Vector [km]",
      "allOf": [
       {
        "$ref": "#/components/schemas/FrameVector"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "earthIrHeatFlowRate": {
      "title": "Earth Infrared Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "earthAlbedoHeatFlowRate": {
      "title": "Earth Albedo Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "solarHeatFlowRate": {
      "title": "Solar Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "spaceHeatFlowRate": {
      "title": "Space Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "heatFlowRate": {
      "title": "Heat Flow Rate [W]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "temperature": {
      "title": "Temperature [\u00b0C]",
      "allOf": [
       {
        "$ref": "#/components/schemas/Temperature"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": {
       "degC": 20.0
      }
     },
     "hotMargin": {
      "title": "High Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "coldMargin": {
      "title": "Low Temperature Margin [\u00b0C]",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "antiTrack": {
      "title": "Set this option true if you want the surface to minimize alignment with the tracked vector. For example, the back side of a sun tracking solar panel.",
      "type": "boolean",
      "default": false
     },
     "refVector1": {
      "title": "Surface Plane Vector 1",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "refVector2": {
      "title": "Surface Plane Vector 2",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "vectorProjection": {
      "title": "Surface Plane Vector Projection",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "articulationAngle": {
      "title": "Articulation Angle [rad]",
      "maximum": 360.0,
      "minimum": -360.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.",
      "default": 0.0
     },
     "trackedVector": {
      "title": "ID of Associated ReferenceVector Block",
      "type": "string",
      "description": "Relationship to zero or one `ReferenceVector` blocks. On delete: `set-none` (set relationship field to `None` when referenced block is deleted)."
     },
     "type": {
      "title": "Type",
      "enum": [
       "VectorTrackingSurface"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A VectorTrackingSurface Block"
   },
   "VonmisesVariate": {
    "title": "VonmisesVariate",
    "required": [
     "fn",
     "mu",
     "kappa"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "vonmisesvariate"
      ],
      "type": "string"
     },
     "mu": {
      "title": "Mu",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "kappa": {
      "title": "Kappa",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "WaypointPathWithDuration": {
    "title": "WaypointPathWithDuration",
    "required": [
     "name",
     "waypoints",
     "durations"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "waypoints": {
      "title": "Waypoints",
      "anyOf": [
       {
        "type": "array",
        "items": {
         "$ref": "#/components/schemas/Position"
        }
       },
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "List of waypoints in the path"
     },
     "edges": {
      "title": "Edge",
      "type": "array",
      "items": {
       "type": "object",
       "additionalProperties": {
        "type": "number"
       }
      },
      "description": "Edges of the path"
     },
     "leg": {
      "title": "Leg",
      "minimum": 0.0,
      "type": "integer",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current leg of the path"
     },
     "legProgress": {
      "title": "Leg Progress",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Progress along the current leg"
     },
     "position": {
      "title": "Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current position along the path"
     },
     "velocity": {
      "title": "Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current velocity along the path"
     },
     "timeStepDriver": {
      "title": "Time Step Driver",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "durations": {
      "title": "Duration",
      "anyOf": [
       {
        "type": "array",
        "items": {
         "$ref": "#/components/schemas/Duration"
        }
       },
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "Duration of the vehicle departing each waypoint or single duration of the entire path"
     },
     "pathStartTime": {
      "title": "Start Time",
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Start time of the path in elapsed sim time, can be reset to the current time"
     },
     "type": {
      "title": "Type",
      "enum": [
       "WaypointPathWithDuration"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Use this block to set the duration of each interval in the path."
   },
   "WaypointPathWithSpeed": {
    "title": "WaypointPathWithSpeed",
    "required": [
     "name",
     "waypoints",
     "speeds"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "waypoints": {
      "title": "Waypoints",
      "anyOf": [
       {
        "type": "array",
        "items": {
         "$ref": "#/components/schemas/Position"
        }
       },
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "List of waypoints in the path"
     },
     "edges": {
      "title": "Edge",
      "type": "array",
      "items": {
       "type": "object",
       "additionalProperties": {
        "type": "number"
       }
      },
      "description": "Edges of the path"
     },
     "leg": {
      "title": "Leg",
      "minimum": 0.0,
      "type": "integer",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current leg of the path"
     },
     "legProgress": {
      "title": "Leg Progress",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Progress along the current leg"
     },
     "position": {
      "title": "Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current position along the path"
     },
     "velocity": {
      "title": "Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current velocity along the path"
     },
     "timeStepDriver": {
      "title": "Time Step Driver",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "speeds": {
      "title": "Speed",
      "anyOf": [
       {
        "type": "array",
        "items": {
         "type": "number"
        }
       },
       {
        "type": "number"
       }
      ],
      "description": "Speed of the vehicle departing each waypoint"
     },
     "type": {
      "title": "Type",
      "enum": [
       "WaypointPathWithSpeed"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Use this block to set a fixed speed of the agent during each interval in the path."
   },
   "WaypointPathWithTimestamps": {
    "title": "WaypointPathWithTimestamps",
    "required": [
     "name",
     "waypoints",
     "timestamps"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "name": {
      "title": "Name",
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
     },
     "waypoints": {
      "title": "Waypoints",
      "anyOf": [
       {
        "type": "array",
        "items": {
         "$ref": "#/components/schemas/Position"
        }
       },
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "List of waypoints in the path"
     },
     "edges": {
      "title": "Edge",
      "type": "array",
      "items": {
       "type": "object",
       "additionalProperties": {
        "type": "number"
       }
      },
      "description": "Edges of the path"
     },
     "leg": {
      "title": "Leg",
      "minimum": 0.0,
      "type": "integer",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current leg of the path"
     },
     "legProgress": {
      "title": "Leg Progress",
      "maximum": 1.0,
      "minimum": 0.0,
      "type": "number",
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Progress along the current leg"
     },
     "position": {
      "title": "Position",
      "allOf": [
       {
        "$ref": "#/components/schemas/Position"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current position along the path"
     },
     "velocity": {
      "title": "Velocity",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model.<br/>Current velocity along the path"
     },
     "timeStepDriver": {
      "title": "Time Step Driver",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "**Time-Variable Attribute:** Set this field to overwrite the initial state of the model."
     },
     "timestamps": {
      "title": "Timestamps",
      "type": "array",
      "items": {
       "type": "number"
      },
      "description": "List of timestamps for each waypoint in MJD."
     },
     "type": {
      "title": "Type",
      "enum": [
       "WaypointPathWithTimestamps"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "Use this block to timestamp the moment at which the Agent will arrive at each waypoint in the path."
   },
   "WeibullVariate": {
    "title": "WeibullVariate",
    "required": [
     "fn",
     "alpha",
     "beta"
    ],
    "type": "object",
    "properties": {
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "fn": {
      "title": "Fn",
      "enum": [
       "weibullvariate"
      ],
      "type": "string"
     },
     "alpha": {
      "title": "Alpha",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     },
     "beta": {
      "title": "Beta",
      "anyOf": [
       {
        "type": "integer"
       },
       {
        "type": "number"
       },
       {
        "type": "string"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "WidgetSpec": {
    "title": "WidgetSpec",
    "required": [
     "name",
     "title",
     "plots"
    ],
    "type": "object",
    "properties": {
     "id": {
      "title": "Id",
      "type": "string"
     },
     "disabled": {
      "title": "Disabled",
      "type": "boolean",
      "default": false,
      "original": "do not override this field"
     },
     "parentMenuItem": {
      "title": "ID of Associated MenuItem Block",
      "type": "string",
      "description": "Relationship to a single `MenuItem` block. Inverse key: `MenuItem.widgetSpecs`. On delete: `cascade` (delete this block when referenced block is deleted)."
     },
     "name": {
      "title": "Name",
      "type": "string"
     },
     "title": {
      "title": "Title",
      "type": "string"
     },
     "subtitle": {
      "title": "Subtitle",
      "type": "string"
     },
     "plots": {
      "title": "Plots",
      "type": "array",
      "items": {
       "anyOf": [
        {
         "$ref": "#/components/schemas/LineSpec"
        },
        {
         "$ref": "#/components/schemas/BoolSpec"
        },
        {
         "$ref": "#/components/schemas/PieSpec"
        },
        {
         "$ref": "#/components/schemas/TableSpec"
        },
        {
         "$ref": "#/components/schemas/MarginSpec"
        },
        {
         "$ref": "#/components/schemas/HorizontalBarSpec"
        },
        {
         "$ref": "#/components/schemas/ConOpsSpec"
        }
       ]
      }
     },
     "each": {
      "title": "Each",
      "type": "string"
     },
     "type": {
      "title": "Type",
      "enum": [
       "WidgetSpec"
      ],
      "type": "string",
      "description": "The \"type\" (class name) of the Block"
     }
    },
    "additionalProperties": false,
    "description": "A WidgetSpec Block"
   },
   "modsim__models__blocks__scenario__overrideset__Variable": {
    "title": "Variable",
    "required": [
     "name"
    ],
    "type": "object",
    "properties": {
     "name": {
      "title": "Name",
      "type": "string"
     },
     "path": {
      "title": "Path",
      "type": "string"
     },
     "agent_key": {
      "title": "Agent Key",
      "type": "string"
     },
     "equals": {
      "title": "Equals",
      "anyOf": [
       {
        "type": "string"
       },
       {
        "type": "integer"
       },
       {
        "type": "number"
       }
      ]
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "modsim__models__blocks__scenario__widget_spec__Variable": {
    "title": "Variable",
    "required": [
     "legend"
    ],
    "type": "object",
    "properties": {
     "each": {
      "title": "Each",
      "type": "string"
     },
     "keys": {
      "title": "Keys",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "legend": {
      "title": "Legend",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    },
    "additionalProperties": false,
    "description": "Inherit from this class to type fields on a `Metamodel`, `Block` or `FieldSchema`"
   },
   "services__model__spec_models__SimulationJob__Statuses": {
    "title": "Statuses",
    "enum": [
     "PENDING",
     "RUNNING",
     "PAUSED",
     "TERMINATED",
     "FAILED",
     "SUCCEEDED",
     "ERROR"
    ],
    "description": "An enumeration."
   },
   "services__model__spec_models__StudyJob__Statuses": {
    "title": "Statuses",
    "enum": [
     "PENDING",
     "RUNNING",
     "PAUSED",
     "TERMINATED",
     "FAILED",
     "SUCCEEDED",
     "ERROR"
    ],
    "description": "An enumeration."
   }
  }
 },
 "tags": [
  {
   "name": "Branches",
   "description": ""
  },
  {
   "name": "Data",
   "description": "\n### Queries\n\nAs of October 2023, Sedaro's data service has been overhauled. Different parameters are now required for requests. If your simulation\nwas run before this time, you will continue to use the old interface (see below). \n\nThe data service now returns data in pages, instead of all at once. Data for a sim, within the given query parameters, is progressively\nadded to a page until it is full. At that point, the page is sent to the client and the server begins assembling the next page. This continues\nuntil all data for the query has been fetched and paginated.\n\nDownsampling has also been reworked. Instead of specifying an arbitrary number of bins, or an arbitrary bin width, data is now available\nfor egress at fixed resolutions, following the powers of 2. Therefore, data can be downloaded at full resolution, at 1/2 resolution, at\n1/4 resolution, and so on. This is achieved by including, respectively, every frame, every second frame, every fourth frame, and so forth.\nThis way, unlike in the previous downsampling scheme, more data points will be presented where the data is dense, and fewer data points\nwill be presented where the data is sparse.\n\nThe desired downsample level, or 'rank', are specified by the `sampleRate` parameter. The value of `sampleRate` corresponds to the\ndenominator of the corresponding downsample level. For instance, to request data at 1/8 resolution, set a `sampleRate` resolution of 8.\nTo request data at full resolution, set `sampleRate` to 1.\n\nHere is an example, looking at the first 40 frames of a data series. '#' indicates a frame included in the series of a given rank.\n'_' indicates a frame *not* included in that rank.\n\n1   # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n2   # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _ # _\n4   # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _ # _ _ _\n8   # _ _ _ _ _ _ _ # _ _ _ _ _ _ _ # _ _ _ _ _ _ _ # _ _ _ _ _ _ _ # _ _ _ _ _ _ _ \n16  # _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ # _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ # _ _ _ _ _ _ _\n32  # _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ # _ _ _ _ _ _ _\n\nA separate query is made for each page. Each returned page contains a 'continuation token' in its body. Inside the response content,\nthis continuation token can be found at response['meta']['continuationToken']. Pass this value as the `continuationToken` for the\nnext page you request. Continue doing so until an empty token is returned. At that point, there is no more data to return, and\nfurther page requests should not be made.\n\nIn all requests, either a sampleRate or a continuation token must be provided. It is not necessary to specify a sampleRate when a request\nincludes a continuation token.\n\nNew interface:\n- `id`: The ID of the data set to query.  This ID is defined on a [Simulation Job](#tag/Jobs).\n- `start`: The start time of the window in MJD. If omitted, defaults to the minimum timestamp in the dataset.\n- `stop`: The stop time of the window in MJD. If omitted, defaults to the maximum timestamp in the dataset.\n- `streams`: (optional) The specific agents and engines for which to fetch data. If omitted, all streams are fetched.\n    This argument takes the form of a list of requests separated by commas.\n    A request can have either one or two elements. The first element is always the ID of the Agent (str).\n    The second element (optional) is the name of an engine (str). This must be one of the following: 'GNC', 'CDH', 'Power', 'Thermal'.\n    If the second element is not provided, all data from all engines of the given Agent are fetched. If a request has two elements, they are\n    separated by a period. Here is an example:\n\n    ...&streams=NT06aqHUT5djI1_JPAsck.CDH,NT06aqHUT5djI1_JPAsck.Power,NT0Ln1gS8elWEK4Y-l7m-\n\n    This will fetch the Power and CDH data for Agent(id='NT06aqHUT5djI1_JPAsck'), and all data for\n    Agent(id='NT0Ln1gS8elWEK4Y-l7m-').\n- `shape` (optional): Specifies whether the data should be nested or flat. Options: `FLAT` (default) and `NESTED`. Examples:\n    Flat: {'a.b': [1, 2, 3], 'a.c': [4, 5, 6]}\n    Nested: {'a': {'b': [1, 2, 3], 'c': [4, 5, 6]}}\n- `axisOrder`: (optional) The shape of each series in the response. Options: `TIME_MINOR` (default) and `TIME_MAJOR`. NOTE: unlike the old\n    Data Service in which the default was `TIME_MAJOR`, the default in the new Data Service is `TIME_MINOR`. Examples:\n    Data at time 1: [1, 2]\n    Data at time 2: [3, 4]\n    Data at time 3: [5, 6]\n    TIME_MINOR: [[1, 3, 5], [2, 4, 6]]\n    TIME_MAJOR: [[1, 2], [3, 4], [5, 6]]\n- `binWidth`: (optional, temporarily disabled) The bin width to use to down-sample the data.  If omitted, data will be full resolution.\n- `sampleRate`: (optional) The downsampling rank to use. `1` for full resolution, `2` for half resolution, `4` for 1/4 resolution,\n    and so on. Must be an integer power of 2. Required if no `continuationToken` is provided.\n- 'continuationToken' (optional) Required if no `sampleRate` is provided. Retrieved from the previously fetched page, as described above.\n\n    Note: Timestamps of individual data points are left-inclusive and right-exclusive. For example, if `start` is 2 and `stop` is 5,\n    and there are timestamps at 1, 3, and 5, all three data points will be included, not just the data points at 1 and 3. This is\n    because the data point at timestamp 1 is valid for the time range [1, 3) and part of this time range is included in the query.\n\n\nFor simulation runs performed before the release and deployment of Data Service v3 in October 2023, continue to use the following interface:\n\n- `id`: The ID of the data set to query.  This ID is defined on a [Simulation Job](#tag/Jobs).\n- `start`: The start time of the window in MJD. If omitted, defaults to the minimum timestamp in the dataset.\n- `stop`: The stop time of the window in MJD. If omitted, defaults to the maximum timestamp in the dataset.\n- `binWidth`: (optional) The bin width to use to down-sample the data.  If omitted, data will be full resolution.\n- `axisOrder`: (optional) The shape of each series in the response. Options: `TIME_MAJOR` (default) and `TIME_MINOR`.\n- `streams`: (optional) The specific agents and engines for which to fetch data. If omitted, all streams are fetched.\n    This argument, if provided, follows the same syntax specified above for the `streams` parameter in the new interface.\n\n    Example request: `GET: /data/<id>?start=<start>&stop=<stop>&binWidth=<binWidth>`\n\n#### Response\n\nData is returned from a query in the following format:\n\n```jsonc\n{\n    \"series\": {\n        <streamId>: [\n            [<timestamp1::MJD>, <timestamp2::MJD>, ...],\n            {\n                <agentId>: {\n                    <blockId>: {\n                        <stateVariableA>: [<valueA1>, <valueA2>, ...],\n                        <stateVariableB>: [<valueB1>, <valueB2>, ...],\n                        ...\n                    },\n                    <stateVariableC>: [<valueC1>, <valueC2>, ...]\n                },\n                ...\n            }\n        ],\n        ...\n    }\n}\n```\n\nNote that a \"Stream\" is a set of state variables that share the same timestamps.  Specifically, the values in a Stream\ncorrespond to a modsim Engine of a particular Agent.  The `series` object contains a key for each stream in the data set.\nThe value of each stream key is a 2-element array.  The first element is an array of timestamps - the X-axis for all variables\nin the stream.  The second element is an object containing the state variables that compose the stream.  The state variables\nare grouped under an Agent ID and then a Block ID (if applicable).  The value of each entry is an array of values that aligns\nwith the timestamp vector.\n\n#### Axis Order (`axisOrder`)\n\nAxis order defines the shape of each multi-dimensional series in the Data Service query response.  In the following example,\n`n` is the time dimension, `position` is a notional State Variable of shape `(3,)`, and `matrix` is a notional State Variable\nof shape `(3, 4)`.\n\n**`TIME_MAJOR`**\n- `position.shape == (n, 3)`\n- `matrix.shape == (n, 3, 4)`\n\n**`TIME_MINOR`**\n- `position.shape == (3, n)`\n- `matrix.shape == (3, 4, n)`\n"
  },
  {
   "name": "MetaModels",
   "description": "\n#### Introduction to Modeling in Sedaro\n\nSedaro uses **SedaroML** (Sedaro Modeling Language) to define models and systems of models. SedaroML defines system\nproperties and structure as normalized, interrelated, and hierarchical blocks of attributes. SedaroML is JSON-based and\nis designed to be easily human and machine readable/writeable. This includes model interpretation, traversal, etc. Each\nSedaroML model class defining the structure and properties of a system is called a `Metamodel`.\n\n`Metamodel` classes are instantiated to create instances of the system. `Metamodel` instances consist of a set of\n`Block`s and `attributes` (described below) and can be either **Agent Templates** or **Scenarios**.\n\n- Agent Templates: define the model for a system.\n- Scenarios: define the instantiation of a system and the configuration of the simulation.\n\nWhen a Scenario configures a simulation, it instantiates Agent Templates to create **Agents**.  The Agents are then\nconnected to each other to form a system of systems.  This system is then simulated according to the Scenario's configuration.\n\nTo help with organization and other functionality, each instantiated `Metamodel` is associated with a `Branch` that is apart\nof a `Repository`. This allows for versioning, branching, merging, and tracking of changes to the `Metamodel` and the\nsystem it defines. The `Metamodel` is stored in the `data` key of the `Branch` JSON object.\n\n#### Other key concepts\n\nThere are some specific concepts in SedaroML that are important to understand:\n  - **Attributes:** Individual properties of a `Block` (e.g., `mass`, `voltage`, etc.) captured as a key-value pair.\n\n  - **Root:** The `root` refers to the highest level key/value pairs of the JSON-object of SedaroML. The keys are\n    attributes, just like on `Block`s, but `root` is not a `Block` itself. All `Metamodel`s contain `blocks` and `index`\n    attributes in `root` which store and help with querying for all `Block`s in the `Metamodel`.\n\n  - **Blocks:** A `Block` is a set of attributes, including a `type` which defines the type of the `Block` (e.g.,\n    `ReactionWheel`, `Battery`, etc.). All `Block`s are located under the `blocks` attribute of the model.\n\n  - **Hierarchy:** The `Block`s in a SedaroML model have hierarchy such that a `Block` `type` can extend one or more\n    `Block` `type`s (e.g., a `ReactionWheel` is a specialized `Actuator` and an `Actuator` is a specialized\n    `Component`). The hierarchy of a model can be interpreted using the `index` and `_supers` meta attributes of a\n    `Metamodel`.  `index` provides a lookup to traverse from a `Block` `type` to its sub-`Block` `type`s, ultimately\n    down to the individual `Block` instances in the model. `_supers` provides a lookup to traverse from a `Block` `type`\n    to its super-`Block` `type`s.\n\n  - **Relationships:** The model `root` and its `Block`s can be related to one another using relationship attributes.\n    The `_relationships` meta attribute provides a lookup from `Block` `type` to that `type`'s relationships attributes.\n\n  - **Quantity Kinds:** In SedaroML, an attribute that has a value and a unit is called a \"Quantity\". Quantities may be\n    composed of other Quantities, called Compound Quantities. A category of Quantities that share the same unit system\n    is called a \"Quantity Kind\".  If a model attribute is an explicit Quantity, it will be included in the\n    `_quantityKinds` meta attribute lookup. Attributes that are Explicit Quantity Kinds may be defined in any of the\n    supported units for the Quantity Kind. For example, all angle attributes in SedaroML may be defined in either\n    degrees or radians. If the unit isn't provided, the default unit for the given Quantity Kind is assumed.\n\nSedaroML is used to define both Agent Templates and Scenario models, with Scenario models referencing Agent Template    Branches (and therefore their models) via the `templateRef` attribute of an `Agent` Block.\n\nExample of a mock `Metamodel` instance in a `Branch` `data` key, demonstrating some of the meta attributes:\n```json\n{\n    \"type\": \"Spacecraft\",\n    \"blocks\": {\n        \"N05o9ixRguGxORKXZ_123\": {\n        \"id\": \"N05o9ixRguGxORKXZ_123\",\n            \"type\": \"Battery\",\n            \"packs\": [\"N05oGhcT-9k9vSTAGn456\"]\n        },\n        \"N05oGhcT-9k9vSTAGn456\": {\n            \"id\": \"N05oGhcT-9k9vSTAGn456\",\n            \"type\": \"BatteryPack\",\n            \"battery\": \"N05o9ixRguGxORKXZ_123\"\n        }\n        \"N05o79yULy9NUw1zTk789\": {\n        \"id\": \"N05o79yULy9NUw1zTk789\",\n            \"type\": \"ReactionWheel\",\n            \"inertia\": 0.1\n        },\n    },\n    \"index\": {\n        \"Actuator\": [\"ReactionWheel\"],\n        \"Component\": [\"Battery\", \"BatteryPack\", \"Actuator\"],\n        \"Battery\": [\"N05o9ixRguGxORKXZ_123\"],\n        \"BatteryPack\": [\"N05oGhcT-9k9vSTAGn456\"],\n        \"ReactionWheel\": [\"N05o79yULy9NUw1zTk789\"]\n    },\n    \"_relationships\": {\n        \"Battery\": {\n            \"packs\": {\n                \"inverse\": \"battery\",\n                \"onDelete\": \"set-none\",\n                \"optional\": true,\n                \"target\": \"BatteryPack\",\n                \"type\": \"ManySide\"\n            },\n        },\n        \"BatteryPack\": {\n            \"battery\": {\n                \"inverse\": \"packs\",\n                \"onDelete\": \"set-none\",\n                \"optional\": false,\n                \"target\": \"Battery\",\n                \"type\": \"OneSide\"\n            },\n        },\n    },\n}\n```\n"
  },
  {
   "name": "Externals",
   "description": "\n### Introduction\n\"Cosimulation\" refers to multiple simulators working in conjunction to simulate something. Cosimulation in Sedaro is\nachieved via the definition of `ExternalState` `Block`s within a Scenario model.  `ExternalState` `Block`s are related to\none or more `Agent` `Block`s in the Scenario model and they define the external cosimulation interfaces.  Interfaces can\nbe uni- or bi-directional and support two different modes: `Per-Round` and `Spontaneous`.\n\n### Cosimulation Modes\nIn `Per-Round` cosimulation, the external simulator is expected to produce and/or consume state at each \"round\" or\nsimulation Engine time-step. In `Spontaneous` cosimulation, the external simulator may produce and/or consume state at\nany time. This method of cosimulation is recommended for real-time simulations (`ClockConfig.realTime == true`) and\nis important for use-cases such as commanding a system or part of a system to a new state (i.e., human/software-in-the-loop).\n\n`Spontaneous` state is timestamped and interpreted such that it impacts the simulation during the round at or immediately\nfollowing the `timestamp`. Spontaneous state production is also unique in that it is not required to ever provide a\nvalue and can remain optionally unused during a simulation. In this case, the simulation will continue to consume the\ninitial value for the state until a new value is provided.\n\nEach cosimulation interface is independent meaning some may be `Per Round` while others are `Spontaneous`.  This also\nmeans that individual cosimulators can consume/produce state simulataneously over different interfaces.\n\n### Blocking vs Non-Blocking\n#### Per-Round\nIf simulation state depends on `produced` external state, the simulation will block (or wait) until this state is provided\nvia the following `PATCH` endpoint.  Once provided, the simulation will continue until it is blocked again. Anything that\nis not dependent on the external state will continue to run during the blocking period.\n\n#### Spontaneous\nSpontaneous external state will never block the simulation but will take effect upon arrival.\n\n#### Consume\nCalling `consume` with a `time` value that the simulation hasn't reached yet will block until the simulation catches up.\nThis is currently subject to a **10 minute timeout**. If the request fails after 10 minutes, it is recommended that it\nbe reattempted.\n\nSimilarly, calling `consume` with a `time` that too far lags the current simulation might result in an error as the\nvalue has been garbage collected from the simulation caches and is no longer available for retrieval. If this is the\ncase, please fetch the data from the Data Service (via the Results API) instead.\n\n### Numpy Array Serialization/Deserialization\nBecause all requests and responses of this API must be JSON serializable, numpy arrays are represented in the following\nway in both API requests and responses (as a representation of the value `np.array([x, y, z])`):\n\n```jsonc\n{\n    \"ndarray\": [x, y, z]\n}\n```\n\n### Configuring Cosimulation\nCosimulation interfaces are configured via the definition of `ExternalState` Blocks on the [Scenario model](#tag/MetaModels) before the simulation\nis started. The currently supported Blocks are `PerRoundExternalState` and `SpontaneousExternalState`.\n\nSee the [MetaModels](#tag/MetaModels) section for details on defining Blocks and their individual attributes.\n\nExample Blocks:\n\n```jsonc\n// Per Round External State Block\n{\n    \"id\": \"NZ2SGPWRnmdJhwUT4GD5k\",\n    \"type\": \"PerRoundExternalState\",\n    \"produced\": [{\"root\": \"velocity\"}], // Implicit QuantityKind\n    \"consumed\": [{\"prev.root.position.as\": \"Position.eci\"}], // Explicit QuantityKind\n    \"engineIndex\": 0, // 0: GNC, 1: C&DH, 2: Power, 3: Thermal\n    \"agents\": [\"NSghFfVT8ieam0ydeZGX-\"]\n}\n\n// Spontaneous External State Block\n{\n    \"id\": \"NZ2SHUkS95z1GtmMZ0CTk\",\n    \"type\": \"SpontaneousExternalState\",\n    \"produced\": [{\"root\": \"activeOpMode\"}],\n    \"consumed\": [{\"prev.root.position.as\": \"Position.eci\"}],\n    \"engineIndex\": 0, // 0: GNC, 1: C&DH, 2: Power, 3: Thermal\n    \"agents\": [\"NSghFfVT8ieam0ydeZGX-\"]\n}\n```\n\nOnce the simulation is running, the following endpoints are used to interact with any cosimulation interfaces.\n"
  }
 ],
 "x-tagGroups": [
  {
   "name": "MetaModels",
   "tags": [
    "MetaModels"
   ]
  },
  {
   "name": "Simulation",
   "tags": [
    "Jobs"
   ]
  },
  {
   "name": "Data",
   "tags": [
    "Data"
   ]
  },
  {
   "name": "Repositories",
   "tags": [
    "Repositories",
    "Branches"
   ]
  },
  {
   "name": "Cosimulation",
   "tags": [
    "Externals"
   ]
  }
 ]
}